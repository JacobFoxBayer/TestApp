{"version":3,"file":"index.es.js","sources":["../generated/propTypes.js","../Switch.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { deprecatedProp } from \"@element/react-common\";\n\n/**\n *\n * This file is automatically generated by the Element\n * documentation system. Any modifications to this file\n * will be overwritten!\n *\n */\n\nexport const SwitchPropTypes = {\n  /**\n   * Aligns switch to the right of the label.\n   *\n   * Defaults to **false**.\n   */\n  alignEnd: PropTypes.bool,\n  /**\n   * The current value of the switch.\n   *\n   * Defaults to **false**.\n   */\n  checked: PropTypes.bool,\n  /**\n   * @deprecated _Use `label` instead._\n   *\n   * Primary content of the switch. Expects a valid string. If `children` and `label` are both set, `label` will take priority.\n   *\n   * Defaults to **undefined**.\n   */\n  children: deprecatedProp(PropTypes.node, \"Switch\", \"Use `label` instead.\"),\n  /**\n   * The css class name to be passed through to the component markup.\n   *\n   * Defaults to **undefined**.\n   */\n  className: PropTypes.string,\n  /**\n   * Prevent the user from interacting with the control.\n   *\n   * Defaults to **false**.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The label not be displayed, but will still be available to screen readers.\n   *\n   * Defaults to **false**.\n   */\n  hideLabel: PropTypes.bool,\n  /**\n   * The html id for the input.\n   *\n   * Defaults to **undefined**.\n   */\n  id: PropTypes.string,\n  /**\n   * Props to send to the html input\n   *\n   * Defaults to **undefined**.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Display label. The `label` should always be set even when using `hideLabel` - it will be used by screen readers.\n   *\n   * Defaults to **'Off|On'**.\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Fired when the control is clicked.\n   *\n   * Defaults to **null**.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Color of the switch according to the theme.\n   *\n   * Defaults to **'primary'**.\n   */\n  themeColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n  /**\n   * When a switch button is checked, this value will be returned as the second parameter of the `change` handler.\n   *\n   * Defaults to **null**.\n   */\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.object,\n  ]),\n};\n\nexport const SwitchDefaultProps = {\n  alignEnd: false,\n  checked: false,\n  children: undefined,\n  className: undefined,\n  disabled: false,\n  hideLabel: false,\n  id: undefined,\n  inputProps: undefined,\n  label: \"Off|On\",\n  themeColor: \"primary\",\n  value: null,\n};\n","import React, {\n    useRef,\n    useEffect,\n    useState,\n    forwardRef,\n    useImperativeHandle\n} from 'react';\nimport { MDCSwitch } from '@material/switch';\nimport { FormField } from '@element/react-form-field';\nimport clsx from 'clsx';\nimport { edsRandomId } from '@element/shared';\nimport { SwitchPropTypes, SwitchDefaultProps } from './generated/propTypes';\n\nconst Switch = forwardRef((props, externalRef) => {\n    const {\n        alignEnd,\n        checked,\n        children,\n        className,\n        disabled,\n        hideLabel,\n        id,\n        inputProps,\n        label,\n        onChange,\n        themeColor,\n        value,\n        ...customProps\n    } = props;\n\n    const [idActual] = useState(() => id || edsRandomId());\n    const switchRef = useRef();\n    const mdcSwitch = useRef();\n    const content = label || children;\n\n    useImperativeHandle(externalRef, () => switchRef.current, []);\n\n    const handleChange = event => {\n        onChange?.(event.target.checked, value, event);\n    };\n\n    useEffect(() => {\n        mdcSwitch.current = MDCSwitch.attachTo(switchRef.current);\n\n        return () => {\n            mdcSwitch.current?.destroy();\n        };\n    }, []);\n\n    useEffect(() => {\n        mdcSwitch.current.checked = !!checked;\n    }, [checked]);\n\n    return (\n        <FormField inputRef={mdcSwitch} alignEnd={alignEnd}>\n            <div\n                ref={switchRef}\n                className={clsx(\n                    'lmnt mdc-switch lmnt-switch',\n                    disabled && 'mdc-switch--disabled',\n                    themeColor && `lmnt-switch--${themeColor}`,\n                    className\n                )}\n                {...customProps}\n            >\n                <div className='mdc-switch__track' />\n                <div className='mdc-switch__thumb-underlay'>\n                    <div className='mdc-switch__thumb' />\n                    <input\n                        onChange={handleChange}\n                        disabled={disabled}\n                        type='checkbox'\n                        id={idActual}\n                        role='switch'\n                        {...inputProps}\n                        className={clsx(\n                            'mdc-switch__native-control',\n                            inputProps?.className\n                        )}\n                        value={value}\n                    />\n                </div>\n            </div>\n            <label\n                className={clsx(\n                    'lmnt-switch-label mdc-switch-label',\n                    hideLabel && 'sr-only'\n                )}\n                htmlFor={idActual}\n            >\n                {content}\n            </label>\n        </FormField>\n    );\n});\n\nSwitch.displayName = 'Switch';\nSwitch.propTypes = SwitchPropTypes;\nSwitch.SwitchDefaultProps = SwitchDefaultProps;\n\nexport default Switch;\n"],"names":["SwitchPropTypes","alignEnd","PropTypes","bool","checked","children","deprecatedProp","node","className","string","disabled","hideLabel","id","inputProps","object","label","isRequired","onChange","func","themeColor","oneOf","value","oneOfType","number","SwitchDefaultProps","undefined","Switch","forwardRef","props","externalRef","customProps","idActual","useState","edsRandomId","switchRef","useRef","mdcSwitch","content","useImperativeHandle","current","handleChange","event","target","useEffect","MDCSwitch","attachTo","_mdcSwitch$current","destroy","React","createElement","FormField","inputRef","_extends","ref","clsx","type","role","htmlFor","displayName","propTypes"],"mappings":"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"}