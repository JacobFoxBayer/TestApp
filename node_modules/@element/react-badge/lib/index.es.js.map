{"version":3,"file":"index.es.js","sources":["../generated/propTypes.js","../NotificationBadge.js","../LabelBadge.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { deprecatedOneOf } from \"@element/react-common\";\n\n/**\n *\n * This file is automatically generated by the Element\n * documentation system. Any modifications to this file\n * will be overwritten!\n *\n */\n\nexport const BadgePropTypes = {};\n\nexport const BadgeDefaultProps = {};\n\n/**\n *\n * This file is automatically generated by the Element\n * documentation system. Any modifications to this file\n * will be overwritten!\n *\n */\n\nexport const LabelBadgePropTypes = {\n  /**\n   *  Label to be displayed in the Badge. Usually a string, but can also be an x-small icon.\n   *\n   * Defaults to **null**.\n   */\n  label: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.node,\n  ]),\n  /**\n   *  Label type to be displayed in the Badge.\n   *\n   * Defaults to **'string'**.\n   */\n  labelType: PropTypes.oneOf([\"string\", \"icon\"]),\n  /**\n   * Adds the given Icon to the left of the label text. May not be used with `trailingIcon` or if `labelType` is icon - if `leadingIcon` and `trailingIcon` are both set, `leadingIcon` will take priority.  If `labelType` is set to `icon` label will take priority.  Expects the name of a valid Material.io icon, however an icon component may be passed in instead for more control.  If a custom icon is used, the icon should not be larger than 9 x 9.\n   *\n   * Defaults to **undefined**.\n   */\n  leadingIcon: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.node,\n  ]),\n  /**\n   * Color of the badge. It will default according to your theme.  For most themes that is primary.\n   *\n   * Defaults to **'themeDefault'**.\n   */\n  themeColor: deprecatedOneOf(\n    PropTypes.oneOf([\n      \"themeDefault\",\n      \"primary\",\n      \"secondary\",\n      \"danger\",\n      \"success\",\n      \"blue\",\n      \"gray\",\n      \"green\",\n      \"orange\",\n      \"purple\",\n      \"red\",\n      \"teal\",\n      \"yellow\",\n      \"primary-variant\",\n      \"no-bg-on-dark\",\n    ]),\n    [\"primaryVariant\"],\n    \"LabelBadge\",\n    \"Please use one of 'themeDefault','primary','secondary','danger','success','blue','gray','green','orange','purple','red','teal','yellow','primary-variant','no-bg-on-dark'.\"\n  ),\n  /**\n   * Adds the given Icon to the right of the label text. May not be used with `leadingIcon` or if `labelType` is icon - if `leadingIcon` and `trailingIcon` are both set, `leadingIcon` will take priority.  If `labelType` is set to `icon` label will take priority.  Expects the name of a valid Material.io icon, however an icon component may be passed in instead for more control.\n   *\n   * Defaults to **undefined**.\n   */\n  trailingIcon: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.node,\n  ]),\n};\n\nexport const LabelBadgeDefaultProps = {\n  label: null,\n  labelType: \"string\",\n  leadingIcon: undefined,\n  themeColor: \"themeDefault\",\n  trailingIcon: undefined,\n};\n\n/**\n *\n * This file is automatically generated by the Element\n * documentation system. Any modifications to this file\n * will be overwritten!\n *\n */\n\nexport const NotificationBadgePropTypes = {\n  /**\n   *  Number to be displayed in badge. Omit for a status light badge.\n   *\n   * Defaults to **null**.\n   */\n  counter: PropTypes.number,\n  /**\n   * Max number the badge can display.\n   *\n   * Defaults to **99**.\n   */\n  max: PropTypes.number,\n  /**\n   *  Theme color of the badge.\n   *\n   * Defaults to **'danger'**.\n   */\n  themeColor: PropTypes.oneOf([\"primary\", \"secondary\", \"danger\", \"success\"]),\n};\n\nexport const NotificationBadgeDefaultProps = {\n  counter: null,\n  max: 99,\n  themeColor: \"danger\",\n};\n","import clsx from 'clsx';\nimport React, {\n    useEffect,\n    useRef,\n    useState,\n    useImperativeHandle,\n    forwardRef\n} from 'react';\nimport {\n    NotificationBadgePropTypes,\n    NotificationBadgeDefaultProps\n} from './generated/propTypes';\n\nconst getCounter = (counter, max) => {\n    if (!counter && counter !== 0) return null;\n    if (counter <= max) return counter;\n    return `${max}+`;\n};\n\nconst NotificationBadge = forwardRef((props, externalRef) => {\n    const { className, counter, max, themeColor, ...customProps } = props;\n\n    const ref = useRef();\n    const [counterActual, setCounterActual] = useState(\n        getCounter(counter, max)\n    );\n\n    useEffect(() => setCounterActual(getCounter(counter, max)), [counter, max]);\n\n    useImperativeHandle(externalRef, () => ref.current, []);\n\n    const classNames = clsx(\n        'lmnt',\n        'lmnt-badge',\n        'lmnt-badge--notification',\n        `lmnt-badge--notification-${themeColor}`,\n        'mdc-typography--caption-bold',\n        (counterActual || counterActual === 0) &&\n            'lmnt-badge--notification-badge-counter',\n        className\n    );\n\n    return (\n        <div ref={ref} className={classNames} {...customProps}>\n            {counterActual && counterActual}\n        </div>\n    );\n});\n\nNotificationBadge.displayName = 'NotificationBadge';\nNotificationBadge.propTypes = NotificationBadgePropTypes;\nNotificationBadge.defaultProps = NotificationBadgeDefaultProps;\n\nexport default NotificationBadge;\n","import clsx from 'clsx';\nimport React, { useMemo, useRef, useImperativeHandle, forwardRef } from 'react';\nimport { addProps } from '@element/react-common';\nimport { Icon } from '@element/react-icon';\nimport {\n    LabelBadgePropTypes,\n    LabelBadgeDefaultProps\n} from './generated/propTypes';\n\nconst LabelBadge = forwardRef((props, externalRef) => {\n    const {\n        className,\n        label,\n        labelType,\n        leadingIcon,\n        trailingIcon,\n        themeColor,\n        ...customProps\n    } = props;\n\n    const ref = useRef();\n\n    useImperativeHandle(externalRef, () => ref.current, []);\n\n    const classNames = clsx(\n        'lmnt',\n        'lmnt-badge',\n        'lmnt-badge--label',\n        `lmnt-badge--label-${themeColor}`,\n        'mdc-typography--caption-bold',\n        labelType === 'icon' && 'lmnt-badge--label-icon-as-label',\n        leadingIcon && 'lmnt-badge--label-leading-icon',\n        trailingIcon && 'lmnt-badge--label-trailing-icon',\n        className\n    );\n\n    const leadingIconActual = useMemo(() => {\n        if (labelType === 'icon' || !leadingIcon) {\n            return null;\n        }\n        if (typeof leadingIcon === 'string') {\n            return (\n                <Icon\n                    className='lmnt-badge-label__leading-icon'\n                    icon={leadingIcon}\n                    iconSize='xsmall'\n                />\n            );\n        }\n        if (typeof leadingIcon === 'function') {\n            return leadingIcon({\n                className: 'lmnt-icon--xsmall lmnt-badge-label__leading-icon'\n            });\n        }\n        return addProps(leadingIcon, {\n            className: clsx(\n                'lmnt-badge-label__leading-icon',\n                leadingIcon?.props?.className\n            )\n        });\n    }, [labelType, leadingIcon]);\n\n    const labelActual = useMemo(() => {\n        if (labelType === 'string') {\n            return label;\n        }\n        if (typeof label === 'string') {\n            return (\n                <Icon\n                    className='lmnt-badge-label-icon'\n                    icon={label}\n                    iconSize='xsmall'\n                />\n            );\n        }\n        if (typeof label === 'function') {\n            return label({\n                className: 'lmnt-icon--xsmall lmnt-badge-label-icon'\n            });\n        }\n\n        return addProps(label, {\n            className: clsx(\n                'lmnt-badge-label-icon',\n                'lmnt-icon--xsmall',\n                label?.props?.className\n            )\n        });\n    }, [labelType, label]);\n\n    const trailingIconActual = useMemo(() => {\n        if (!trailingIcon || labelType === 'icon' || leadingIconActual) {\n            return null;\n        }\n        if (typeof trailingIcon === 'string') {\n            return (\n                <Icon\n                    className='lmnt-badge-label__trailing-icon'\n                    icon={trailingIcon}\n                    iconSize='xsmall'\n                />\n            );\n        }\n        if (typeof trailingIcon === 'function') {\n            return trailingIcon({\n                className: 'lmnt-icon--xsmall lmnt-badge-label__trailing-icon'\n            });\n        }\n        return addProps(trailingIcon, {\n            className: clsx(\n                'lmnt-badge-label__trailing-icon',\n                trailingIcon?.props?.className\n            )\n        });\n    }, [labelType, trailingIcon, leadingIconActual]);\n\n    return (\n        <div ref={ref} className={classNames} {...customProps}>\n            {leadingIconActual && leadingIconActual}\n            <span className='lmnt-badge--label__label'>{labelActual}</span>\n            {trailingIconActual && trailingIconActual}\n        </div>\n    );\n});\n\nLabelBadge.displayName = 'LabelBadge';\nLabelBadge.propTypes = LabelBadgePropTypes;\nLabelBadge.defaultProps = LabelBadgeDefaultProps;\n\nexport default LabelBadge;\n"],"names":["LabelBadgePropTypes","label","PropTypes","oneOfType","string","func","node","labelType","oneOf","leadingIcon","themeColor","deprecatedOneOf","trailingIcon","LabelBadgeDefaultProps","undefined","NotificationBadgePropTypes","counter","number","max","NotificationBadgeDefaultProps","getCounter","NotificationBadge","forwardRef","props","externalRef","className","customProps","ref","useRef","counterActual","setCounterActual","useState","useEffect","useImperativeHandle","current","classNames","clsx","React","createElement","_extends","displayName","propTypes","defaultProps","LabelBadge","leadingIconActual","useMemo","_leadingIcon$props","Icon","icon","iconSize","addProps","labelActual","_label$props","trailingIconActual","_trailingIcon$props"],"mappings":";;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,MAAMA,mBAAmB,GAAG;AACjC;AACF;AACA;AACA;AACA;AACEC,EAAAA,KAAK,EAAEC,SAAS,CAACC,SAAS,CAAC,CACzBD,SAAS,CAACE,MAAM,EAChBF,SAAS,CAACG,IAAI,EACdH,SAAS,CAACI,IAAI,CACf,CAAC;AACF;AACF;AACA;AACA;AACA;EACEC,SAAS,EAAEL,SAAS,CAACM,KAAK,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AAC9C;AACF;AACA;AACA;AACA;AACEC,EAAAA,WAAW,EAAEP,SAAS,CAACC,SAAS,CAAC,CAC/BD,SAAS,CAACE,MAAM,EAChBF,SAAS,CAACG,IAAI,EACdH,SAAS,CAACI,IAAI,CACf,CAAC;AACF;AACF;AACA;AACA;AACA;EACEI,UAAU,EAAEC,eAAe,CACzBT,SAAS,CAACM,KAAK,CAAC,CACd,cAAc,EACd,SAAS,EACT,WAAW,EACX,QAAQ,EACR,SAAS,EACT,MAAM,EACN,MAAM,EACN,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,KAAK,EACL,MAAM,EACN,QAAQ,EACR,iBAAiB,EACjB,eAAe,CAChB,CAAC,EACF,CAAC,gBAAgB,CAAC,EAClB,YAAY,EACZ,4KAA4K,CAC7K;AACD;AACF;AACA;AACA;AACA;AACEI,EAAAA,YAAY,EAAEV,SAAS,CAACC,SAAS,CAAC,CAChCD,SAAS,CAACE,MAAM,EAChBF,SAAS,CAACG,IAAI,EACdH,SAAS,CAACI,IAAI,CACf,CAAA;AACH,CAAC,CAAA;AAEM,MAAMO,sBAAsB,GAAG;AACpCZ,EAAAA,KAAK,EAAE,IAAI;AACXM,EAAAA,SAAS,EAAE,QAAQ;AACnBE,EAAAA,WAAW,EAAEK,SAAS;AACtBJ,EAAAA,UAAU,EAAE,cAAc;AAC1BE,EAAAA,YAAY,EAAEE,SAAAA;AAChB,CAAC,CAAA;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,MAAMC,0BAA0B,GAAG;AACxC;AACF;AACA;AACA;AACA;EACEC,OAAO,EAAEd,SAAS,CAACe,MAAM;AACzB;AACF;AACA;AACA;AACA;EACEC,GAAG,EAAEhB,SAAS,CAACe,MAAM;AACrB;AACF;AACA;AACA;AACA;AACEP,EAAAA,UAAU,EAAER,SAAS,CAACM,KAAK,CAAC,CAAC,SAAS,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAA;AAC3E,CAAC,CAAA;AAEM,MAAMW,6BAA6B,GAAG;AAC3CH,EAAAA,OAAO,EAAE,IAAI;AACbE,EAAAA,GAAG,EAAE,EAAE;AACPR,EAAAA,UAAU,EAAE,QAAA;AACd,CAAC;;ACtHD,MAAMU,UAAU,GAAGA,CAACJ,OAAO,EAAEE,GAAG,KAAK;EACjC,IAAI,CAACF,OAAO,IAAIA,OAAO,KAAK,CAAC,EAAE,OAAO,IAAI,CAAA;AAC1C,EAAA,IAAIA,OAAO,IAAIE,GAAG,EAAE,OAAOF,OAAO,CAAA;EAClC,OAAQ,CAAA,EAAEE,GAAI,CAAE,CAAA,CAAA,CAAA;AACpB,CAAC,CAAA;AAEKG,MAAAA,iBAAiB,gBAAGC,UAAU,CAAC,CAACC,KAAK,EAAEC,WAAW,KAAK;EACzD,MAAM;IAAEC,SAAS;IAAET,OAAO;IAAEE,GAAG;IAAER,UAAU;IAAE,GAAGgB,WAAAA;AAAY,GAAC,GAAGH,KAAK,CAAA;EAErE,MAAMI,GAAG,GAAGC,MAAM,EAAE,CAAA;AACpB,EAAA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGC,QAAQ,CAC9CX,UAAU,CAACJ,OAAO,EAAEE,GAAG,CAAC,CAC3B,CAAA;AAEDc,EAAAA,SAAS,CAAC,MAAMF,gBAAgB,CAACV,UAAU,CAACJ,OAAO,EAAEE,GAAG,CAAC,CAAC,EAAE,CAACF,OAAO,EAAEE,GAAG,CAAC,CAAC,CAAA;EAE3Ee,mBAAmB,CAACT,WAAW,EAAE,MAAMG,GAAG,CAACO,OAAO,EAAE,EAAE,CAAC,CAAA;EAEvD,MAAMC,UAAU,GAAGC,IAAI,CACnB,MAAM,EACN,YAAY,EACZ,0BAA0B,EACzB,CAAA,yBAAA,EAA2B1B,UAAW,CAAA,CAAC,EACxC,8BAA8B,EAC9B,CAACmB,aAAa,IAAIA,aAAa,KAAK,CAAC,KACjC,wCAAwC,EAC5CJ,SAAS,CACZ,CAAA;AAED,EAAA,oBACIY,KAAA,CAAAC,aAAA,CAAA,KAAA,EAAAC,QAAA,CAAA;AAAKZ,IAAAA,GAAG,EAAEA,GAAI;AAACF,IAAAA,SAAS,EAAEU,UAAAA;AAAW,GAAA,EAAKT,WAAW,CAAA,EAChDG,aAAa,IAAIA,aAAa,CAC7B,CAAA;AAEd,CAAC,EAAC;AAEFR,iBAAiB,CAACmB,WAAW,GAAG,mBAAmB,CAAA;AACnDnB,iBAAiB,CAACoB,SAAS,GAAG1B,0BAA0B,CAAA;AACxDM,iBAAiB,CAACqB,YAAY,GAAGvB,6BAA6B;;AC1CxDwB,MAAAA,UAAU,gBAAGrB,UAAU,CAAC,CAACC,KAAK,EAAEC,WAAW,KAAK;EAClD,MAAM;IACFC,SAAS;IACTxB,KAAK;IACLM,SAAS;IACTE,WAAW;IACXG,YAAY;IACZF,UAAU;IACV,GAAGgB,WAAAA;AACP,GAAC,GAAGH,KAAK,CAAA;EAET,MAAMI,GAAG,GAAGC,MAAM,EAAE,CAAA;EAEpBK,mBAAmB,CAACT,WAAW,EAAE,MAAMG,GAAG,CAACO,OAAO,EAAE,EAAE,CAAC,CAAA;AAEvD,EAAA,MAAMC,UAAU,GAAGC,IAAI,CACnB,MAAM,EACN,YAAY,EACZ,mBAAmB,EAClB,CAAoB1B,kBAAAA,EAAAA,UAAW,EAAC,EACjC,8BAA8B,EAC9BH,SAAS,KAAK,MAAM,IAAI,iCAAiC,EACzDE,WAAW,IAAI,gCAAgC,EAC/CG,YAAY,IAAI,iCAAiC,EACjDa,SAAS,CACZ,CAAA;AAED,EAAA,MAAMmB,iBAAiB,GAAGC,OAAO,CAAC,MAAM;AAAA,IAAA,IAAAC,kBAAA,CAAA;AACpC,IAAA,IAAIvC,SAAS,KAAK,MAAM,IAAI,CAACE,WAAW,EAAE;AACtC,MAAA,OAAO,IAAI,CAAA;AACf,KAAA;AACA,IAAA,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE;AACjC,MAAA,oBACI4B,KAAA,CAAAC,aAAA,CAACS,IAAI,EAAA;AACDtB,QAAAA,SAAS,EAAC,gCAAgC;AAC1CuB,QAAAA,IAAI,EAAEvC,WAAY;AAClBwC,QAAAA,QAAQ,EAAC,QAAA;OACX,CAAA,CAAA;AAEV,KAAA;AACA,IAAA,IAAI,OAAOxC,WAAW,KAAK,UAAU,EAAE;AACnC,MAAA,OAAOA,WAAW,CAAC;AACfgB,QAAAA,SAAS,EAAE,kDAAA;AACf,OAAC,CAAC,CAAA;AACN,KAAA;IACA,OAAOyB,QAAQ,CAACzC,WAAW,EAAE;AACzBgB,MAAAA,SAAS,EAAEW,IAAI,CACX,gCAAgC,EAChC3B,WAAW,aAAXA,WAAW,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAAqC,kBAAA,GAAXrC,WAAW,CAAEc,KAAK,MAAA,IAAA,IAAAuB,kBAAA,KAAlBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,kBAAA,CAAoBrB,SAAS,CAAA;AAErC,KAAC,CAAC,CAAA;AACN,GAAC,EAAE,CAAClB,SAAS,EAAEE,WAAW,CAAC,CAAC,CAAA;AAE5B,EAAA,MAAM0C,WAAW,GAAGN,OAAO,CAAC,MAAM;AAAA,IAAA,IAAAO,YAAA,CAAA;IAC9B,IAAI7C,SAAS,KAAK,QAAQ,EAAE;AACxB,MAAA,OAAON,KAAK,CAAA;AAChB,KAAA;AACA,IAAA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;AAC3B,MAAA,oBACIoC,KAAA,CAAAC,aAAA,CAACS,IAAI,EAAA;AACDtB,QAAAA,SAAS,EAAC,uBAAuB;AACjCuB,QAAAA,IAAI,EAAE/C,KAAM;AACZgD,QAAAA,QAAQ,EAAC,QAAA;OACX,CAAA,CAAA;AAEV,KAAA;AACA,IAAA,IAAI,OAAOhD,KAAK,KAAK,UAAU,EAAE;AAC7B,MAAA,OAAOA,KAAK,CAAC;AACTwB,QAAAA,SAAS,EAAE,yCAAA;AACf,OAAC,CAAC,CAAA;AACN,KAAA;IAEA,OAAOyB,QAAQ,CAACjD,KAAK,EAAE;MACnBwB,SAAS,EAAEW,IAAI,CACX,uBAAuB,EACvB,mBAAmB,EACnBnC,KAAK,KAALA,IAAAA,IAAAA,KAAK,wBAAAmD,YAAA,GAALnD,KAAK,CAAEsB,KAAK,cAAA6B,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZA,YAAA,CAAc3B,SAAS,CAAA;AAE/B,KAAC,CAAC,CAAA;AACN,GAAC,EAAE,CAAClB,SAAS,EAAEN,KAAK,CAAC,CAAC,CAAA;AAEtB,EAAA,MAAMoD,kBAAkB,GAAGR,OAAO,CAAC,MAAM;AAAA,IAAA,IAAAS,mBAAA,CAAA;IACrC,IAAI,CAAC1C,YAAY,IAAIL,SAAS,KAAK,MAAM,IAAIqC,iBAAiB,EAAE;AAC5D,MAAA,OAAO,IAAI,CAAA;AACf,KAAA;AACA,IAAA,IAAI,OAAOhC,YAAY,KAAK,QAAQ,EAAE;AAClC,MAAA,oBACIyB,KAAA,CAAAC,aAAA,CAACS,IAAI,EAAA;AACDtB,QAAAA,SAAS,EAAC,iCAAiC;AAC3CuB,QAAAA,IAAI,EAAEpC,YAAa;AACnBqC,QAAAA,QAAQ,EAAC,QAAA;OACX,CAAA,CAAA;AAEV,KAAA;AACA,IAAA,IAAI,OAAOrC,YAAY,KAAK,UAAU,EAAE;AACpC,MAAA,OAAOA,YAAY,CAAC;AAChBa,QAAAA,SAAS,EAAE,mDAAA;AACf,OAAC,CAAC,CAAA;AACN,KAAA;IACA,OAAOyB,QAAQ,CAACtC,YAAY,EAAE;AAC1Ba,MAAAA,SAAS,EAAEW,IAAI,CACX,iCAAiC,EACjCxB,YAAY,aAAZA,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA0C,mBAAA,GAAZ1C,YAAY,CAAEW,KAAK,MAAA,IAAA,IAAA+B,mBAAA,KAAnBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,mBAAA,CAAqB7B,SAAS,CAAA;AAEtC,KAAC,CAAC,CAAA;GACL,EAAE,CAAClB,SAAS,EAAEK,YAAY,EAAEgC,iBAAiB,CAAC,CAAC,CAAA;AAEhD,EAAA,oBACIP,KAAA,CAAAC,aAAA,CAAA,KAAA,EAAAC,QAAA,CAAA;AAAKZ,IAAAA,GAAG,EAAEA,GAAI;AAACF,IAAAA,SAAS,EAAEU,UAAAA;GAAgBT,EAAAA,WAAW,GAChDkB,iBAAiB,IAAIA,iBAAiB,eACvCP,KAAA,CAAAC,aAAA,CAAA,MAAA,EAAA;AAAMb,IAAAA,SAAS,EAAC,0BAAA;AAA0B,GAAA,EAAE0B,WAAW,CAAQ,EAC9DE,kBAAkB,IAAIA,kBAAkB,CACvC,CAAA;AAEd,CAAC,EAAC;AAEFV,UAAU,CAACH,WAAW,GAAG,YAAY,CAAA;AACrCG,UAAU,CAACF,SAAS,GAAGzC,mBAAmB,CAAA;AAC1C2C,UAAU,CAACD,YAAY,GAAG7B,sBAAsB;;;;"}