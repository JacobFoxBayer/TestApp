import React from 'react';


export interface BadgeProps {
}

/**
* Badges are colored text elements that hold small amounts of information. Badges come in two versions, Label which can be used to add context to the UI or other elements and Notification which can indicate that a certain element within the UI can be interacted with to show new or updated information.
*/
export const Badge: React.FunctionComponent<BadgeProps | React.HTMLProps<HTMLElement> | React.DOMAttributes<HTMLElement>>;


export interface LabelBadgeProps {
    /**
    *  Label to be displayed in the Badge. Usually a string, but can also be an x-small icon.
    *
    * Defaults to **null**.
    */
    label?: string | Function | React.ReactNode;
    /**
    *  Label type to be displayed in the Badge.
    *
    * Defaults to **'string'**.
    */
    labelType?: string;
    /**
    * Adds the given Icon to the left of the label text. May not be used with `trailingIcon` or if `labelType` is icon - if `leadingIcon` and `trailingIcon` are both set, `leadingIcon` will take priority.  If `labelType` is set to `icon` label will take priority.  Expects the name of a valid Material.io icon, however an icon component may be passed in instead for more control.  If a custom icon is used, the icon should not be larger than 9 x 9.
    *
    * Defaults to **undefined**.
    */
    leadingIcon?: string | Function | React.ReactNode;
    /**
    * Color of the badge. It will default according to your theme.  For most themes that is primary.
    *
    * Defaults to **'themeDefault'**.
    */
    themeColor?: string;
    /**
    * Adds the given Icon to the right of the label text. May not be used with `leadingIcon` or if `labelType` is icon - if `leadingIcon` and `trailingIcon` are both set, `leadingIcon` will take priority.  If `labelType` is set to `icon` label will take priority.  Expects the name of a valid Material.io icon, however an icon component may be passed in instead for more control.
    *
    * Defaults to **undefined**.
    */
    trailingIcon?: string | Function | React.ReactNode;
}

/**
* Badges are colored text elements that hold small amounts of information. Label Badges can be used to add context to the UI or other elements within the experience. They are great for indicating different categories, statuses, and products.
 * @prop {string|function|React.ReactNode} label -  Label to be displayed in the Badge. Usually a string, but can also be an x-small icon. Defaults to _null_.
 * @prop {string} labelType -  Label type to be displayed in the Badge. Defaults to _'string'_.
 * @prop {string|function|React.ReactNode} leadingIcon - Adds the given Icon to the left of the label text. May not be used with `trailingIcon` or if `labelType` is icon - if `leadingIcon` and `trailingIcon` are both set, `leadingIcon` will take priority.  If `labelType` is set to `icon` label will take priority.  Expects the name of a valid Material.io icon, however an icon component may be passed in instead for more control.  If a custom icon is used, the icon should not be larger than 9 x 9. Defaults to _undefined_.
 * @prop {string} themeColor - Color of the badge. It will default according to your theme.  For most themes that is primary. Defaults to _'themeDefault'_.
 * @prop {string|function|React.ReactNode} trailingIcon - Adds the given Icon to the right of the label text. May not be used with `leadingIcon` or if `labelType` is icon - if `leadingIcon` and `trailingIcon` are both set, `leadingIcon` will take priority.  If `labelType` is set to `icon` label will take priority.  Expects the name of a valid Material.io icon, however an icon component may be passed in instead for more control. Defaults to _undefined_.
*/
export const LabelBadge: React.FunctionComponent<LabelBadgeProps | React.HTMLProps<HTMLElement> | React.DOMAttributes<HTMLElement>>;


export interface NotificationBadgeProps {
    /**
    *  Number to be displayed in badge. Omit for a status light badge.
    *
    * Defaults to **null**.
    */
    counter?: number;
    /**
    * Max number the badge can display.
    *
    * Defaults to **99**.
    */
    max?: number;
    /**
    *  Theme color of the badge.
    *
    * Defaults to **'danger'**.
    */
    themeColor?: string;
}

/**
* Badges are colored text elements that hold small amounts of information. Notification Badges are used for indicating that a certain element within the UI can be interacted with to show new or updated information. They work great for alerting the user of new messages, alerts, or items that need attention.
 * @prop {number} counter -  Number to be displayed in badge. Omit for a status light badge. Defaults to _null_.
 * @prop {number} max - Max number the badge can display. Defaults to _99_.
 * @prop {string} themeColor -  Theme color of the badge. Defaults to _'danger'_.
*/
export const NotificationBadge: React.FunctionComponent<NotificationBadgeProps | React.HTMLProps<HTMLElement> | React.DOMAttributes<HTMLElement>>;
