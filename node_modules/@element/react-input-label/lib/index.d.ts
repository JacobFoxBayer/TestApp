import React from 'react';


export interface InputLabelProps {
    /**
    * Content to be rendered inside the FormField. Accepts any valid markup.
    *
    * Defaults to **null**.
    */
    children: React.ReactNode;
    /**
    * The css class name to be passed through to the component markup.
    *
    * Defaults to **undefined**.
    */
    className?: string;
    /**
    * Applies disabled styling.
    *
    * Defaults to **false**.
    */
    disabled?: boolean;
    /**
    * Visibly disable the label, though it will still be available to screen readers.
    *
    * Defaults to **false**.
    */
    hideLabel?: boolean;
}

/**
* Input Label is an atomic component most often by other input components such as `Checkbox`, `Radio`, `Switch`. The typical use-case for this component would be in developing a new input component.
 * @prop {React.ReactNode} children - Content to be rendered inside the FormField. Accepts any valid markup. Defaults to _null_.
 * @prop {string} className - The css class name to be passed through to the component markup. Defaults to _undefined_.
 * @prop {boolean} disabled - Applies disabled styling. Defaults to _false_.
 * @prop {boolean} hideLabel - Visibly disable the label, though it will still be available to screen readers. Defaults to _false_.
*/
export const InputLabel: React.FunctionComponent<InputLabelProps | React.HTMLProps<HTMLElement> | React.DOMAttributes<HTMLElement>>;
