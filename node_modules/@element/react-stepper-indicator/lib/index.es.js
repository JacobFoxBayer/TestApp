import _extends from '@babel/runtime-corejs3/helpers/extends';
import React, { forwardRef, useRef, useImperativeHandle } from 'react';
import clsx from 'clsx';
import PropTypes from 'prop-types';

/**
 *
 * This file is automatically generated by the Element
 * documentation system. Any modifications to this file
 * will be overwritten!
 *
 */

const StepperIndicatorPropTypes = {
  /**
   * The currently active step.
   *
   * Defaults to **1**.
   */
  activeStep: PropTypes.number,
  /**
   * Total number of steps.
   *
   * Defaults to **1**.
   */
  totalSteps: PropTypes.number
};
const StepperIndicatorDefaultProps = {
  activeStep: 1,
  totalSteps: 1
};

const StepperIndicator = /*#__PURE__*/forwardRef((props, extRef) => {
  const {
    totalSteps,
    activeStep,
    ...customProps
  } = props;
  const ref = useRef();
  useImperativeHandle(extRef, () => ref.current, []);
  return /*#__PURE__*/React.createElement("div", _extends({
    ref: ref,
    className: "lmnt lmnt-stepper-indicator__container"
  }, customProps), [...Array(totalSteps)].map((x, index) => /*#__PURE__*/React.createElement("div", {
    className: clsx('lmnt-stepper-indicator__item', index + 1 === activeStep && 'lmnt-stepper-indicator__item--active')
    // eslint-disable-next-line react/no-array-index-key
    ,
    key: `lmnt-stepper-indicator__item-${index}`
  })));
});
StepperIndicator.displayName = 'StepperIndicator';
StepperIndicator.propTypes = StepperIndicatorPropTypes;
StepperIndicator.defaultProps = StepperIndicatorDefaultProps;

export { StepperIndicator };
//# sourceMappingURL=index.es.js.map
