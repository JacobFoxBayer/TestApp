'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _extends = require('@babel/runtime-corejs3/helpers/extends');
var React = require('react');
var clsx = require('clsx');
var PropTypes = require('prop-types');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _extends__default = /*#__PURE__*/_interopDefault(_extends);
var React__default = /*#__PURE__*/_interopDefault(React);
var clsx__default = /*#__PURE__*/_interopDefault(clsx);
var PropTypes__default = /*#__PURE__*/_interopDefault(PropTypes);

/**
 *
 * This file is automatically generated by the Element
 * documentation system. Any modifications to this file
 * will be overwritten!
 *
 */

const StepperIndicatorPropTypes = {
  /**
   * The currently active step.
   *
   * Defaults to **1**.
   */
  activeStep: PropTypes__default["default"].number,
  /**
   * Total number of steps.
   *
   * Defaults to **1**.
   */
  totalSteps: PropTypes__default["default"].number
};
const StepperIndicatorDefaultProps = {
  activeStep: 1,
  totalSteps: 1
};

const StepperIndicator = /*#__PURE__*/React.forwardRef((props, extRef) => {
  const {
    totalSteps,
    activeStep,
    ...customProps
  } = props;
  const ref = React.useRef();
  React.useImperativeHandle(extRef, () => ref.current, []);
  return /*#__PURE__*/React__default["default"].createElement("div", _extends__default["default"]({
    ref: ref,
    className: "lmnt lmnt-stepper-indicator__container"
  }, customProps), [...Array(totalSteps)].map((x, index) => /*#__PURE__*/React__default["default"].createElement("div", {
    className: clsx__default["default"]('lmnt-stepper-indicator__item', index + 1 === activeStep && 'lmnt-stepper-indicator__item--active')
    // eslint-disable-next-line react/no-array-index-key
    ,
    key: `lmnt-stepper-indicator__item-${index}`
  })));
});
StepperIndicator.displayName = 'StepperIndicator';
StepperIndicator.propTypes = StepperIndicatorPropTypes;
StepperIndicator.defaultProps = StepperIndicatorDefaultProps;

exports.StepperIndicator = StepperIndicator;
//# sourceMappingURL=index.js.map
