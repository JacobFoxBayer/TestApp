{"version":3,"file":"index.js","sources":["../generated/propTypes.js","../NotchedOutline.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n *\n * This file is automatically generated by the Element\n * documentation system. Any modifications to this file\n * will be overwritten!\n *\n */\n\nexport const NotchedOutlinePropTypes = {\n  /**\n   * Content to be rendered inside the notched outline. Accepts a string.\n   *\n   * Defaults to **null**.\n   */\n  children: PropTypes.node,\n  /**\n   * The css class name to be passed through to the component markup.\n   *\n   * Defaults to **undefined**.\n   */\n  className: PropTypes.string,\n  /**\n   * Determines if the notch is opened or closed.\n   *\n   * Defaults to **undefined**.\n   */\n  closed: PropTypes.bool,\n  /**\n   *\n   *\n   * Defaults to **null**.\n   */\n  width: PropTypes.number,\n};\n\nexport const NotchedOutlineDefaultProps = {\n  children: null,\n  className: undefined,\n  closed: undefined,\n  width: null,\n};\n","import React, {\n    useRef,\n    useEffect,\n    forwardRef,\n    useImperativeHandle\n} from 'react';\nimport { MDCNotchedOutline } from '@material/notched-outline';\nimport clsx from 'clsx';\nimport {\n    NotchedOutlinePropTypes,\n    NotchedOutlineDefaultProps\n} from './generated/propTypes';\n\nconst NotchedOutline = forwardRef((props, externalRef) => {\n    const { closed, className, children, width, ...customProps } = props;\n    const ref = useRef();\n    const mdcNotchedOutlineRef = useRef();\n\n    useImperativeHandle(externalRef, () => ref.current, []);\n\n    useEffect(() => {\n        mdcNotchedOutlineRef.current = MDCNotchedOutline.attachTo(ref.current);\n\n        return () => {\n            mdcNotchedOutlineRef.current.destroy();\n        };\n    }, []);\n\n    useEffect(() => {\n        if (closed === undefined) return;\n        closed\n            ? mdcNotchedOutlineRef.current.closeNotch()\n            : mdcNotchedOutlineRef.current.notch();\n    }, [closed]);\n\n    useEffect(() => {\n        if (width) {\n            mdcNotchedOutlineRef.current.foundation.adapter.setNotchWidthProperty(\n                width\n            );\n        } else {\n            mdcNotchedOutlineRef.current.foundation.adapter.removeNotchWidthProperty();\n        }\n    }, [width]);\n\n    return (\n        <div\n            className={clsx('lmnt', 'mdc-notched-outline', className)}\n            ref={ref}\n            {...customProps}\n        >\n            <div className='mdc-notched-outline__leading' />\n            <div className='mdc-notched-outline__notch'>{children}</div>\n            <div className='mdc-notched-outline__trailing' />\n        </div>\n    );\n});\n\nNotchedOutline.displayName = 'NotchedOutline';\nNotchedOutline.propTypes = NotchedOutlinePropTypes;\nNotchedOutline.defaultProps = NotchedOutlineDefaultProps;\n\nexport default NotchedOutline;\n"],"names":["NotchedOutlinePropTypes","children","PropTypes","node","className","string","closed","bool","width","number","NotchedOutlineDefaultProps","undefined","NotchedOutline","forwardRef","props","externalRef","customProps","ref","useRef","mdcNotchedOutlineRef","useImperativeHandle","current","useEffect","MDCNotchedOutline","attachTo","destroy","closeNotch","notch","foundation","adapter","setNotchWidthProperty","removeNotchWidthProperty","React","createElement","_extends","clsx","displayName","propTypes","defaultProps"],"mappings":"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"}