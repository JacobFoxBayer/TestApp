const warning = require('warning');
const themesList = require('./themes');
const componentsList = require('./components');

const warned = {};

function validationWarning(message) {
    if (!warned[message]) {
        warning(false, message);
        warned[message] = true;
    }
}

const validate = (item, list, msg) => {
    if (!item || !Object.prototype.hasOwnProperty.call(list, item)) {
        validationWarning(msg);
        return false;
    }
    return true;
};

const validateTheme = theme => {
    return validate(
        theme,
        themesList,
        'Element-Themes Installer: invalid theme specified'
    );
};

const validateComponent = component => {
    return validate(
        component,
        componentsList,
        `Element-Themes Installer: ${component} is not a valid component.`
    );
};

const themesInstaller = (theme, components) => {
    if (!validateTheme(theme)) return;

    if (!components) {
        themesList[theme].full();
        return;
    }

    components.forEach(component => {
        if (!validateComponent(component)) return;
        componentsList[component]();
    });

    themesList[theme].variables();
};

module.exports = themesInstaller;
