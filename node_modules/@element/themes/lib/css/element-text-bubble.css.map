{"version":3,"sources":["webpack:///common/_mixins.scss","webpack:///components/utility/color/utility-colors.scss","webpack:///components/text-bubble/text-bubble.scss"],"names":[],"mappings":"AAcA;AA4BA;ACJI;EACI;EACA;ACnCR;;ADsCI;;EAEI;EACA;ACnCR;;AD2BI;EACI;EACA;ACxBR;;AD2BI;;EAEI;EACA;ACxBR;;ADgBI;EACI;EACA;ACbR;;ADgBI;;EAEI;EACA;ACbR;;ADKI;EACI;EACA;ACFR;;ADKI;;EAEI;EACA;ACFR;;ADNI;EACI;EACA;ACSR;;ADNI;;EAEI;EACA;ACSR;;ADjBI;EACI;EACA;ACoBR;;ADjBI;;EAEI;EACA;ACoBR;;AD5BI;EACI;EACA;AC+BR;;AD5BI;;EAEI;EACA;AC+BR;;ADvCI;EACI;EACA;AC0CR;;ADvCI;;EAEI;EACA;AC0CR;;AApFA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAuFJ;;AApFA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAuFJ;;AApFA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;AAuFJ;;AFjBI;EACI;EACA;AEoBR;;AFtBI;EACI;EACA;AEyBR;;AF3BI;EACI;EACA;AE8BR;;AFhCI;EACI;EACA;AEmCR;;AFrCI;EACI;EACA;AEwCR;;AF1CI;EACI;EACA;AE6CR;;AF/CI;EACI;EACA;AEkDR;;AFpDI;EACI;EACA;AEuDR;;AFlDI;EACI;EACA;AEqDR;;AFvDI;EACI;EACA;AE0DR;;AF5DI;EACI;EACA;AE+DR;;AFjEI;EACI;EACA;AEoER;;AA/HA;EACI;EACA;AAkIJ;;AA/HA;EACI;EACA;AAkIJ;;AA/HA;EACI;EACA;EACA;AAkIJ;;AF/EI;EACI;EACA;AEkFR;;AFpFI;EACI;EACA;AEuFR;;AFzFI;EACI;EACA;AE4FR;;AF9FI;EACI;EACA;AEiGR;;AFnGI;EACI;EACA;AEsGR;;AFxGI;EACI;EACA;AE2GR;;AF7GI;EACI;EACA;AEgHR;;AFlHI;EACI;EACA;AEqHR;;AFvHI;EACI;EACA;AE0HR;;AF5HI;EACI;EACA;AE+HR;;AFjII;EACI;EACA;AEoIR;;AFtII;EACI;EACA;AEyIR;;AA1KA;EACI;EACA;AA6KJ;;AA1KA;EACI;EACA;AA6KJ,C","file":"element-text-bubble.css","sourcesContent":["@use 'functions' as functions;\n@use 'sass:map';\n\n$white: rgba(#fff, 1);\n$black: rgba(#000, 0.87);\n///////////////////////////\n///////  Media Query ///////\n////////////////////////////\n\n// TODO: document breakpoint rationale\n\n// Dev discussion on GitHub\n// https://github.platforms.engineering/element/element-core/issues/169\n\n/* stylelint-disable scss/media-feature-value-dollar-variable */\n@mixin for-size($size) {\n    @if $size == phone-only {\n        @media (max-width: 599px) {\n            @content;\n        }\n    } @else if $size == tablet-portrait-up {\n        @media (min-width: 600px) {\n            @content;\n        }\n    } @else if $size == tablet-landscape-up {\n        @media (min-width: 720px) {\n            @content;\n        }\n    } @else if $size == desktop-up {\n        @media (min-width: 840px) {\n            @content;\n        }\n    } @else if $size == mid-desktop-up {\n        @media (min-width: 1024px) {\n            @content;\n        }\n    } @else if $size == big-desktop-up {\n        @media (min-width: 1440px) {\n            @content;\n        }\n    }\n}\n/* stylelint-enable scss/media-feature-value-dollar-variable */\n\n//////////////////////////////\n///////  Theme Utility ///////\n//////////////////////////////\n\n@mixin on-primary() {\n    .lmnt-theme-primary-bg {\n        @content;\n    }\n}\n\n@mixin on-secondary() {\n    .lmnt-theme-secondary-bg {\n        @content;\n    }\n}\n\n@mixin on-danger() {\n    .lmnt-theme-danger-bg {\n        @content;\n    }\n}\n\n//////////////////////////////////////\n///////  On Background Classes ///////\n//////////////////////////////////////\n\n// Note: utility classes for `background-color` and `color`\n// Note: foreground `color` is determined by `color-contrast-value-check`\n@mixin onBackgroundColorClasses(\n    $color,\n    $value,\n    $themeBlack: $black,\n    $themeWhite: $white\n) {\n    .lmnt-theme-#{$color}--bg, // Keeping both class names until v6.  For consistency with the DK kit we will have the double hyphen\n    .lmnt-theme-#{$color}-bg {\n        background-color: $value;\n        color: functions.color-contrast-value-check(\n            $value,\n            $blackText: $themeBlack,\n            $whiteText: $themeWhite\n        );\n    }\n\n    .lmnt-theme-#{$color} {\n        color: $value;\n    }\n}\n\n@mixin onClasses($color, $value) {\n    @if str-index($color, '-stroke') {\n        .lmnt-theme-#{$color} {\n            border-color: $value;\n            border-bottom-color: $value;\n        }\n    } @else {\n        .lmnt-theme-#{$color} {\n            color: $value;\n        }\n    }\n}\n\n@mixin colorRamp($map, $themeBlack: $black, $themeWhite: $white) {\n    @each $color, $value in $map {\n        @include onBackgroundColorClasses(\n            $color: $color,\n            $value: $value,\n            $themeBlack: $themeBlack,\n            $themeWhite: $themeWhite\n        );\n    }\n}\n\n@mixin mapUtilityColors($class, $color, $value) {\n    #{$class}#{$color} {\n        background-color: #{map.get($value, 'surface')};\n        color: #{map.get($value, 'on-surface')};\n    }\n}\n\n@mixin mapCommonColors($class, $color, $value) {\n    #{$class}#{$color} {\n        background-color: #{map.get($value, 'surface')};\n        color: #{map.get($value, 'on-color')};\n    }\n}\n\n@mixin mapOutlineColors($class, $color, $value) {\n    #{$class}#{$color} {\n        border-color: #{map.get($value, 'on-surface')};\n        color: #{map.get($value, 'on-surface')};\n    }\n}\n\n@mixin gradientRamp($gradient-colors) {\n    @each $colorName, $colorVal in $gradient-colors {\n        @if str-index($colorName, 'to-top') {\n            .lmnt-theme--bg-linear-gradient-#{$colorName} {\n                background: linear-gradient(\n                    0deg,\n                    hsla(0, 0, 0, 0) 0,\n                    rgba($colorVal, 0.8) 100%\n                );\n                color: functions.color-contrast-value-check(rgba($colorVal, 0.8));\n            }\n        } @else {\n            .lmnt-theme--bg-linear-gradient-#{$colorName} {\n                background: linear-gradient(\n                    180deg,\n                    hsla(0, 0, 0, 0) 0,\n                    rgba($colorVal, 0.8) 100%\n                );\n                color: functions.color-contrast-value-check(rgba($colorVal, 0.8));\n            }\n        }\n    }\n}\n","@use 'sass:map';\n\n$utilityColorMap: (\n    'blue': (\n        surface: #c2e0ff,\n        on-surface: #0b3f73\n    ),\n    'gray': (\n        surface: #e6e6e6,\n        on-surface: #474747\n    ),\n    'green': (\n        surface: #b8f2c7,\n        on-surface: #084d19\n    ),\n    'orange': (\n        surface: #ffe6b2,\n        on-surface: #593f09\n    ),\n    'purple': (\n        surface: #dfcbf2,\n        on-surface: #400b73\n    ),\n    'red': (\n        surface: #ffd6d6,\n        on-surface: #730b0b\n    ),\n    'teal': (\n        surface: #b8f2ed,\n        on-surface: #084d47\n    ),\n    'yellow': (\n        surface: #f2f2b6,\n        on-surface: #404006\n    )\n);\n\n@mixin badgeClasses($color, $value) {\n    .lmnt-utility-#{$color} {\n        background-color: #{map.get($value, 'surface')};\n        color: #{map.get($value, 'on-surface')};\n    }\n\n    :root,\n    .lmnt {\n        --lmnt-utility-#{$color}-surface: #{map.get($value, 'surface')};\n        --lmnt-utility-#{$color}-on-surface: #{map.get($value, 'on-surface')};\n    }\n}\n\n@each $color, $value in $utilityColorMap {\n    @include badgeClasses($color: $color, $value: $value);\n}\n","@use '../../common/mixins' as mixins;\n@use '../utility/color/utility-colors.scss' as utility;\n@use '../utility/color/common-colors.scss' as common;\n\n.lmnt {\n    --lmnt-text-bubble--small-font-size: 16px;\n    --lmnt-text-bubble--small-font-weight: 700;\n    --lmnt-text-bubble--small-line-height: 24px;\n    --lmnt-text-bubble--small-size: 32px;\n    --lmnt-text-bubble--font-family: var(--lmnt-theme-primary-font);\n    --lmnt-text-bubble--font-size: 1rem;\n    --lmnt-text-bubble--font-weight: 700;\n    --lmnt-text-bubble--line-height: 24px;\n    --lmnt-text-bubble--size: 40px;\n}\n\n.lmnt-text-bubble {\n    align-items: center;\n    border-radius: 50%;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: row;\n    font-family: var(--lmnt-text-bubble--font-family);\n    font-size: var(--lmnt-text-bubble--font-size);\n    font-weight: var(--lmnt-text-bubble--font-weight);\n    height: var(--lmnt-text-bubble--size);\n    justify-content: center;\n    line-height: var(--lmnt-text-bubble--line-height);\n    margin: 0;\n    max-height: var(--lmnt-text-bubble--size);\n    max-width: 40px;\n    min-height: var(--lmnt-text-bubble--size);\n    min-width: 40px;\n    padding: 0;\n    position: relative;\n    text-align: center;\n    white-space: nowrap;\n    width: 40px;\n    word-spacing: 0;\n}\n\n.lmnt-text-bubble--small {\n    font-size: var(--lmnt-text-bubble--small-font-size);\n    height: var(--lmnt-text-bubble--small-size);\n    max-height: var(--lmnt-text-bubble--small-size);\n    max-width: var(--lmnt-text-bubble--small-size);\n    min-height: var(--lmnt-text-bubble--small-size);\n    min-width: var(--lmnt-text-bubble--small-size);\n    width: var(--lmnt-text-bubble--small-size);\n}\n\n@each $color, $value in utility.$utilityColorMap {\n    @include mixins.mapUtilityColors(\n        $class: '.lmnt-text-bubble__theme-color--',\n        $color: $color,\n        $value: $value\n    );\n}\n\n@each $color, $value in common.$commonColorMap {\n    @include mixins.mapCommonColors(\n        $class: '.lmnt-text-bubble__theme-color--',\n        $color: $color,\n        $value: $value\n    );\n}\n\n// danger-alt is special and needs it's own styles ðŸ™„\n.lmnt-text-bubble__theme-color--danger-alt {\n    background-color: var(--lmnt-theme-surface);\n    color: var(--lmnt-theme-on-danger-alt);\n}\n\n.lmnt-text-bubble__theme-color--background {\n    background-color: var(--lmnt-theme-surface);\n    color: var(--lmnt-on-surface-active);\n}\n\n.lmnt-text-bubble--outlined {\n    background-color: unset;\n    border-style: solid;\n    border-width: 1px;\n}\n\n@each $color, $value in utility.$utilityColorMap {\n    @include mixins.mapOutlineColors(\n        $class: '.lmnt-text-bubble--outlined.lmnt-text-bubble__theme-color--',\n        $color: $color,\n        $value: $value\n    );\n}\n\n@each $color, $value in common.$commonColorMap {\n    @include mixins.mapOutlineColors(\n        $class: '.lmnt-text-bubble--outlined.lmnt-text-bubble__theme-color--',\n        $color: $color,\n        $value: $value\n    );\n}\n\n// danger-alt is special and needs it's own styles ðŸ™„\n.lmnt-text-bubble--outlined.lmnt-text-bubble__theme-color--danger-alt {\n    border-color: var(--lmnt-theme-on-surface-stroke);\n    color: var(--lmnt-theme-on-danger-alt);\n}\n\n.lmnt-text-bubble--outlined.lmnt-text-bubble__theme-color--background {\n    border-color: var(--lmnt-theme-on-surface-stroke);\n    color: var(--lmnt-on-surface-active);\n}\n"],"sourceRoot":""}