{"version":3,"sources":["webpack:///node_modules/@material/theme/_theme.scss","webpack:///node_modules/@material/theme/_css.scss","webpack:///components/drawer/drawer.scss","webpack:///node_modules/@material/theme/_gss.scss","webpack:///common/_mixins.scss","webpack:///common/_element.core.scss","webpack:///node_modules/@material/drawer/_mixins.scss","webpack:///node_modules/@material/drawer/_variables.scss","webpack:///node_modules/@material/animation/_animation.scss","webpack:///node_modules/@material/list/_mixins.scss","webpack:///node_modules/@material/rtl/_rtl.scss","webpack:///node_modules/@material/typography/_typography.scss","webpack:///node_modules/@material/elevation/_elevation-theme.scss"],"names":[],"mappings":"AAuCE;ECuCE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ACrDJ;;AF0BM;ECeA;EEjCF;EF6CA;EAAA;AC/CJ;;AFoBM;ECeA;EEjCF;EF6CA;EAAA;ACzCJ;;AFoBM;ECSA;EEjCF;EF6CA;EAAA;ACnCJ;;AFcM;ECSA;EEjCF;EF6CA;EAAA;AC7BJ;;AFEM;ECeA;EEjCF;EF6CA;EAAA;ACvBJ;;AFJM;ECeA;EEjCF;EF6CA;EAAA;ACjBJ;;AFVM;ECeA;EEjCF;EF6CA;EAAA;ACXJ;;AFhBM;ECeA;EEjCF;EF6CA;EAAA;ACLJ;;AFtBM;ECeA;EEjCF;EF6CA;EAAA;ACCJ;;AF5BM;ECeA;EEjCF;EF6CA;EAAA;ACOJ;;AFlCM;ECeA;EEjCF;EF6CA;EAAA;ACaJ;;AFxCM;ECeA;EEjCF;EF6CA;EAAA;ACmBJ;;AF9CM;ECeA;EEjCF;EF6CA;EAAA;ACyBJ;;AFpDM;ECeA;EEjCF;EF6CA;EAAA;AC+BJ;;AF1DM;ECeA;EEjCF;EF6CA;EAAA;ACqCJ;;AFhEM;ECeA;EEjCF;EF6CA;EAAA;AC2CJ;;AFtEM;ECeA;EEjCF;EF6CA;EAAA;ACiDJ;;AF5EM;ECeA;EEjCF;EF6CA;EAAA;ACuDJ;;AFlFM;ECeA;EEjCF;EF6CA;EAAA;AC6DJ;;AFxFM;ECeA;EEjCF;EF6CA;EAAA;ACmEJ;;AF9FM;ECeA;EEjCF;EF6CA;EAAA;ACyEJ;;AFpGM;ECeA;EEjCF;EF6CA;EAAA;AC+EJ;;AF1GM;ECeA;EEjCF;EF6CA;EAAA;ACqFJ;;AFhHM;ECeA;EEjCF;EF6CA;EAAA;AC2FJ;;AFtGI;ECDE;EEjCF;EF6CA;EAAA;ACiGJ;;AF5GI;ECDE;EEjCF;EF6CA;EAAA;ACuGJ;;AEvKA;AA4BA;AAoCI;;EAEI,yBCMK;EDLL;AF4GR;;AErGI;EACI,cCHK;AH2Gb;;AEnHI;;EAEI,yBCMK;EDLL;AFsHR;;AE/GI;EACI,cCHK;AHqHb;;AE7HI;;EAEI,yBCMK;EDLL;AFgIR;;AEzHI;EACI,cCHK;AH+Hb;;AEvII;;EAEI,yBCMK;EDLL;AF0IR;;AEnII;EACI,cCHK;AHyIb;;AEjJI;;EAEI,yBCMK;EDLL;AFoJR;;AE7II;EACI,cCHK;AHmJb;;AE3JI;;EAEI,yBCMK;EDLL;AF8JR;;AEvJI;EACI,cCHK;AH6Jb;;AErKI;;EAEI,yBCMK;EDLL;AFwKR;;AEjKI;EACI,cCHK;AHuKb;;AE/KI;;EAEI,yBCMK;EDLL;AFkLR;;AE3KI;EACI,cCHK;AHiLb;;AEzLI;;EAEI,yBCMK;EDLL;AF4LR;;AErLI;EACI,cCHK;AH2Lb;;AEnMI;;EAEI,yBCMK;EDLL;AFsMR;;AE/LI;EACI,cCHK;AHqMb;;AE7MI;;EAEI,yBCkBO;EDjBP;AFgNR;;AEzMI;EACI,cCSO;AHmMf;;AEvNI;;EAEI,yBCkBO;EDjBP;AF0NR;;AEnNI;EACI,cCSO;AH6Mf;;AEjOI;;EAEI,yBCkBO;EDjBP;AFoOR;;AE7NI;EACI,cCSO;AHuNf;;AE3OI;;EAEI,yBCkBO;EDjBP;AF8OR;;AEvOI;EACI,cCSO;AHiOf;;AErPI;;EAEI,yBCkBO;EDjBP;AFwPR;;AEjPI;EACI,cCSO;AH2Of;;AE/PI;;EAEI,yBCkBO;EDjBP;AFkQR;;AE3PI;EACI,cCSO;AHqPf;;AEzQI;;EAEI,yBCkBO;EDjBP;AF4QR;;AErQI;EACI,cCSO;AH+Pf;;AEnRI;;EAEI,yBCkBO;EDjBP;AFsRR;;AE/QI;EACI,cCSO;AHyQf;;AE7RI;;EAEI,yBCkBO;EDjBP;AFgSR;;AEzRI;EACI,cCSO;AHmRf;;AEvSI;;EAEI,yBCkBO;EDjBP;AF0SR;;AEnSI;EACI,cCSO;AH6Rf;;AEjTI;;EAEI,sBCsDO;EDrDP;AFoTR;;AE7SI;EACI,WC6CO;AHmQf;;AE3TI;;EAEI,sBCsDO;EDrDP;AF8TR;;AEvTI;EACI,WC6CO;AH6Qf;;AErUI;;EAEI,sBCsDO;EDrDP;AFwUR;;AEjUI;EACI,WC6CO;AHuRf;;AE/UI;;EAEI,sBCsDO;EDrDP;AFkVR;;AE3UI;EACI,WC6CO;AHiSf;;AEzVI;;EAEI,sBCsDO;EDrDP;AF4VR;;AErVI;EACI,WC6CO;AH2Sf;;AEnWI;;EAEI,sBCsDO;EDrDP;AFsWR;;AE/VI;EACI,WC6CO;AHqTf;;AE7WI;;EAEI,sBCsDO;EDrDP;AFgXR;;AEzWI;EACI,WC6CO;AH+Tf;;AEvXI;;EAEI,sBCsDO;EDrDP;AF0XR;;AEnXI;EACI,WC6CO;AHyUf;;AEjYI;;EAEI,sBCsDO;EDrDP;AFoYR;;AE7XI;EACI,WC6CO;AHmVf;;AE3YI;;EAEI,yBCiEgB;EDhEhB;AF8YR;;AEvYI;EACI,cCwDgB;AHkVxB;;AErZI;;EAEI,yBCiEgB;EDhEhB;AFwZR;;AEjZI;EACI,cCwDgB;AH4VxB;;AE/ZI;;EAEI,yBCiEgB;EDhEhB;AFkaR;;AE3ZI;EACI,cCwDgB;AHsWxB;;AEzaI;;EAEI,yBCiEgB;EDhEhB;AF4aR;;AEraI;EACI,cCwDgB;AHgXxB;;AEnbI;;EAEI,yBCiEgB;EDhEhB;AFsbR;;AE/aI;EACI,cCwDgB;AH0XxB;;AE7bI;;EAEI,yBCiEgB;EDhEhB;AFgcR;;AEzbI;EACI,cCwDgB;AHoYxB;;AEvcI;;EAEI,yBCiEgB;EDhEhB;AF0cR;;AEncI;EACI,cCwDgB;AH8YxB;;AEjdI;;EAEI,yBCiEgB;EDhEhB;AFodR;;AE7cI;EACI,cCwDgB;AHwZxB;;AE3dI;;EAEI,yBCiEgB;EDhEhB;AF8dR;;AEvdI;EACI,cCwDgB;AHkaxB;;AEreI;;EAEI,yBCiEgB;EDhEhB;AFweR;;AEjeI;EACI,cCwDgB;AH4axB;;AE/eI;;EAEI,yBC6EgB;ED5EhB;AFkfR;;AE3eI;EACI,cCoEgB;AH0axB;;AEzfI;;EAEI,yBC6EgB;ED5EhB;AF4fR;;AErfI;EACI,cCoEgB;AHobxB;;AEngBI;;EAEI,yBC6EgB;ED5EhB;AFsgBR;;AE/fI;EACI,cCoEgB;AH8bxB;;AE7gBI;;EAEI,yBC6EgB;ED5EhB;AFghBR;;AEzgBI;EACI,cCoEgB;AHwcxB;;AEvhBI;;EAEI,yBC6EgB;ED5EhB;AF0hBR;;AEnhBI;EACI,cCoEgB;AHkdxB;;AEjiBI;;EAEI,yBC6EgB;ED5EhB;AFoiBR;;AE7hBI;EACI,cCoEgB;AH4dxB;;AE3iBI;;EAEI,yBC6EgB;ED5EhB;AF8iBR;;AEviBI;EACI,cCoEgB;AHsexB;;AErjBI;;EAEI,yBC6EgB;ED5EhB;AFwjBR;;AEjjBI;EACI,cCoEgB;AHgfxB;;AE/jBI;;EAEI,yBC6EgB;ED5EhB;AFkkBR;;AE3jBI;EACI,cCoEgB;AH0fxB;;AEzkBI;;EAEI,yBC6EgB;ED5EhB;AF4kBR;;AErkBI;EACI,cCoEgB;AHogBxB;;AEnlBI;;EAEI,yBCyFgB;EDxFhB;AFslBR;;AE/kBI;EACI,cCgFgB;AHkgBxB;;AE7lBI;;EAEI,yBCyFgB;EDxFhB;AFgmBR;;AEzlBI;EACI,cCgFgB;AH4gBxB;;AEvmBI;;EAEI,yBCyFgB;EDxFhB;AF0mBR;;AEnmBI;EACI,cCgFgB;AHshBxB;;AEjnBI;;EAEI,yBCyFgB;EDxFhB;AFonBR;;AE7mBI;EACI,cCgFgB;AHgiBxB;;AE3nBI;;EAEI,yBCyFgB;EDxFhB;AF8nBR;;AEvnBI;EACI,cCgFgB;AH0iBxB;;AEroBI;;EAEI,yBCyFgB;EDxFhB;AFwoBR;;AEjoBI;EACI,cCgFgB;AHojBxB;;AE/oBI;;EAEI,yBCyFgB;EDxFhB;AFkpBR;;AE3oBI;EACI,cCgFgB;AH8jBxB;;AEzpBI;;EAEI,yBCyFgB;EDxFhB;AF4pBR;;AErpBI;EACI,cCgFgB;AHwkBxB;;AEnqBI;;EAEI,yBCyFgB;EDxFhB;AFsqBR;;AE/pBI;EACI,cCgFgB;AHklBxB;;AE7qBI;;EAEI,yBCyFgB;EDxFhB;AFgrBR;;AEzqBI;EACI,cCgFgB;AH4lBxB;;AE/mBY;EACI;EAKA;AF8mBhB;;AEpnBY;EACI;EAKA;AFmnBhB;;AEznBY;EACI;EAKA;AFwnBhB;;AE9nBY;EACI;EAKA;AF6nBhB;;AEnoBY;EACI;EAKA;AFkoBhB;;AExoBY;EACI;EAKA;AFuoBhB;;AEtpBY;EACI;EAKA;AFqpBhB;;AE3pBY;EACI;EAKA;AF0pBhB;;AEhqBY;EACI;EAKA;AF+pBhB;;AErqBY;EACI;EAKA;AFoqBhB;;AE1qBY;EACI;EAKA;AFyqBhB;;AE/qBY;EACI;EAKA;AF8qBhB;;AE3qBY;EACI;EAKA;AF0qBhB;;AEzrBY;EACI;EAKA;AFwrBhB;;AErrBY;EACI;EAKA;AForBhB;;AEnsBY;EACI;EAKA;AFksBhB;;AGlhBA;;EAEI;EACA;EACA;EAGA;EAGA;EACA;AHihBJ;;AG9gBA;EAEI;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EAMA;EAKA;EAKA;EAKA;EAIA;EAGA;EAGA;EAGA;EAII;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAKA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAOA;EAAA;EAAA;EAAA;EAAA;EAKA;EAAA;EAAA;EAAA;EAAA;EAKA;EAAA;EAAA;EAAA;EAAA;EAKA;EAAA;EAAA;EAAA;EAAA;EAKA;EAAA;EAAA;EAAA;EAAA;EAKA;EAAA;EAAA;EAAA;EAAA;EAKA;EAAA;EAAA;EAAA;EAAA;EAIJ;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAYA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EAGA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AH6gBJ;;AIvhCE;EL6BE;EAZE;EEjCF;EF6CA;EAAA;EExCA;EFwCA;EExCA;EF4BE;EEjCF;EAKA;EFwCA;EAAA;EExCA;EF4BE;EEjCF;EAKA;EFwCA;EAAA;EExCA;EFwCA;EK+WA,UCrYM;ENsBN;EKFE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAeA;EACA,wDE9E2B;ANolCjC;AI5xBE;ELjQE;ACgiCJ;AOzZE;ERvoBE;ACmiCJ;AIlxBE;ELjRE;ACsiCJ;AOjeE;ERrkBE;ACyiCJ;AIztBE;ELhVE;AC4iCJ;AOveE;ERrkBE;AC+iCJ;AI7uBE;ELlUE;ACkjCJ;AQxjCI;EPlCA;EF4BE;EEjCF;EAKA;EFwCA;EAAA;EExCA;EFwCA;EExCA;EFwCA;EExCA;EF4BE;EEjCF;EAKA;EFwCA;EAAA;ACkkCJ;AOrdE;ERznBI;EEjCF;EF6CA;EAAA;ACukCJ;AI7sBE;EHlaE;EFwCA;EExCA;EFwCA;AC6kCJ;AQnlCI;EPlCA;EFwCA;EExCA;EFwCA;ACmlCJ;AQzlCI;EJgBI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AJ4kCR;AIrtBE;EK5JE;EACA;EVzPE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;UAAA;EAZE;EEjCF;EF6CA;EAAA;EK4YE;EAEA;EACA;AJ0uBN;AIruBE;EAEI;AJsuBN;AIjuBE;EAEI;AJkuBN;AI7tBE;EKtLE;EACA;EVzPE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;UAAA;EAZE;EEjCF;EF6CA;EAAA;EUwRA,cA2CQ;EAoBN;EACA;EACA;EL8EA;EACA;AJsvBN;ASpzBE;EAyCA;EACA;EACA,YLe0C;EKd1C;EAxCI;ATuzBN;AIxvBE;EAEI;AJyvBN;AInvBE;;EAGI;AJovBN;;AI/oCE;EAEI;AJipCN;AQtrCI;EJwCI;AJipCR;;AI5oCE;EAEI;EASA,0BC/EY;ALqtClB;AQ9rCI;EJmDI;AJ8oCR;;AIroCE;EAEI;EAQA,0BC5FW;AL4tCjB;AQtsCI;EJiEI;AJwoCR;;AI/nCE;EAEI;EACA;EACA;EACA;AJioCN;;AI7nCE;EK+JE;EACA;EVzPE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;UAAA;EAZE;EEjCF;EF6CA;EAAA;EUwRA,cA2CQ;EAoBN;EACA;EACA;EAIA;AT44BN;AS/3BE;EAyCA;EACA;EACA,YLrUU;EKsUV;EAxCI;ATk4BN;ASr3BE;EAwBA;EACA;EACA,YLpUa;EKqUb;EAvBI;ATw3BN;;AIjqCE;EKsJE;EACA;EVzPE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;EAZE;EEjCF;EF6CA;EAAA;UAAA;EAZE;EEjCF;EF6CA;EAAA;EUwRA,cA2CQ;EAoBN;EACA;EACA;EL9PA;AJ2rCN;AS56BE;EAyCA;EACA;EACA,YL7T0C;EK8T1C;EAxCI;AT+6BN;;AI9rCE;EAEI;EACA;EACA;AJgsCN;;AItrCE;EHrJE;EFwCA;EExCA;EFwCA;EAAA;EKiHE;EACA;AJ0rCN;AQlzCI;EPlCA;EFwCA;EAAA;EExCA;EFwCA;ACkzCJ;AI9rCM;EACE;AJgsCR;;AI3rCE;EHlKE;EFwCA;EExCA;EFwCA;EK8HE;AJ+rCN;AQn0CI;EPlCA;EFwCA;EExCA;EFwCA;ACm0CJ;;AI5rCE;EMOE;EACA,6HA0FW;ETjRX;EFwCA;EExCA;EFwCA;EAAA;EKiJE;EACA;AJ4rCN;AI1+BE;ELpWE;ACi1CJ;AQv1CI;EPlCA;EFwCA;EAAA;EExCA;EFwCA;ACu1CJ;AIlsCI;EAEI;AJmsCR;;AI9rCE;EAEI;EACA;EACA;EACA;EACA;EACA;EACA;EAIA;EACA,wDEhO2B;AN65CjC;AI1rCI;EAEI;AJ2rCR;AIvrCI;EAEI;AJwrCR;AIprCI;EAEI,0BCvNU;ED2NV;AJkrCR;AI9qCI;EAEI,0BChOS;EDoOT;AJ4qCR;;AAz7CA;;EAEI;AA47CJ;;AAx7CI;;EAEI;AA27CR;AAz7CQ;;EACI;AA47CZ;AAt7CQ;;;EAGI;AAw7CZ;;AAj7CA;EACI;EACA;EACA;EACA;AAo7CJ;;AAj7CA;EACI;AAo7CJ;;AAj7CA;EACI;AAo7CJ,C","file":"element-drawer.css","sourcesContent":["//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/feature-targeting/feature-targeting';\n@use './css';\n@use './custom-properties';\n@use './gss';\n@use './keys';\n@use './replace';\n@use './theme-color';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  :root {\n    @include feature-targeting.targets($feat-color) {\n      @each $style in theme-color.get-theme-keys() {\n        @include custom-properties.declaration(\n          keys.create-custom-property($style)\n        );\n      }\n    }\n  }\n\n  @each $style in theme-color.get-theme-keys() {\n    @if $style != 'background' and $style != 'surface' {\n      .mdc-theme--#{$style} {\n        @include feature-targeting.targets($feat-color) {\n          @include property(color, $style, $important: true);\n        }\n      }\n    } @else {\n      .mdc-theme--#{$style} {\n        @include feature-targeting.targets($feat-color) {\n          @include property(background-color, $style);\n        }\n      }\n    }\n  }\n\n  // CSS rules for using primary and secondary (plus light/dark variants) as background colors.\n  @each $style in ('primary', 'secondary') {\n    .mdc-theme--#{$style}-bg {\n      @include feature-targeting.targets($feat-color) {\n        @include property(background-color, $style, $important: true);\n      }\n    }\n  }\n}\n\n/// Applies a dynamic value to the specified property. This mixin should be used\n/// in theme style mixins when setting properties.\n///\n/// The value may be any of the following:\n/// - a standard CSS value\n/// - a custom property Map, e.g. (varname: --mdc-foo, fallback: blue)\n/// - a Material theme key String, e.g. 'primary', 'on-primary'\n///\n/// @example\n///   @include theme.property(color, teal);\n///   @include theme.property(color, custom-properties.create(foo, blue));\n///   @include theme.property(color, primary);\n///\n/// A `$replace` Map parameter may be provided to replace key/value pairs for\n/// string values. This can be used to substitute parameters in complex string\n/// values such as `calc()` with custom properties.\n///\n/// @example\n///   @include theme.property(\n///     width,\n///     calc(foo + bar),\n///     $replace: (foo: custom-properties.create(foo), bar: 8px)\n///   );\n///\n/// Note: Material theme key Strings (e.g. `primary`) are not supported as\n/// replacement values.\n///\n/// @param {String} $property - The name of the CSS property.\n/// @param {String | Number | Color | List | Map} $value - The property's value.\n/// @param {Map} $gss - Optional Map of GSS annotations to set.\n/// @param {Map} $replace - An optional Map of replacement key/value pairs if\n///     the `$value` is a string.\n/// @param {Bool} $important - Set to true to add an `!important` rule. Defaults\n///     to false.\n@mixin property(\n  $property,\n  $value,\n  $gss: (),\n  $replace: null,\n  $important: false\n) {\n  @if custom-properties.is-custom-prop($value) {\n    // $value is a custom property Map\n    @include custom-properties.declaration(\n      $property,\n      $value,\n      $gss: $gss,\n      $important: $important\n    );\n  } @else if keys.is-key($value) {\n    // $value is a key String\n    $custom-prop: keys.create-custom-property($value);\n\n    @if theme-color.is-theme-key($value) {\n      // Determine if we need to use a compile-time updated value to support\n      // Angular.\n      $key: $value;\n      // (changed: Bool, value: *)\n      $result: theme-color.deprecated-get-global-theme-key-value-if-changed(\n        $key\n      );\n\n      @if map.get($result, changed) {\n        // $mdc-theme-property-values was changed at compile time. Use the\n        // global value instead. Otherwise if it was not changed, continue\n        // using the key store normally.\n        $custom-prop: keys.create-custom-property($key);\n        $custom-prop: custom-properties.set-fallback(\n          $custom-prop,\n          map.get($result, value)\n        );\n      }\n    }\n\n    @include custom-properties.declaration(\n      $property,\n      $custom-prop,\n      $gss: $gss,\n      $important: $important\n    );\n  } @else {\n    // $value is a standard CSS value\n    $fallback: null;\n    @if $replace {\n      // If any replacements are null, treat the entire value as null (do not\n      // emit anything).\n      @each $name, $replacement in $replace {\n        @if $replacement == null {\n          $value: null;\n        }\n      }\n    }\n\n    @if $replace and $value {\n      @if meta.type-of($replace) != 'map' {\n        @error 'mdc-theme: Invalid replacement #{$replace}. Must be a Map.';\n      }\n\n      $replace-map-fallback: ();\n      $replace-map-value: ();\n      $needs-fallback: false;\n      @each $name, $replacement in $replace {\n        @if custom-properties.is-custom-prop($replacement) {\n          $replace-value: custom-properties.get-declaration-value($replacement);\n          $replace-fallback: custom-properties.get-declaration-fallback(\n            $replacement\n          );\n          @if $replace-fallback {\n            $needs-fallback: true;\n          }\n\n          $replace-map-value: map.set(\n            $replace-map-value,\n            $name,\n            $replace-value\n          );\n          $replace-map-fallback: map.set(\n            $replace-map-fallback,\n            $name,\n            $replace-fallback\n          );\n        } @else {\n          $replace-map-value: map.set($replace-map-value, $name, $replacement);\n          $replace-map-fallback: map.set(\n            $replace-map-fallback,\n            $name,\n            $replacement\n          );\n        }\n      }\n\n      @if meta.type-of($value) == 'string' {\n        @if $needs-fallback {\n          $fallback: replace.replace-string($value, $replace-map-fallback);\n        }\n        $value: replace.replace-string($value, $replace-map-value);\n      } @else if meta.type-of($value) == 'list' {\n        @if $needs-fallback {\n          $fallback: replace.replace-list($value, $replace-map-fallback);\n        }\n        $value: replace.replace-list($value, $replace-map-value);\n      } @else {\n        @error 'mdc-theme: Invalid replacement value #{$value}. $replace may only be used with string or list values.';\n      }\n    }\n\n    @include css.declaration(\n      $property,\n      $value,\n      $fallback-value: $fallback,\n      $gss: $gss,\n      $important: $important\n    );\n  }\n}\n\n// @deprecated use the `property()` mixin instead\n@mixin prop($property, $style, $important: false) {\n  @include property($property, $style, $important: $important);\n}\n\n/// Validates keys in provided theme configuration by comparing with original\n/// theme configuration.\n/// Use this in component's `theme()` mixin implementation to validate if\n/// provided theme configuration has supported theme configuration keys.\n/// @param {Map} $origin-theme - Original theme configuration in Sass map format\n///     that has all supported keys.\n/// @param {Map} $custom-theme - Provided theme configuration in Sass map format\n///     that should be validated against `$origin-theme`.\n/// @examples\n///     @mixin theme($theme) {\n///       @include theme.validate-keys($light-theme, $theme);\n///\n///       // ...\n///     }\n@mixin validate-keys($origin-theme, $custom-theme, $test-only: false) {\n  $origin-keys: map.keys($origin-theme);\n  $unsupported-keys: ();\n  $unsupported-custom-prop-keys: ();\n\n  @each $key, $value in $custom-theme {\n    @if (not list.index($origin-keys, $key)) {\n      $unsupported-keys: list.append(\n        $unsupported-keys,\n        $key,\n        $separator: comma\n      );\n    }\n\n    $is-prop: custom-properties.is-custom-prop($value) or\n      custom-properties.is-custom-prop-string($value);\n    @if $is-prop {\n      $unsupported-custom-prop-keys: list.append(\n        $unsupported-custom-prop-keys,\n        $key,\n        $separator: comma\n      );\n    }\n  }\n\n  @if list.length($unsupported-keys) > 0 {\n    $error-message: 'Unsupported keys found: #{$unsupported-keys}. Expected one of: #{$origin-keys}.';\n\n    @if $test-only {\n      content: $error-message;\n    } @else {\n      @error $error-message;\n    }\n  }\n\n  @if list.length($unsupported-custom-prop-keys) > 0 {\n    $error-message: 'Custom properties are not supported for theme map keys: #{$unsupported-custom-prop-keys}';\n\n    @if $test-only {\n      content: $error-message;\n    } @else {\n      @error $error-message;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","@use '../../common/element.core';\n@use '@material/drawer';\n@use '@material/list';\n\n@include drawer.core-styles;\n@include drawer.dismissible-core-styles;\n@include drawer.modal-core-styles;\n// @include list.core-styles;\n\n.mdc-drawer .mdc-list-item--selected,\n.mdc-drawer .mdc-list-item--activated {\n    --mdc-theme-primary: var(--lmnt-theme-primary-on-surface);\n}\n\n.mdc-drawer {\n    .mdc-list-item--selected,\n    .mdc-list-item--activated {\n        color: var(--lmnt-theme-primary-on-surface);\n\n        .mdc-list-item__graphic {\n            color: var(--lmnt-theme-primary-on-surface);\n        }\n    }\n\n    // NOTE: Needed for correct ripple color to show\n    .mdc-list-item__ripple {\n        .mdc-list-item__ripple::before,\n        :not(.mdc-list-item--disabled).mdc-list-item--activated,\n        .mdc-list-item__ripple::after {\n            background-color: var(--lmnt-theme-primary);\n        }\n    }\n}\n\n// TODO: refactor magic numbers on `height` and `margin-bottom`\n// NOTE: custom for avatar image in drawer header\n.mdc-drawer__header-avatar {\n    border-radius: 50%;\n    height: 35px;\n    margin-top: 12px;\n    width: auto;\n}\n\n.mdc-drawer.lmnt-drawer--permanent:not(.mdc-drawer--closing) + .mdc-drawer-app-content {\n    margin-left: 256px;\n}\n\n.lmnt-drawer--permanent {\n    position: fixed;\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n@use 'sass:map';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// @example\n///   `annotate((noflip: true)) => /* @noflip */`\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations) {\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */\n  }\n}\n","@use 'functions' as functions;\n@use 'sass:map';\n\n$white: rgba(#fff, 1);\n$black: rgba(#000, 0.87);\n///////////////////////////\n///////  Media Query ///////\n////////////////////////////\n\n// TODO: document breakpoint rationale\n\n// Dev discussion on GitHub\n// https://github.platforms.engineering/element/element-core/issues/169\n\n/* stylelint-disable scss/media-feature-value-dollar-variable */\n@mixin for-size($size) {\n    @if $size == phone-only {\n        @media (max-width: 599px) {\n            @content;\n        }\n    } @else if $size == tablet-portrait-up {\n        @media (min-width: 600px) {\n            @content;\n        }\n    } @else if $size == tablet-landscape-up {\n        @media (min-width: 720px) {\n            @content;\n        }\n    } @else if $size == desktop-up {\n        @media (min-width: 840px) {\n            @content;\n        }\n    } @else if $size == mid-desktop-up {\n        @media (min-width: 1024px) {\n            @content;\n        }\n    } @else if $size == big-desktop-up {\n        @media (min-width: 1440px) {\n            @content;\n        }\n    }\n}\n/* stylelint-enable scss/media-feature-value-dollar-variable */\n\n//////////////////////////////\n///////  Theme Utility ///////\n//////////////////////////////\n\n@mixin on-primary() {\n    .lmnt-theme-primary-bg {\n        @content;\n    }\n}\n\n@mixin on-secondary() {\n    .lmnt-theme-secondary-bg {\n        @content;\n    }\n}\n\n@mixin on-danger() {\n    .lmnt-theme-danger-bg {\n        @content;\n    }\n}\n\n//////////////////////////////////////\n///////  On Background Classes ///////\n//////////////////////////////////////\n\n// Note: utility classes for `background-color` and `color`\n// Note: foreground `color` is determined by `color-contrast-value-check`\n@mixin onBackgroundColorClasses(\n    $color,\n    $value,\n    $themeBlack: $black,\n    $themeWhite: $white\n) {\n    .lmnt-theme-#{$color}--bg, // Keeping both class names until v6.  For consistency with the DK kit we will have the double hyphen\n    .lmnt-theme-#{$color}-bg {\n        background-color: $value;\n        color: functions.color-contrast-value-check(\n            $value,\n            $blackText: $themeBlack,\n            $whiteText: $themeWhite\n        );\n    }\n\n    .lmnt-theme-#{$color} {\n        color: $value;\n    }\n}\n\n@mixin onClasses($color, $value) {\n    @if str-index($color, '-stroke') {\n        .lmnt-theme-#{$color} {\n            border-color: $value;\n            border-bottom-color: $value;\n        }\n    } @else {\n        .lmnt-theme-#{$color} {\n            color: $value;\n        }\n    }\n}\n\n@mixin colorRamp($map, $themeBlack: $black, $themeWhite: $white) {\n    @each $color, $value in $map {\n        @include onBackgroundColorClasses(\n            $color: $color,\n            $value: $value,\n            $themeBlack: $themeBlack,\n            $themeWhite: $themeWhite\n        );\n    }\n}\n\n@mixin mapUtilityColors($class, $color, $value) {\n    #{$class}#{$color} {\n        background-color: #{map.get($value, 'surface')};\n        color: #{map.get($value, 'on-surface')};\n    }\n}\n\n@mixin mapCommonColors($class, $color, $value) {\n    #{$class}#{$color} {\n        background-color: #{map.get($value, 'surface')};\n        color: #{map.get($value, 'on-color')};\n    }\n}\n\n@mixin mapOutlineColors($class, $color, $value) {\n    #{$class}#{$color} {\n        border-color: #{map.get($value, 'on-surface')};\n        color: #{map.get($value, 'on-surface')};\n    }\n}\n\n@mixin gradientRamp($gradient-colors) {\n    @each $colorName, $colorVal in $gradient-colors {\n        @if str-index($colorName, 'to-top') {\n            .lmnt-theme--bg-linear-gradient-#{$colorName} {\n                background: linear-gradient(\n                    0deg,\n                    hsla(0, 0, 0, 0) 0,\n                    rgba($colorVal, 0.8) 100%\n                );\n                color: functions.color-contrast-value-check(rgba($colorVal, 0.8));\n            }\n        } @else {\n            .lmnt-theme--bg-linear-gradient-#{$colorName} {\n                background: linear-gradient(\n                    180deg,\n                    hsla(0, 0, 0, 0) 0,\n                    rgba($colorVal, 0.8) 100%\n                );\n                color: functions.color-contrast-value-check(rgba($colorVal, 0.8));\n            }\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '@material/theme/mdc-theme';\n@use 'sass-hex-rgb' as rgb;\n@use 'functions' as functions;\n@use 'mixins' as mixins;\n@use '@material/elevation' as elevation;\n\n$assetsPath: '..' !default;\n\n///////////////////////////\n//////  Font Stacks  //////\n///////////////////////////\n\n// NOTE: double-quote string wrapper needed to preserve font-family single-quotes\n$Roboto: \"'Roboto', 'Arial Narrow', helvetica, arial, sans-serif\";\n\n//////////////////////\n//////  Colors  //////\n//////////////////////\n\n$athens-gray: #f4f6f8;\n$black: #000;\n$dark-charcoal: #4d4d4d;\n$dusty-gray: #9a9a9a;\n$mine-shaft: #333;\n$white: #fff;\n$wild-sand: #f5f5f5;\n\n$lmnt-black-rgb: rgb.toValues($black);\n$lmnt-white-rgb: rgb.toValues($white);\n////////////////////////\n//////  Emphasis  //////\n////////////////////////\n\n$emphasis-active-black: 0.87;\n$emphasis-active: 1;\n$emphasis-completed: 0.6;\n$emphasis-disabled: 0.38;\n$emphasis-dragged: 0.08;\n$emphasis-focus--alt: 0.24;\n$emphasis-focus: 0.12;\n$emphasis-high-black: 0.87;\n$emphasis-high: 1;\n$emphasis-highlighted: 0.24;\n$emphasis-hover--alt: 0.08;\n$emphasis-hover: 0.04;\n$emphasis-inactive: 0.6;\n$emphasis-low: 0.38;\n$emphasis-med: 0.6;\n$emphasis-pressed--alt: 0.32;\n$emphasis-pressed: 0.16;\n$emphasis-resting: 0.08;\n$emphasis-selected: 0.08;\n$emphasis-stroke: 0.12;\n$emphasis-stroke-dark: 0.24;\n$emphasis-icon-in-component: 0.54;\n\n// these are the reverse of the above\n$emphasis-on-surface-active-black: calc(1 - #{$emphasis-active-black});\n$emphasis-on-surface-active: calc(1 - #{$emphasis-active});\n$emphasis-on-surface-completed: calc(1 - #{$emphasis-completed});\n$emphasis-on-surface-disabled: calc(1 - #{$emphasis-disabled});\n$emphasis-on-surface-dragged: calc(1 - #{$emphasis-dragged});\n$emphasis-on-surface-focus--alt: calc(1 - #{$emphasis-focus--alt});\n$emphasis-on-surface-focus: calc(1 - #{$emphasis-focus});\n$emphasis-on-surface-high-black: calc(1 - #{$emphasis-high-black});\n$emphasis-on-surface-high: calc(1 - #{$emphasis-high});\n$emphasis-on-surface-highlighted: calc(1 - #{$emphasis-highlighted});\n$emphasis-on-surface-hover-alt: calc(1 - #{$emphasis-hover--alt});\n$emphasis-on-surface-hover: calc(1 - #{$emphasis-hover});\n$emphasis-on-surface-inactive: calc(1 - #{$emphasis-inactive});\n$emphasis-on-surface-low: calc(1 - #{$emphasis-low});\n$emphasis-on-surface-med: calc(1 - #{$emphasis-med});\n$emphasis-on-surface-pressed--alt: calc(1 - #{$emphasis-pressed--alt});\n$emphasis-on-surface-pressed: calc(1 - #{$emphasis-pressed});\n$emphasis-on-surface-resting: calc(1 - #{$emphasis-resting});\n$emphasis-on-surface-selected: calc(1 - #{$emphasis-selected});\n$emphasis-on-surface-stroke: calc(1 - #{$emphasis-stroke});\n$emphasis-on-surface-stroke-dark: calc(1 - #{$emphasis-stroke-dark});\n$emphasis-on-unknown-white: 0.54;\n\n/////////////////////\n//////  Theme  //////\n/////////////////////\n\n$primaryMap: (\n    primary-50: #f1edf8,\n    primary-100: #c7b7e4,\n    primary-200: #b9a5de,\n    primary-300: #9381d1,\n    primary-400: #825dc4,\n    primary-500: #673ab7,\n    primary-600: #553096,\n    primary-700: #4b2b86,\n    primary-800: #422575,\n    primary-900: #261643\n) !default;\n$secondaryMap: (\n    secondary-50: #edf8ff,\n    secondary-100: #caecff,\n    secondary-200: #b9e5ff,\n    secondary-300: #96d9ff,\n    secondary-400: #74ccff,\n    secondary-500: #40baff,\n    secondary-600: #3599d1,\n    secondary-700: #2f88ba,\n    secondary-800: #23668c,\n    secondary-900: #18445d\n) !default;\n$successMap: (\n    success-50: #eeffef,\n    success-100: #d3ffd7,\n    success-200: #a9f6af,\n    success-300: #6fef7a,\n    success-400: #29e539,\n    success-500: #13c545,\n    success-600: #0ea01a,\n    success-700: #01830c,\n    success-800: #075a0e,\n    success-900: #053709\n) !default;\n$dangerMap: (\n    danger-50: #ffeaed,\n    danger-100: #ffccce,\n    danger-200: #ee9894,\n    danger-300: #e3716a,\n    danger-400: #ec5145,\n    danger-500: #ef4227,\n    danger-600: #e13727,\n    danger-700: #cf2d22,\n    danger-800: #c2261b,\n    danger-900: #b3190d\n) !default;\n$ancillaryMap: (\n    ancillary-100: #000,\n    ancillary-200: #000,\n    ancillary-300: #000,\n    ancillary-400: #000,\n    ancillary-500: #000,\n    ancillary-600: #000,\n    ancillary-700: #000,\n    ancillary-800: #000,\n    ancillary-900: #000\n) !default;\n$dataVizComparativeMap: (\n    dataVizComparative-50: #240f67,\n    dataVizComparative-100: #2d72c4,\n    dataVizComparative-200: #89c9b7,\n    dataVizComparative-300: #785e9f,\n    dataVizComparative-400: #3b8ec8,\n    dataVizComparative-500: #b7dbbc,\n    dataVizComparative-600: #4153af,\n    dataVizComparative-700: #47a3c4,\n    dataVizComparative-800: #dfeccb,\n    dataVizComparative-900: #6332ad\n);\n$dataVizSequential1Map: (\n    dataVizSequential1-50: #261643,\n    dataVizSequential1-100: #422575,\n    dataVizSequential1-200: #6540aa,\n    dataVizSequential1-300: #7e52d0,\n    dataVizSequential1-400: #9a75dd,\n    dataVizSequential1-500: #af8bef,\n    dataVizSequential1-600: #c6a6ff,\n    dataVizSequential1-700: #d8c1ff,\n    dataVizSequential1-800: #e8dbff,\n    dataVizSequential1-900: #f5efff\n);\n$dataVizSequential2Map: (\n    dataVizSequential2--50: #052d44,\n    dataVizSequential2--100: #08517b,\n    dataVizSequential2--200: #1774aa,\n    dataVizSequential2--300: #319bd8,\n    dataVizSequential2--400: #40baff,\n    dataVizSequential2--500: #75cdff,\n    dataVizSequential2--600: #97e0ff,\n    dataVizSequential2--700: #a9f0ff,\n    dataVizSequential2--800: #c3fbff,\n    dataVizSequential2--900: #ddfffd\n);\n\n@include mixins.colorRamp($primaryMap);\n@include mixins.colorRamp($secondaryMap);\n@include mixins.colorRamp($ancillaryMap);\n@include mixins.colorRamp($dataVizComparativeMap);\n@include mixins.colorRamp($dataVizSequential1Map);\n@include mixins.colorRamp($dataVizSequential2Map);\n\n$lmnt-theme-primary: #673ab7 !default;\n$lmnt-theme-primary-variant: #4b2b86 !default;\n$lmnt-theme-secondary: #40baff !default;\n$lmnt-theme-secondary-variant: #2f88ba !default;\n$lmnt-theme-danger: #cf2d22 !default;\n$lmnt-theme-danger-variant: #b3190d !default;\n$lmnt-theme-danger-alt: $wild-sand !default;\n$lmnt-theme-success: #0ea01a !default;\n$lmnt-theme-success-variant: #13c545 !default;\n\n$onClassesMap: (\n    on-background: functions.color-contrast-value-check($white),\n    on-surface: functions.color-contrast-value-check($white),\n    on-primary: functions.color-contrast-value-check($lmnt-theme-primary),\n    on-primary-variant: functions.color-contrast-value-check($lmnt-theme-primary-variant),\n    primary-on-surface: $lmnt-theme-primary,\n    on-secondary: functions.color-contrast-value-check($lmnt-theme-secondary),\n    on-secondary-variant:\n        functions.color-contrast-value-check($lmnt-theme-secondary-variant),\n    secondary-on-surface: #23668c,\n    on-danger: functions.color-contrast-value-check($lmnt-theme-danger),\n    on-danger-alt: #cf2d22,\n    on-danger-variant: functions.color-contrast-value-check($lmnt-theme-danger-variant),\n    danger-on-surface: #cf2d22,\n    success-on-surface: #01830c,\n    on-success: functions.color-contrast-value-check($lmnt-theme-success)\n) !default;\n$lmnt-primary-on-surface-rgb: rgb.toValues(map.get($onClassesMap, 'primary-on-surface'));\n\n$onSurfaceMap: (\n    on-surface-active: rgba(map.get($onClassesMap, 'on-surface'), $emphasis-high-black),\n    on-surface-inactive: rgba(map.get($onClassesMap, 'on-surface'), $emphasis-inactive),\n    on-surface-disabled: rgba(map.get($onClassesMap, 'on-surface'), $emphasis-disabled),\n    on-surface-stroke: rgba(map.get($onClassesMap, 'on-surface'), $emphasis-stroke),\n    on-surface-base: rgba(map.get($onClassesMap, 'on-surface'), $emphasis-high)\n) !default;\n\n$onPrimaryMap: (\n    on-primary-active: rgba(map.get($onClassesMap, 'on-primary'), $emphasis-high-black),\n    on-primary-inactive: rgba(map.get($onClassesMap, 'on-primary'), $emphasis-inactive),\n    on-primary-disabled: rgba(map.get($onClassesMap, 'on-primary'), $emphasis-disabled),\n    on-primary-stroke: rgba(map.get($onClassesMap, 'on-primary'), $emphasis-stroke),\n    on-primary-base: rgba(map.get($onClassesMap, 'on-primary'), $emphasis-high)\n) !default;\n\n$onSecondaryMap: (\n    on-secondary-active:\n        rgba(map.get($onClassesMap, 'on-secondary'), $emphasis-high-black),\n    on-secondary-inactive:\n        rgba(map.get($onClassesMap, 'on-secondary'), $emphasis-inactive),\n    on-secondary-disabled:\n        rgba(map.get($onClassesMap, 'on-secondary'), $emphasis-disabled),\n    on-secondary-stroke: rgba(map.get($onClassesMap, 'on-secondary'), $emphasis-stroke),\n    on-secondary-base: rgba(map.get($onClassesMap, 'on-secondary'), $emphasis-high)\n) !default;\n\n$onSuccessMap: (\n    on-success-active: rgba(map.get($onClassesMap, 'on-success'), $emphasis-high-black),\n    on-success-inactive: rgba(map.get($onClassesMap, 'on-success'), $emphasis-inactive),\n    on-success-disabled: rgba(map.get($onClassesMap, 'on-success'), $emphasis-disabled),\n    on-success-stroke: rgba(map.get($onClassesMap, 'on-success'), $emphasis-stroke),\n    on-success-base: rgba(map.get($onClassesMap, 'on-success'), $emphasis-high)\n) !default;\n\n$onDangerMap: (\n    on-danger-active: rgba(map.get($onClassesMap, 'on-danger'), $emphasis-high-black),\n    on-danger-inactive: rgba(map.get($onClassesMap, 'on-danger'), $emphasis-inactive),\n    on-danger-disabled: rgba(map.get($onClassesMap, 'on-danger'), $emphasis-disabled),\n    on-danger-stroke: rgba(map.get($onClassesMap, 'on-danger'), $emphasis-stroke),\n    on-danger-base: rgba(map.get($onClassesMap, 'on-danger'), $emphasis-high)\n) !default;\n\n$onUnknownBlackClassesMap: (\n    on-unknown-black-active: rgba(0, 0, 0, $emphasis-high-black),\n    on-unknown-black-inactive: rgba(0, 0, 0, $emphasis-inactive),\n    on-unknown-black-disabled: rgba(0, 0, 0, $emphasis-disabled),\n    on-unknown-black-stroke: rgba(0, 0, 0, $emphasis-stroke),\n    on-unknown-black-base: rgba(0, 0, 0, $emphasis-high)\n) !default;\n\n$onUnknownWhiteClassesMap: (\n    on-unknown-white-active: rgba(255, 255, 255, $emphasis-high),\n    on-unknown-white-inactive: rgba(255, 255, 255, $emphasis-on-unknown-white),\n    on-unknown-white-disabled: rgba(255, 255, 255, $emphasis-disabled),\n    on-unknown-white-stroke: rgba(255, 255, 255, $emphasis-stroke),\n    on-unknown-white-base: rgba(255, 255, 255, 1)\n) !default;\n\n//////////////////\n/// GRADIENTS ///\n/////////////////\n\n$gradient-colors: (\n    'primary-to-bottom': $lmnt-theme-primary,\n    'primary-dark-to-bottom': map.get($primaryMap, 'primary-900'),\n    'primary-darker-to-bottom': darken(map.get($primaryMap, 'primary-900'), 10),\n    'secondary-to-bottom': $lmnt-theme-secondary,\n    'secondary-dark-to-bottom': map.get($secondaryMap, 'secondary-900'),\n    'secondary-darker-to-bottom': darken(map.get($secondaryMap, 'secondary-900'), 10),\n    'primary-to-top': $lmnt-theme-primary,\n    'primary-dark-to-top': map.get($primaryMap, 'primary-900'),\n    'primary-darker-to-top': darken(map.get($primaryMap, 'primary-900'), 10),\n    'secondary-to-top': $lmnt-theme-secondary,\n    'secondary-dark-to-top': map.get($secondaryMap, 'secondary-900'),\n    'secondary-darker-to-top': darken(map.get($secondaryMap, 'secondary-900'), 10),\n    'black-to-bottom': $black,\n    'black-to-top': $black,\n    'white-to-bottom': $white,\n    'white-to-top': $white\n) !default;\n\n@include mixins.gradientRamp($gradient-colors);\n\n////////////////////\n/// Breakpoints ///\n///////////////////\n\n$breakpointsMap: (\n    'mobile-min': 0,\n    'mobile-max': 599px,\n    'tablet-sm-min': 600px,\n    'tablet-sm-max': 719px,\n    'tablet-lg-min': 720px,\n    'tablet-lg-max': 839px,\n    'desktop-sm-min': 840px,\n    'desktop-sm-max': 1023px,\n    'desktop-lg-min': 1024px,\n    'desktop-lg-max': 1439px,\n    'desktop-xl-min': 1440px,\n    'content-max-width-md': 776px,\n    'content-max-width-lg': 1052px,\n    'content-max-width-xl': 1176px\n) !default;\n\n:root,\n.lmnt {\n    --lmnt-theme-on-background: #{map.get($onClassesMap, 'on-background')};\n    --lmnt-theme-on-surface: #{map.get($onClassesMap, 'on-surface')};\n    --lmnt-theme-primary-font: #{$Roboto};\n\n    // Element Theme Defaults - Background\n    --lmnt-theme-background: #{$white};\n\n    // Element Theme Defaults - Surface\n    --lmnt-theme-surface: #{$white};\n    --lmnt-theme-surface-variant: #{$wild-sand};\n}\n\n.lmnt {\n    // Element Theme Defaults - Font\n    --lmnt-theme-primary-font: #{$Roboto};\n    --lmnt-theme-secondary-font: #{$Roboto};\n\n    --lmnt-black-rgb: #{$lmnt-black-rgb};\n    --lmnt-white-rgb: #{$lmnt-white-rgb};\n    // Element Theme Defaults - Primary\n    --lmnt-theme-primary: #{$lmnt-theme-primary};\n    --lmnt-theme-on-primary: #{map.get($onClassesMap, 'on-primary')};\n    --lmnt-theme-primary-variant: #{$lmnt-theme-primary-variant};\n    --lmnt-theme-on-primary-variant: #{map.get($onClassesMap, 'on-primary-variant')};\n    --lmnt-theme-primary-on-surface: #{map.get($onClassesMap, 'primary-on-surface')};\n    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};\n\n    // Element Theme Defaults - Secondary\n    --lmnt-theme-secondary: #{$lmnt-theme-secondary};\n    --lmnt-theme-on-secondary: #{map.get($onClassesMap, 'on-secondary')};\n    --lmnt-theme-secondary-variant: #2f88ba;\n    --lmnt-theme-on-secondary-variant: #{map.get($onClassesMap, 'on-secondary-variant')};\n    --lmnt-theme-secondary-on-surface: #{map.get($onClassesMap, 'secondary-on-surface')};\n\n    // Element Theme Defaults - Danger\n    --lmnt-theme-danger: #{$lmnt-theme-danger};\n    --lmnt-theme-on-danger: #{map.get($onClassesMap, 'on-danger')};\n    --lmnt-theme-danger-alt: #{$wild-sand};\n    --lmnt-theme-on-danger-alt: #{map.get($onClassesMap, 'on-danger-alt')};\n    --lmnt-theme-danger-variant: #{$lmnt-theme-danger-variant};\n    --lmnt-theme-on-danger-variant: #{map.get($onClassesMap, 'on-danger-variant')};\n    --lmnt-theme-danger-on-surface: #{map.get($onClassesMap, 'danger-on-surface')};\n\n    // Element Theme Defaults - Success\n    --lmnt-theme-success: #{$lmnt-theme-success};\n    --lmnt-theme-on-success: #{map.get($onClassesMap, 'on-success')};\n    --lmnt-theme-success-variant: #{$lmnt-theme-success-variant};\n    --lmnt-theme-success-on-surface: #{map.get($onClassesMap, 'success-on-surface')};\n\n    // On surface rgb\n    $lmnt-primary-on-surface-rgb: rgb.toValues(\n        map.get($onClassesMap, 'primary-on-surface')\n    );\n    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};\n\n    $lmnt-secondary-on-surface-rgb: rgb.toValues(\n        map.get($onClassesMap, 'secondary-on-surface')\n    );\n    --lmnt-secondary-on-surface-rgb: #{$lmnt-secondary-on-surface-rgb};\n\n    $lmnt-danger-on-surface-rgb: rgb.toValues(\n        map.get($onClassesMap, 'danger-on-surface')\n    );\n    --lmnt-danger-on-surface-rgb: #{$lmnt-danger-on-surface-rgb};\n\n    $lmnt-success-on-surface-rgb: rgb.toValues(\n        map.get($onClassesMap, 'danger-on-surface')\n    );\n    --lmnt-success-on-surface-rgb: #{$lmnt-success-on-surface-rgb};\n\n    // On color rgb\n    $lmnt-on-primary-rgb: rgb.toValues(map.get($onClassesMap, 'on-primary'));\n    --lmnt-on-primary-rgb: #{$lmnt-on-primary-rgb};\n\n    $lmnt-on-secondary-rgb: rgb.toValues(map.get($onClassesMap, 'on-secondary'));\n    --lmnt-on-secondary-rgb: #{$lmnt-on-secondary-rgb};\n\n    $lmnt-on-danger-rgb: rgb.toValues(map.get($onClassesMap, 'on-danger'));\n    --lmnt-on-danger-rgb: #{$lmnt-on-danger-rgb};\n\n    $lmnt-on-success-rgb: rgb.toValues(map.get($onClassesMap, 'on-success'));\n    --lmnt-on-success-rgb: #{$lmnt-on-success-rgb};\n\n    // Element Breakpoints\n    @each $name, $point in $breakpointsMap {\n        --lmnt-theme-breakpoint-#{$name}: #{$point};\n    }\n\n    // Element Primary Color Ramp\n    @each $name, $color in $primaryMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n    // Element Secondary Color Ramp\n    @each $name, $color in $secondaryMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n    // Element Success Color Ramp\n    @each $name, $color in $successMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n    // Element Danger Color Ramp\n    @each $name, $color in $dangerMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n    // Element Ancillary Color Ramp\n    @each $name, $color in $ancillaryMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n    // Element Data Viz Sequential 1 Color Ramp\n    @each $name, $color in $dataVizSequential1Map {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n    // Element Data Viz Sequential 2 Color Ramp\n    @each $name, $color in $dataVizSequential2Map {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n    // Element Data Viz Comparative Color Ramp\n    @each $name, $color in $dataVizComparativeMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n\n    // Element on Colors\n\n    // Element On Surface Color Ramp\n    @each $name, $color in $onSurfaceMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n\n    // Element On Primary Color Ramp\n    @each $name, $color in $onPrimaryMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n\n    // Element On Secondary Color Ramp\n    @each $name, $color in $onSecondaryMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n\n    // Element On Success Color Ramp\n    @each $name, $color in $onSuccessMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n\n    // Element On Danger Color Ramp\n    @each $name, $color in $onDangerMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n\n    // Element On Unknown Black Color Ramp\n    @each $name, $color in $onUnknownBlackClassesMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n\n    // Element On Unknown White Color Ramp\n    @each $name, $color in $onUnknownWhiteClassesMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n\n    // white/black\n    --lmnt-theme-black: #{$black};\n    --lmnt-theme-white: #{$white};\n    --lmnt-theme-icon-in-component: rgba(#{$black}, #{$emphasis-icon-in-component});\n\n    // Emphasis\n    --lmnt-theme-emphasis-active-black: #{$emphasis-active-black};\n    --lmnt-theme-emphasis-active: #{$emphasis-active};\n    --lmnt-theme-emphasis-completed: #{$emphasis-completed};\n    --lmnt-theme-emphasis-disabled: #{$emphasis-disabled};\n    --lmnt-theme-emphasis-dragged: #{$emphasis-dragged};\n    --lmnt-theme-emphasis-focus: #{$emphasis-focus};\n    --lmnt-theme-emphasis-high-black: #{$emphasis-high-black};\n    --lmnt-theme-emphasis-high: #{$emphasis-high};\n    --lmnt-theme-emphasis-highlighted: #{$emphasis-highlighted};\n    --lmnt-theme-emphasis-hover--alt: #{$emphasis-hover--alt};\n    --lmnt-theme-emphasis-hover: #{$emphasis-hover};\n    --lmnt-theme-emphasis-inactive: #{$emphasis-inactive};\n    --lmnt-theme-emphasis-low: #{$emphasis-low};\n    --lmnt-theme-emphasis-med: #{$emphasis-med};\n    --lmnt-theme-emphasis-pressed--alt: #{$emphasis-pressed--alt};\n    --lmnt-theme-emphasis-pressed: #{$emphasis-pressed};\n    --lmnt-theme-emphasis-resting: #{$emphasis-resting};\n    --lmnt-theme-emphasis-focus--alt: #{$emphasis-focus--alt};\n    --lmnt-theme-emphasis-selected: #{$emphasis-selected};\n    --lmnt-theme-emphasis-stroke: #{$emphasis-stroke};\n    --lmnt-theme-emphasis-stroke-dark: #{$emphasis-stroke-dark};\n    --lmnt-theme-emphasis-icon-in-component: #{$emphasis-icon-in-component};\n\n    // these are the reverse of the above\n    --lmnt-theme-emphasis-on-surface-active-black: #{$emphasis-on-surface-active-black};\n    --lmnt-theme-emphasis-on-surface-active: #{$emphasis-on-surface-active};\n    --lmnt-theme-emphasis-on-surface-completed: #{$emphasis-on-surface-completed};\n    --lmnt-theme-emphasis-on-surface-disabled: #{$emphasis-on-surface-disabled};\n    --lmnt-theme-emphasis-on-surface-dragged: #{$emphasis-on-surface-dragged};\n    --lmnt-theme-emphasis-on-surface-focus--alt: #{$emphasis-on-surface-focus--alt};\n    --lmnt-theme-emphasis-on-surface-focus: #{$emphasis-on-surface-focus};\n    --lmnt-theme-emphasis-on-surface-high-black: #{$emphasis-on-surface-high-black};\n    --lmnt-theme-emphasis-on-surface-high: #{$emphasis-on-surface-high};\n    --lmnt-theme-emphasis-on-surface-highlighted: #{$emphasis-on-surface-highlighted};\n    --lmnt-theme-emphasis-on-surface-hover-alt: #{$emphasis-on-surface-hover-alt};\n    --lmnt-theme-emphasis-on-surface-hover: #{$emphasis-on-surface-hover};\n    --lmnt-theme-emphasis-on-surface-inactive: #{$emphasis-on-surface-inactive};\n    --lmnt-theme-emphasis-on-surface-low: #{$emphasis-on-surface-low};\n    --lmnt-theme-emphasis-on-surface-med: #{$emphasis-on-surface-med};\n    --lmnt-theme-emphasis-on-surface-pressed-alt: #{$emphasis-on-surface-pressed--alt};\n    --lmnt-theme-emphasis-on-surface-resting: #{$emphasis-on-surface-resting};\n    --lmnt-theme-emphasis-on-surface-selected: #{$emphasis-on-surface-selected};\n    --lmnt-theme-emphasis-on-surface-stroke: #{$emphasis-on-surface-stroke};\n    --lmnt-theme-emphasis-on-surface-stroke-dark: #{$emphasis-on-surface-stroke-dark};\n\n    ///////////////////////////\n    //////  Material   ////////\n    ///////////////////////////\n\n    // MIGRATION: these CSS variables will be included in all component stylesheets\n    // QUESTION: are MDC side-effects acceptable in all contexts?\n    // POTENTIAL: move this stuff to theme.scss ?\n    // POTENTIAL: add top level class wrapper for Element and avoid .lmnt\n\n    // MDC Theme CSS Variables\n    --mdc-typography-font-family: var(--lmnt-theme-primary-font);\n    --mdc-theme-primary: var(--lmnt-theme-primary);\n    --mdc-theme-on-primary: var(--lmnt-theme-on-primary);\n    --mdc-theme-secondary: var(--lmnt-theme-secondary);\n    --mdc-theme-on-secondary: var(--lmnt-theme-on-secondary);\n    --mdc-theme-background: var(--lmnt-theme-background);\n    --mdc-theme-surface: var(--lmnt-theme-surface);\n    --mdc-theme-on-surface: var(--lmnt-theme-on-surface);\n    --mdc-theme-error: var(--lmnt-theme-danger);\n    --mdc-theme-on-error: var(--lmnt-theme-on-danger);\n\n    // Default Button Elevation\n    --lmnt-button-box-shadow: #{elevation.elevation-box-shadow(2)};\n\n    // Default Card Elevation & Shape Radius\n    --lmnt-theme--shape-radius: 4px;\n    --lmnt-card-box-shadow: #{elevation.elevation-box-shadow(1)};\n\n    --mdc-theme-text-primary-on-background: var(--lmnt-theme-on-surface);\n    --mdc-theme-text-primary-on-dark: var(--lmnt-theme-on-unknown-white);\n    --mdc-theme-text-primary-on-light: var(--lmnt-theme-on-unknown-black);\n    --mdc-theme-text-secondary-on-background: rgba(var(--lmnt-black-rgb), 0.54);\n    --mdc-theme-text-disabled-on-background: var(--lmnt-theme-on-unknown-black-disabled);\n    --mdc-theme-text-disabled-on-dark: var(--lmnt-theme-on-unknown-white-disabled);\n    --mdc-theme-text-disabled-on-light: var(--lmnt-theme-on-unknown-black-disabled);\n    --mdc-theme-text-icon-on-background: var(--lmnt-theme-on-surface);\n    --mdc-theme-text-icon-on-dark: var(--lmnt-theme-on-unknown-white);\n    --mdc-theme-text-icon-on-light: var(--lmnt-theme-on-unknown-black);\n\n    // NOTE: These Material CSS variables exist and have no direct Element counterparts yet\n    // --mdc-theme-text-secondary-on-dark: ;\n    // --mdc-theme-text-secondary-on-light: ;\n    // --mdc-theme-text-hint-on-background: ;\n    // --mdc-theme-text-hint-on-dark: ;\n    // --mdc-theme-text-hint-on-light: ;\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as animation-variables;\n@use '@material/rtl/mixins' as rtl-mixins;\n@use '@material/typography/typography';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/list/mixins' as list-mixins;\n@use '@material/ripple/ripple-theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/elevation/mixins' as elevation-mixins;\n@use './variables';\n\n//\n// Public\n//\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define drawer\n  .mdc-drawer {\n    @include title-ink-color(variables.$title-ink-color, $query: $query);\n    @include subtitle-ink-color(variables.$subtitle-ink-color, $query: $query);\n    @include border-color(variables.$divider-color, $query: $query);\n    @include surface-fill-color(variables.$surface-fill-color, $query: $query);\n    @include item-icon-ink-color(\n      variables.$item-inactive-ink-color,\n      $query: $query\n    );\n    @include item-text-ink-color(\n      variables.$item-inactive-ink-color,\n      $query: $query\n    );\n    @include item-activated-icon-ink-color(\n      variables.$item-activated-ink-color,\n      $query: $query\n    );\n    @include item-activated-text-ink-color(\n      variables.$item-activated-ink-color,\n      $query: $query\n    );\n    @include shape-radius(variables.$shape-radius, $query: $query);\n    @include item-shape-radius(variables.$item-shape-radius, $query: $query);\n    @include z-index(variables.$z-index, $query: $query);\n    @include width(variables.$width, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      flex-direction: column;\n      flex-shrink: 0;\n      box-sizing: border-box;\n      height: 100%;\n      /* @noflip */\n      border-right-width: 1px;\n      /* @noflip */\n      border-right-style: solid;\n      overflow: hidden;\n\n      @include rtl-mixins.rtl {\n        /* @noflip */\n        border-right-width: 0;\n        /* @noflip */\n        border-left-width: 1px;\n        /* @noflip */\n        border-right-style: none;\n        /* @noflip */\n        border-left-style: solid;\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition-property: transform;\n      transition-timing-function: animation-variables.$standard-curve-timing-function;\n    }\n\n    @include list-item_($query);\n  }\n\n  .mdc-drawer--animate {\n    @include feature-targeting.targets($feat-structure) {\n      transform: translateX(-100%);\n\n      @include rtl-mixins.rtl {\n        transform: translateX(100%);\n      }\n    }\n  }\n\n  .mdc-drawer--opening {\n    @include feature-targeting.targets($feat-structure) {\n      transform: translateX(0);\n\n      // Required to level the specificity with animate class.\n      @include rtl-mixins.rtl {\n        transform: translateX(0);\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: variables.$animation-enter;\n    }\n  }\n\n  .mdc-drawer--closing {\n    @include feature-targeting.targets($feat-structure) {\n      transform: translateX(-100%);\n\n      @include rtl-mixins.rtl {\n        transform: translateX(100%);\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: variables.$animation-exit;\n    }\n  }\n\n  .mdc-drawer__header {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      box-sizing: border-box;\n      min-height: 64px; // same as $mdc-top-app-bar-row-height\n      padding: 0 variables.$surface-padding 4px;\n    }\n  }\n\n  .mdc-drawer__title {\n    @include typography.typography(headline6, $query: $query);\n    @include typography.text-baseline(\n      $top: 36px,\n      $bottom: 20px,\n      $query: $query\n    );\n  }\n\n  .mdc-drawer__subtitle {\n    @include typography.typography(body2, $query: $query);\n    @include typography.text-baseline($top: 20px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin-bottom: 0;\n    }\n  }\n\n  .mdc-drawer__content {\n    @include feature-targeting.targets($feat-structure) {\n      height: 100%;\n      overflow-y: auto;\n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n@mixin dismissible-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-drawer--dismissible {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl-mixins.reflexive-position(left, 0);\n\n      display: none;\n      position: absolute;\n\n      &.mdc-drawer--open {\n        display: flex;\n      }\n    }\n  }\n\n  .mdc-drawer-app-content {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl-mixins.reflexive-box(margin, left, 0);\n\n      position: relative;\n    }\n  }\n}\n\n@mixin modal-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-drawer--modal {\n    @include scrim-fill-color(variables.$modal-scrim-color, $query: $query);\n    @include elevation-mixins.elevation(\n      variables.$modal-elevation,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl-mixins.reflexive-position(left, 0);\n\n      display: none;\n      position: fixed;\n    }\n\n    &.mdc-drawer--open {\n      @include feature-targeting.targets($feat-structure) {\n        display: flex;\n      }\n    }\n  }\n\n  .mdc-drawer-scrim {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      z-index: variables.$z-index - 1;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition-property: opacity;\n      transition-timing-function: animation-variables.$standard-curve-timing-function;\n    }\n\n    .mdc-drawer--open + & {\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n      }\n    }\n\n    .mdc-drawer--animate + & {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 0;\n      }\n    }\n\n    .mdc-drawer--opening + & {\n      @include feature-targeting.targets($feat-animation) {\n        transition-duration: variables.$animation-enter;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 1;\n      }\n    }\n\n    .mdc-drawer--closing + & {\n      @include feature-targeting.targets($feat-animation) {\n        transition-duration: variables.$animation-exit;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 0;\n      }\n    }\n  }\n}\n\n@mixin activated-overlay-color($color, $query: feature-targeting.all()) {\n  :not(.mdc-deprecated-list--non-interactive) > .mdc-deprecated-list-item {\n    @include ripple-theme.states-activated($color, $query: $query);\n  }\n}\n\n@mixin border-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $value: rgba(theme-color.prop-value($color), variables.$divider-opacity);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(border-color, $value);\n  }\n}\n\n@mixin item-shape-radius(\n  $radius,\n  $rtl-reflexive: true,\n  $query: feature-targeting.all()\n) {\n  @include list-mixins.deprecated-single-line-shape-radius(\n    $radius,\n    $rtl-reflexive,\n    $query: $query\n  );\n}\n\n@mixin shape-radius($radius, $query: feature-targeting.all()) {\n  // Check type since $radius may be a custom property Map\n  $is-list: meta.type-of($radius) == 'list';\n  @if $is-list and list.length($radius) > 2 {\n    @error \"Invalid radius: '#{$radius}' component doesn't allow customizing all corners\";\n  } @else if $is-list and list.length($radius) == 2 {\n    $radius: 0 list.nth($radius, 1) list.nth($radius, 2) 0;\n  } @else {\n    $radius: 0 $radius $radius 0;\n  }\n\n  @include shape-mixins.radius($radius, $rtl-reflexive: true, $query: $query);\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $value: rgba(theme-color.prop-value($color), variables.$divider-opacity);\n\n  @include list-mixins.deprecated-divider-color($value, $query: $query);\n}\n\n@mixin title-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $value: rgba(theme-color.prop-value($color), variables.$title-ink-opacity);\n\n  .mdc-drawer__title {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $value);\n    }\n  }\n}\n\n@mixin subtitle-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $value: rgba(theme-color.prop-value($color), variables.$subtitle-ink-opacity);\n\n  @include list-mixins.deprecated-group-subheader-ink-color(\n    $value,\n    $query: $query\n  );\n\n  .mdc-drawer__subtitle {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $value);\n    }\n  }\n}\n\n@mixin fill-color-accessible($color, $query: feature-targeting.all()) {\n  $accessibleColor: theme-color.accessible-ink-color($color);\n\n  @include title-ink-color($accessibleColor, $query: $query);\n  @include subtitle-ink-color($accessibleColor, $query: $query);\n  @include item-text-ink-color($accessibleColor, $query: $query);\n  @include item-icon-ink-color($accessibleColor, $query: $query);\n  @include surface-fill-color($color, $query: $query);\n}\n\n@mixin item-icon-ink-color($color, $query: feature-targeting.all()) {\n  $value: rgba(\n    theme-color.prop-value($color),\n    variables.$item-inactive-icon-ink-opacity\n  );\n\n  @include list-mixins.deprecated-item-graphic-ink-color(\n    $value,\n    $query: $query\n  );\n}\n\n@mixin item-activated-icon-ink-color($color, $query: feature-targeting.all()) {\n  $value: rgba(\n    theme-color.prop-value($color),\n    variables.$item-active-icon-ink-opacity\n  );\n\n  .mdc-deprecated-list-item--activated {\n    @include list-mixins.deprecated-item-graphic-ink-color(\n      $value,\n      $query: $query\n    );\n  }\n}\n\n@mixin item-activated-text-ink-color($color, $query: feature-targeting.all()) {\n  $value: rgba(\n    theme-color.prop-value($color),\n    variables.$item-active-text-ink-opacity\n  );\n\n  .mdc-deprecated-list-item--activated {\n    @include list-mixins.deprecated-item-primary-text-ink-color(\n      $value,\n      $query: $query\n    );\n  }\n}\n\n@mixin item-text-ink-color($color, $query: feature-targeting.all()) {\n  $value: rgba(\n    theme-color.prop-value($color),\n    variables.$item-inactive-text-ink-opacity\n  );\n\n  .mdc-deprecated-list-item {\n    @include list-mixins.deprecated-item-primary-text-ink-color(\n      $value,\n      $query: $query\n    );\n  }\n}\n\n@mixin surface-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin scrim-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $value: rgba(theme-color.prop-value($color), variables.$modal-scrim-opacity);\n\n  + .mdc-drawer-scrim {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $value);\n    }\n  }\n}\n\n@mixin z-index($value, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    z-index: $value;\n  }\n}\n\n@mixin width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(width, $width);\n  }\n\n  &.mdc-drawer--open:not(.mdc-drawer--closing) + .mdc-drawer-app-content {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl-mixins.reflexive-box(margin, left, $width);\n    }\n  }\n}\n\n//\n// Private\n//\n@mixin list-item_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // postcss-bem-linter: ignore\n  .mdc-deprecated-list-item {\n    @include typography.typography(subtitle2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      height: calc(48px - 2 * #{variables.$list-item-spacing});\n      // To accomodate margin conflict.\n      margin: (variables.$list-item-spacing * 2) 8px;\n      padding: 0 variables.$surface-padding / 2;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  .mdc-deprecated-list-item:nth-child(1) {\n    @include feature-targeting.targets($feat-structure) {\n      margin-top: 2px;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  .mdc-deprecated-list-item:nth-last-child(1) {\n    @include feature-targeting.targets($feat-structure) {\n      margin-bottom: 0;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  .mdc-deprecated-list-group__subheader {\n    @include typography.typography(body2, $query: $query);\n    @include typography.text-baseline($top: 24px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: 0;\n      padding: 0 variables.$surface-padding;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  .mdc-deprecated-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      margin: 3px 0 4px;\n    }\n  }\n\n  // Prevents list item children from being included in the click target.\n  // postcss-bem-linter: ignore\n  .mdc-deprecated-list-item__text,\n  .mdc-deprecated-list-item__graphic {\n    @include feature-targeting.targets($feat-structure) {\n      pointer-events: none;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/theme/theme-color';\n\n// Colors\n$title-ink-color: theme-color.prop-value(on-surface) !default;\n$subtitle-ink-color: theme-color.prop-value(on-surface) !default;\n$item-inactive-ink-color: theme-color.prop-value(on-surface) !default;\n$item-activated-ink-color: theme-color.prop-value(primary) !default;\n$divider-color: theme-color.prop-value(on-surface) !default;\n$surface-fill-color: surface !default;\n\n// Opacity\n$title-ink-opacity: theme-color.text-emphasis(high) !default;\n$subtitle-ink-opacity: theme-color.text-emphasis(medium) !default;\n$item-inactive-icon-ink-opacity: theme-color.text-emphasis(medium) !default;\n$item-inactive-text-ink-opacity: theme-color.text-emphasis(high) !default;\n$item-active-icon-ink-opacity: 1 !default;\n$item-active-text-ink-opacity: theme-color.text-emphasis(high) !default;\n$divider-opacity: 0.12 !default;\n\n// Widths\n$width: 256px !default;\n$list-item-spacing: 4px !default;\n$surface-padding: 16px !default;\n$shape-radius: large !default;\n$item-shape-radius: small !default;\n\n// Animations\n$animation-enter: 250ms !default;\n$animation-exit: 200ms !default;\n\n// Scrim\n$modal-scrim-color: theme-color.prop-value(on-surface) !default;\n$modal-scrim-opacity: 0.32 !default;\n\n$z-index: 6 !default;\n$modal-elevation: 16 !default;\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n$deceleration-curve-timing-function: cubic-bezier(0, 0, 0.2, 1) !default;\n$standard-curve-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$acceleration-curve-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n$sharp-curve-timing-function: cubic-bezier(0.4, 0, 0.6, 1) !default;\n\n@function enter($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $deceleration-curve-timing-function;\n}\n\n@function exit-permanent($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $acceleration-curve-timing-function;\n}\n\n@function exit-temporary($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $sharp-curve-timing-function;\n}\n\n@function standard($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $standard-curve-timing-function;\n}\n\n@function linear($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay linear;\n}\n","// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use 'sass:list';\n@use 'sass:map';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/rtl/mixins' as rtl-mixins;\n@use '@material/theme/theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/typography/typography';\n@use '@material/feature-targeting/feature-targeting';\n@use './variables';\n@use '@material/theme/theme-color';\n@use './evolution-mixins';\n\n@mixin deprecated-core-styles($query: feature-targeting.all()) {\n  @include deprecated-without-ripple($query);\n  @include deprecated-ripple($query);\n}\n\n// This API is intended for use by frameworks that may want to separate the\n// ripple-related styles from the other list styles. It is recommended that most\n// users use `mdc-deprecated-list-core-styles` instead.\n@mixin deprecated-without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$deprecated-divider-color-on-dark-bg,\n    variables.$deprecated-divider-color-on-light-bg\n  );\n\n  .mdc-deprecated-list {\n    @include deprecated-base_($query);\n  }\n\n  @include deprecated-single-line-density(\n    variables.$deprecated-single-line-density-scale,\n    $query: $query\n  );\n  @include deprecated-item-secondary-text-ink-color(\n    text-secondary-on-background,\n    $query\n  );\n  @include deprecated-item-graphic-fill-color(transparent, $query);\n  @include deprecated-item-graphic-ink-color(text-icon-on-background, $query);\n  @include deprecated-item-meta-ink-color(text-hint-on-background, $query);\n  @include deprecated-group-subheader-ink-color(\n    text-primary-on-background,\n    $query\n  );\n  @include deprecated-item-disabled-text-opacity(\n    variables.$deprecated-text-disabled-opacity,\n    $query\n  );\n  @include deprecated-item-disabled-text-color(\n    variables.$deprecated-text-disabled-color,\n    $query\n  );\n  @include deprecated-item-selected-text-color(\n    variables.$deprecated-text-selected-color,\n    $query\n  );\n\n  .mdc-deprecated-list--dense {\n    @include feature-targeting.targets($feat-structure) {\n      padding-top: 4px;\n      padding-bottom: 4px;\n      font-size: 0.812rem;\n    }\n  }\n\n  .mdc-deprecated-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      @include deprecated-item-base_;\n    }\n\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-deprecated-list-item--selected):focus::before,\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-deprecated-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    @include deprecated-list-item-padding-variant(\n      variables.$deprecated-textual-variant-config,\n      $query\n    );\n    @include deprecated-list-item-height-variant(\n      variables.$deprecated-textual-variant-config,\n      $query\n    );\n\n    .mdc-deprecated-list--icon-list & {\n      @include deprecated-list-item-padding-variant(\n        variables.$deprecated-icon-variant-config,\n        $query\n      );\n      @include deprecated-list-item-height-variant(\n        variables.$deprecated-icon-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--avatar-list & {\n      @include deprecated-list-item-padding-variant(\n        variables.$deprecated-avatar-variant-config,\n        $query\n      );\n      @include deprecated-list-item-height-variant(\n        variables.$deprecated-avatar-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--thumbnail-list & {\n      @include deprecated-list-item-padding-variant(\n        variables.$deprecated-thumbnail-variant-config,\n        $query\n      );\n      @include deprecated-list-item-height-variant(\n        variables.$deprecated-thumbnail-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--image-list & {\n      @include deprecated-list-item-padding-variant(\n        variables.$deprecated-image-variant-config,\n        $query\n      );\n      @include deprecated-list-item-height-variant(\n        variables.$deprecated-image-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--video-list & {\n      @include deprecated-list-item-padding-variant(\n        variables.$deprecated-video-variant-config,\n        $query\n      );\n      @include deprecated-list-item-height-variant(\n        variables.$deprecated-video-variant-config,\n        $query\n      );\n    }\n  }\n\n  // This is included here to preserve expected specificity behavior (avatar\n  // graphic styles must take priority).\n  // TODO(b/157038316): regroup this with density styles when nesting is fixed.\n  .mdc-deprecated-list--dense .mdc-deprecated-list-item__graphic {\n    @include deprecated-graphic-size-dense_(20px, $query);\n  }\n\n  .mdc-deprecated-list-item__graphic {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      align-items: center;\n      justify-content: center;\n      fill: currentColor;\n      object-fit: cover;\n    }\n\n    // TODO(b/156624966): this retains legacy spacing but should be updated.\n    @include deprecated-graphic-size-variant(\n      variables.$deprecated-deprecated-graphic-config,\n      $query\n    );\n\n    .mdc-deprecated-list--icon-list & {\n      @include deprecated-graphic-size-variant(\n        variables.$deprecated-icon-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--avatar-list & {\n      @include deprecated-graphic-size-variant(\n        variables.$deprecated-avatar-variant-config,\n        $query\n      );\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n\n    .mdc-deprecated-list--thumbnail-list & {\n      @include deprecated-graphic-size-variant(\n        variables.$deprecated-thumbnail-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--image-list & {\n      @include deprecated-graphic-size-variant(\n        variables.$deprecated-image-variant-config,\n        $query\n      );\n    }\n\n    .mdc-deprecated-list--video-list & {\n      @include deprecated-graphic-size-variant(\n        variables.$deprecated-video-variant-config,\n        $query\n      );\n    }\n  }\n\n  // Extra specificity is to override .material-icons display style if used in\n  // conjunction with mdc-deprecated-list-item__graphic\n  // stylelint-disable plugin/selector-bem-pattern\n  .mdc-deprecated-list .mdc-deprecated-list-item__graphic {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n    }\n  }\n  // stylelint-enable plugin/selector-bem-pattern\n\n  .mdc-deprecated-list-item__meta {\n    &:not(.material-icons) {\n      @include typography.typography(caption, $query);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      /* @noflip */\n      margin-left: auto;\n      /* @noflip */\n      margin-right: 0;\n\n      @at-root {\n        .mdc-deprecated-list-item[dir='rtl'] &,\n        [dir='rtl'] .mdc-deprecated-list-item & {\n          /* @noflip */\n          margin-left: 0;\n          /* @noflip */\n          margin-right: auto;\n        }\n      }\n    }\n  }\n\n  .mdc-deprecated-list-item__text {\n    @include typography.overflow-ellipsis($query);\n  }\n\n  // Disable interaction on label elements that may automatically\n  // toggle corresponding checkbox / radio input.\n  .mdc-deprecated-list-item__text[for] {\n    @include feature-targeting.targets($feat-structure) {\n      pointer-events: none;\n    }\n  }\n\n  .mdc-deprecated-list-item__primary-text {\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: variables.$deprecated-item-primary-text-baseline-height,\n      $bottom: variables.$deprecated-item-secondary-text-baseline-height,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-deprecated-list--video-list &,\n    .mdc-deprecated-list--image-list &,\n    .mdc-deprecated-list--thumbnail-list &,\n    .mdc-deprecated-list--avatar-list &,\n    .mdc-deprecated-list--icon-list & {\n      @include typography.text-baseline(\n        $top:\n          variables.$deprecated-item-primary-text-baseline-height-with-graphic,\n        $bottom: variables.$deprecated-item-secondary-text-baseline-height,\n        $query: $query\n      );\n    }\n\n    // stylelint-disable plugin/selector-bem-pattern\n    .mdc-deprecated-list--dense & {\n      @include typography.text-baseline(\n        $top: variables.$deprecated-dense-item-primary-text-baseline-height,\n        $bottom: variables.$deprecated-item-secondary-text-baseline-height,\n        $query: $query\n      );\n    }\n    // stylelint-enable plugin/selector-bem-pattern\n  }\n\n  .mdc-deprecated-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: variables.$deprecated-item-secondary-text-baseline-height,\n      $display: block,\n      $query: $query\n    );\n\n    // stylelint-disable plugin/selector-bem-pattern\n    .mdc-deprecated-list--dense & {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: inherit;\n      }\n    }\n    // stylelint-enable plugin/selector-bem-pattern\n  }\n\n  // stylelint-disable plugin/selector-bem-pattern\n  .mdc-deprecated-list--dense .mdc-deprecated-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      height: 40px;\n    }\n  }\n\n  .mdc-deprecated-list--two-line .mdc-deprecated-list-item__text {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: flex-start;\n    }\n  }\n\n  .mdc-deprecated-list--two-line {\n    .mdc-deprecated-list-item {\n      @include feature-targeting.targets($feat-structure) {\n        height: variables.$deprecated-two-line-height;\n      }\n    }\n\n    &.mdc-deprecated-list--video-list .mdc-deprecated-list-item,\n    &.mdc-deprecated-list--image-list .mdc-deprecated-list-item,\n    &.mdc-deprecated-list--thumbnail-list .mdc-deprecated-list-item,\n    &.mdc-deprecated-list--avatar-list .mdc-deprecated-list-item,\n    &.mdc-deprecated-list--icon-list .mdc-deprecated-list-item {\n      @include feature-targeting.targets($feat-structure) {\n        height: variables.$deprecated-two-line-graphic-height;\n      }\n    }\n\n    // Icons in multiline lists are the only graphic that isn't centered.\n    &.mdc-deprecated-list--icon-list .mdc-deprecated-list-item__graphic {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: flex-start;\n        margin-top: variables.$deprecated-two-line-icon-top-margin;\n      }\n    }\n  }\n\n  .mdc-deprecated-list--two-line.mdc-deprecated-list--dense\n    .mdc-deprecated-list-item,\n  .mdc-deprecated-list--avatar-list.mdc-deprecated-list--dense\n    .mdc-deprecated-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      height: 60px;\n    }\n  }\n\n  .mdc-deprecated-list--avatar-list.mdc-deprecated-list--dense\n    .mdc-deprecated-list-item__graphic {\n    @include deprecated-graphic-size-dense_(36px, $query);\n  }\n\n  // Only change mouse cursor for list items which are not disabled.\n  :not(.mdc-deprecated-list-item--disabled).mdc-deprecated-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  // stylelint-disable selector-max-type,selector-no-qualifying-type\n  a.mdc-deprecated-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type,selector-no-qualifying-type\n\n  .mdc-deprecated-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      height: 0;\n      margin: 0;\n      border: none;\n      border-bottom-width: 1px;\n      border-bottom-style: solid;\n    }\n  }\n\n  // Note: ideally we'd be able to hoist this to the top-level `$feat-color`,\n  // but doing so will cause the `border` declaration on\n  // `.mdc-deprecated-list-divider` above to override it.\n  @include deprecated-divider-color($divider-color, $query);\n\n  // Deprecated. Use the specialized inset classes instead.\n  // Items are fully inset using padding.\n  .mdc-deprecated-list-divider--padded {\n    @include deprecated-divider-inset-variant(\n      variables.$deprecated-textual-variant-config,\n      $use-padding: true,\n      $query: $query\n    );\n  }\n\n  // Deprecated. Use the specialized inset classes instead.\n  // Items's leading, but not trailing, edge is inset to account for *avatar*\n  // width.\n  .mdc-deprecated-list-divider--inset {\n    @include deprecated-divider-inset-variant(\n      variables.$deprecated-avatar-variant-config,\n      $trailing: false,\n      $query: $query\n    );\n  }\n\n  // Deprecated. Use the specialized inset classes instead.\n  // Item's leading and trailing edges are inset to account for *avatar* width.\n  .mdc-deprecated-list-divider--inset.mdc-deprecated-list-divider--padded {\n    @include deprecated-divider-inset-variant(\n      variables.$deprecated-avatar-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list {\n    @include deprecated-divider-insets-variant(\n      variables.$deprecated-textual-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list--icon-list {\n    @include deprecated-divider-insets-variant(\n      variables.$deprecated-icon-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list--avatar-list {\n    @include deprecated-divider-insets-variant(\n      variables.$deprecated-avatar-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list--thumbnail-list {\n    @include deprecated-divider-insets-variant(\n      variables.$deprecated-thumbnail-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list--image-list {\n    @include deprecated-divider-insets-variant(\n      variables.$deprecated-image-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list--video-list {\n    @include deprecated-divider-insets-variant(\n      variables.$deprecated-video-variant-config,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n\n  .mdc-deprecated-list-group__subheader {\n    $list-subheader-virtual-height: 3rem;\n    $list-subheader-leading: map.get(\n      map.get(typography.$styles, body1),\n      line-height\n    );\n    $list-subheader-margin: calc(\n      (#{$list-subheader-virtual-height} - #{$list-subheader-leading}) / 2\n    );\n\n    @include typography.typography(subtitle1, $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: $list-subheader-margin variables.$deprecated-side-padding;\n    }\n  }\n\n  @include evolution-mixins.without-ripple($query: $query);\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n// list styles. It is recommended that most users use `mdc-deprecated-list-core-styles` instead.\n@mixin deprecated-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  // List items should support states by default, but it should be possible to opt out.\n  :not(.mdc-deprecated-list-item--disabled).mdc-deprecated-list-item {\n    @include deprecated-item-interactive-ripple_($query);\n  }\n\n  // Set styles only for focus state on disabled list item.\n  .mdc-deprecated-list-item--disabled {\n    @include ripple.surface(\n      $ripple-target: variables.$deprecated-ripple-target,\n      $query: $query\n    );\n    @include ripple.surface(\n      $ripple-target: variables.$deprecated-temporary-ripple-target,\n      $query: $query\n    );\n    @include ripple.radius-bounded(\n      $ripple-target: variables.$deprecated-ripple-target,\n      $query: $query\n    );\n    @include ripple.radius-bounded(\n      $ripple-target: variables.$deprecated-temporary-ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-base-color(\n      theme-color.prop-value(on-surface),\n      $ripple-target: variables.$deprecated-ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-base-color(\n      theme-color.prop-value(on-surface),\n      $ripple-target: variables.$deprecated-temporary-ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-focus-opacity(\n      ripple-theme.states-opacity(primary, focus),\n      $ripple-target: variables.$deprecated-ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-focus-opacity(\n      ripple-theme.states-opacity(primary, focus),\n      $ripple-target: variables.$deprecated-temporary-ripple-target,\n      $query: $query\n    );\n\n    #{variables.$deprecated-ripple-target},\n    #{variables.$deprecated-temporary-ripple-target} {\n      @include ripple.target-common($query: $query);\n    }\n  }\n\n  @include evolution-mixins.with-ripple($query: $query);\n}\n\n///\n/// Sets ripple color for a list item.\n///\n@mixin deprecated-ripple-states($color, $query: feature-targeting.all()) {\n  @include ripple-theme.states(\n    $color: $color,\n    $query: $query,\n    $ripple-target: variables.$deprecated-ripple-target\n  );\n  @include ripple-theme.states(\n    $color: $color,\n    $query: $query,\n    $ripple-target: variables.$deprecated-temporary-ripple-target\n  );\n}\n\n/// Sets the text color of the list item in selected or activated state.\n/// @param {color} $color - The desired text color.\n@mixin deprecated-item-selected-text-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  // \"Selected\" is ephemeral and likely to change soon. E.g., selecting one or more photos to share in Google Photos.\n  // \"Activated\" is more permanent. E.g., the currently highlighted navigation destination in a drawer.\n  .mdc-deprecated-list-item--selected,\n  .mdc-deprecated-list-item--activated {\n    @include deprecated-item-primary-text-ink-color($color, $query: $query);\n    @include deprecated-item-graphic-ink-color($color, $query: $query);\n  }\n}\n\n@mixin deprecated-item-primary-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.prop(color, $color);\n  }\n}\n\n@mixin deprecated-item-secondary-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin deprecated-item-graphic-fill-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-item__graphic {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(background-color, $color);\n    }\n  }\n}\n\n@mixin deprecated-item-graphic-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-item__graphic {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin deprecated-item-meta-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-item__meta {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin deprecated-single-line-shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$deprecated-single-line-density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$deprecated-single-line-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-deprecated-list-item {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n@mixin deprecated-divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(border-bottom-color, $color);\n    }\n  }\n}\n\n@mixin deprecated-group-subheader-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin deprecated-item-disabled-text-opacity(\n  $opacity,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-item--disabled .mdc-deprecated-list-item__text {\n    @include feature-targeting.targets($feat-color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin deprecated-item-disabled-text-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-item--disabled {\n    .mdc-deprecated-list-item__text,\n    .mdc-deprecated-list-item__primary-text,\n    .mdc-deprecated-list-item__secondary-text {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.prop(color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Establishes each list item's padding using a variant config.\n///\n/// @param {Map} $variant-config The list variant's configuration.\n///\n/// @access public\n///\n@mixin deprecated-list-item-padding-variant(\n  $variant-config,\n  $query: feature-targeting.all()\n) {\n  $leading-padding: map.get($variant-config, leading-padding);\n  @include deprecated-list-item-padding($leading-padding, $query);\n}\n\n///\n/// Establishes each list item's padding.\n///\n/// @param {Number} $leading-padding The item's leading padding.\n///\n/// @access public\n///\n@mixin deprecated-list-item-padding(\n  $leading-padding,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl-mixins.reflexive-property(\n      padding,\n      $leading-padding,\n      variables.$deprecated-trailing-padding\n    );\n  }\n}\n\n///\n/// Establishes each list item's single line height using a variant config.\n///\n/// @param {Map} $variant-config The list variant's configuration.\n///\n/// @access public\n///\n@mixin deprecated-list-item-height-variant(\n  $variant-config,\n  $query: feature-targeting.all()\n) {\n  $single-line-height: map.get($variant-config, single-line-height);\n  @include deprecated-list-item-height($single-line-height, $query);\n}\n\n///\n/// Establishes each list item's height.\n///\n/// @param {Number} $height The item's height.\n///\n/// @access public\n///\n@mixin deprecated-list-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n///\n/// Sets the trailing margin used by icons.\n///\n/// @param {Number} $margin The trailing margin applied to icons.\n///\n/// @access public\n///\n@mixin deprecated-icon-margin($margin, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-deprecated-list-item__graphic {\n      @include rtl-mixins.reflexive-box(margin, right, $margin);\n    }\n  }\n}\n\n///\n/// Sets divider inset sizes for each list variant.\n///\n/// @param {Map} $variant-config The list variant's configuration.\n///\n/// @access public\n///\n@mixin deprecated-divider-insets-variant(\n  $variant-config,\n  $query: feature-targeting.all()\n) {\n  $leading-padding: map.get($variant-config, leading-padding);\n  $text-offset: map.get($variant-config, text-offset);\n  @include deprecated-divider-insets($leading-padding, $text-offset, $query);\n}\n\n///\n/// Sets divider inset sizes for each list variant.\n///\n/// @param {Number} $leading-padding The item's leading padding.\n/// @param {Number} $text-offset The item's text offset.\n///\n/// @access public\n///\n@mixin deprecated-divider-insets(\n  $leading-padding,\n  $text-offset,\n  $query: feature-targeting.all()\n) {\n  .mdc-deprecated-list-divider--inset-leading {\n    @include deprecated-divider-inset(\n      $leading-padding,\n      $text-offset,\n      $trailing: false,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list-divider--inset-trailing {\n    @include deprecated-divider-inset(\n      $leading-padding,\n      $text-offset,\n      $leading: false,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list-divider--inset-leading.mdc-deprecated-list-divider--inset-trailing {\n    @include deprecated-divider-inset(\n      $leading-padding,\n      $text-offset,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list-divider--inset-leading.mdc-deprecated-list-divider--padding {\n    @include deprecated-divider-inset(\n      $leading-padding,\n      $text-offset,\n      $trailing: false,\n      $use-padding: true,\n      $query: $query\n    );\n  }\n\n  .mdc-deprecated-list-divider--inset-leading.mdc-deprecated-list-divider--inset-trailing.mdc-deprecated-list-divider--inset-padding {\n    @include deprecated-divider-inset(\n      $leading-padding,\n      $text-offset,\n      $use-padding: true,\n      $query: $query\n    );\n  }\n}\n\n// Sets the width and height of the graphic element using a variant config.\n@mixin deprecated-graphic-size-variant(\n  $variant-config,\n  $query: feature-targeting.all()\n) {\n  $leading-padding: map.get($variant-config, leading-padding);\n  $text-offset: map.get($variant-config, text-offset);\n  $width: map.get(map.get($variant-config, graphic-size), width);\n  $height: map.get(map.get($variant-config, graphic-size), height);\n\n  @include deprecated-graphic-size(\n    $leading-padding,\n    $text-offset,\n    $width,\n    $height,\n    $query\n  );\n}\n\n// Sets the width and height of the graphic element, as well as calculates the\n// trailing margin for the graphic element such that the text is always offset\n// from the item's leading edge by 72px, which is defined within the spec. If\n// height isn't specified, the graphic is assumed to be square.\n// TODO(b/155397992): restructure to use symmetric margins.\n@mixin deprecated-graphic-size(\n  $leading-padding,\n  $text-offset,\n  $width,\n  $height,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $margin-value: max(\n    $text-offset - $leading-padding - $width,\n    $leading-padding\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl-mixins.reflexive-box(margin, right, $margin-value);\n    width: $width;\n    height: $height;\n  }\n}\n\n// Deprecated. Supports legacy density styles.\n@mixin deprecated-graphic-size-dense_($size, $query: feature-targeting.all()) {\n  @include deprecated-graphic-size(\n    $leading-padding: 16px,\n    $text-offset: 16px,\n    $width: $size,\n    $height: $size,\n    $query: $query\n  );\n}\n\n///\n/// Computes the appropriate leading inset for a divider based on list type.\n///\n/// @param {String}  $variant-config The list variant configuration.\n/// @param {Boolean} $leading Whether to apply the leading inset.\n/// @param {Boolean} $trailing Whether to apply the trailing inset.\n/// @param {Boolean} $use-padding Whether to align with padding vs. text offset.\n///\n/// @access private\n///\n@mixin deprecated-divider-inset-variant(\n  $variant-config,\n  $leading: true,\n  $trailing: true,\n  $use-padding: false,\n  $query: feature-targeting.all()\n) {\n  $leading-padding: map.get($variant-config, leading-padding);\n  $text-offset: map.get($variant-config, text-offset);\n\n  @include deprecated-divider-inset(\n    $leading-padding,\n    $text-offset,\n    $leading,\n    $trailing,\n    $use-padding,\n    $query\n  );\n}\n\n@mixin deprecated-divider-inset(\n  $leading-padding,\n  $text-offset,\n  $leading: true,\n  $trailing: true,\n  $use-padding: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $trailing-inset: if($trailing, variables.$deprecated-trailing-padding, 0);\n  $leading-inset: if(\n    $leading,\n    if($use-padding, $leading-padding, $text-offset),\n    0\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    @if $leading {\n      @include rtl-mixins.reflexive-box(margin, left, $leading-inset);\n    }\n    width: calc(100% - #{$leading-inset + $trailing-inset});\n  }\n}\n\n///\n/// Sets density scale to single line list variant.\n///\n/// @param {Number} $density-scale Density scale for list. Supported density scales are `-4`, `-3`, `-2`, `-1` and  `0`.\n///\n/// @access public\n///\n@mixin deprecated-single-line-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$deprecated-single-line-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-deprecated-list-item {\n    @include deprecated-single-line-height($height, $query: $query);\n  }\n}\n\n///\n/// Sets height to single line list variant.\n///\n/// @param {Number} $height Height value in `px`.\n///\n/// @access public\n///\n@mixin deprecated-single-line-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n//\n// Private\n//\n\n@mixin deprecated-base_($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include typography.typography(subtitle1, $query);\n\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  @include deprecated-item-primary-text-ink-color(\n    text-primary-on-background,\n    $query\n  );\n}\n\n@mixin deprecated-item-base_ {\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: flex-start;\n  overflow: hidden;\n  padding: 0;\n\n  &:focus {\n    outline: none;\n  }\n}\n\n// Ripple styles for an interactive list item (one that is enabled and inside an interactive list).\n@mixin deprecated-item-interactive-ripple_($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$deprecated-ripple-target,\n    $query: $query\n  );\n  @include ripple.surface(\n    $ripple-target: variables.$deprecated-temporary-ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$deprecated-ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$deprecated-temporary-ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$deprecated-ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$deprecated-temporary-ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$deprecated-ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$deprecated-temporary-ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$deprecated-ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$deprecated-temporary-ripple-target,\n    $query: $query\n  );\n\n  #{variables.$deprecated-ripple-target},\n  #{variables.$deprecated-temporary-ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/theme/theme';\n\n$include: true !default;\n\n/// Creates a rule that will be applied when a component is within the context\n/// of an RTL layout.\n///\n/// @example - scss\n/// .mdc-foo {\n///   padding-left: 4px;\n///\n///   @include rtl {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n/// }\n///\n/// @example - css\n///   .mdc-foo {\n///     padding-left: 4px;\n///   }\n///\n///   [dir=\"rtl\"] .mdc-foo,\n///   .mdc-foo[dir=\"rtl\"] {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n///\n/// Note that this mixin works by checking for an ancestor element with\n/// `[dir=\"rtl\"]`. As a result, nested `dir` values are not supported:\n///\n/// @example - html\n/// <html dir=\"rtl\">\n///   <!-- ... -->\n///   <div dir=\"ltr\">\n///     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n///   </div>\n/// </html>\n///\n/// In the future, selectors such as the `:dir` pseudo-class\n/// (http://mdn.io/css/:dir) will help us mitigate this.\n///\n/// @content Content to be styled in an RTL context.\n@mixin rtl() {\n  @if ($include) {\n    [dir='rtl'] &,\n    &[dir='rtl'] {\n      @content;\n    }\n  }\n}\n\n// Takes a base box-model property name (`margin`, `border`, `padding`, etc.) along with a\n// default direction (`left` or `right`) and value, and emits rules which apply the given value to the\n// specified direction by default and the opposite direction in RTL.\n//\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, left, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 8px;\n//   margin-right: 0;\n//\n//   @include rtl {\n//     margin-left: 0;\n//     margin-right: 8px;\n//   }\n// }\n// ```\n//\n// whereas:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, right, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 0;\n//   margin-right: 8px;\n//\n//   @include rtl {\n//     margin-left: 8px;\n//     margin-right: 0;\n//   }\n// }\n// ```\n//\n// You can also pass an optional 4th `$root-selector` argument which will be forwarded to `mdc-rtl`,\n// e.g. `@include rtl-reflexive-box(margin, left, 8px, '.mdc-component')`.\n//\n// Note that this function will always zero out the original value in an RTL context.\n// If you're trying to flip the values, use `mdc-rtl-reflexive-property()` instead.\n@mixin reflexive-box(\n  $base-property,\n  $default-direction,\n  $value,\n  $replace: null\n) {\n  @if (list.index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction: '#{$default-direction}'. Please specifiy either 'right' or 'left'.\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include reflexive-property(\n    $base-property,\n    $left-value,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n// <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-property(margin, auto, 12px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: auto;\n//   margin-right: 12px;\n//\n//   @include rtl {\n//     margin-left: 12px;\n//     margin-right: auto;\n//   }\n// }\n// ```\n//\n// An optional 4th `$root-selector` argument can be given, which will be passed to `mdc-rtl`.\n@mixin reflexive-property(\n  $base-property,\n  $left-value,\n  $right-value,\n  $replace: null\n) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include reflexive(\n    $prop-left,\n    $left-value,\n    $prop-right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes an argument specifying a horizontal position property (either 'left' or 'right') as well\n// as a value, and applies that value to the specified position in a LTR context, and flips it in a\n// RTL context. For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-position(left, 0);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 0;\n//   right: initial;\n//\n//   @include rtl {\n//     left: initial;\n//     right: 0;\n//   }\n// }\n// ```\n//\n// An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive-position($position-property, $value, $replace: null) {\n  @if (list.index((right, left), $position-property) == null) {\n    @error \"Invalid position #{position-property}. Please specifiy either right or left\";\n  }\n\n  // TODO: 'initial' is not supported in IE 11. https://caniuse.com/#feat=css-initial-value\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($position-property == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include reflexive(\n    left,\n    $left-value,\n    right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes pair of properties with values as arguments and flips it in RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive(left, 2px, right, 5px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 2px;\n//   right: 5px;\n//\n//   @include rtl {\n//     right: 2px;\n//     left: 5px;\n//   }\n// }\n// ```\n//\n// An optional fifth `$root-selector` argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $replace: null\n) {\n  $left-replace: null;\n  $right-replace: null;\n  @if $replace {\n    @if meta.type-of($left-value) == 'string' {\n      $left-replace: $replace;\n    }\n\n    @if meta.type-of($right-value) == 'string' {\n      $right-replace: $replace;\n    }\n\n    @if $left-replace == null and $right-replace == null {\n      @error 'mdc-rtl: $replace may only be used with strings but neither left nor right values are strings.';\n    }\n  }\n\n  @include _property($left-property, $left-value, $replace: $left-replace);\n  @include _property($right-property, $right-value, $replace: $right-replace);\n\n  @include rtl {\n    @include _property($left-property, $right-value, $replace: $right-replace);\n    @include _property($right-property, $left-value, $replace: $left-replace);\n  }\n}\n\n///\n/// Adds `@noflip` annotation when `$mdc-rtl-include` is true.\n///\n/// @param {String} $property\n/// @param {String} $value\n/// @param {Map} $replace\n///\n@mixin _property($property, $value, $replace: null) {\n  @include theme.property(\n    $property,\n    $value,\n    $replace: $replace,\n    $gss: (noflip: $include)\n  );\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return $tracking / ($font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @return $px / 16px * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/theme/custom-properties';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n\n$baseline-color: black !default;\n$umbra-opacity: 0.2 !default;\n$penumbra-opacity: 0.14 !default;\n$ambient-opacity: 0.12 !default;\n\n$umbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 2px 1px -1px',\n  2: '0px 3px 1px -2px',\n  3: '0px 3px 3px -2px',\n  4: '0px 2px 4px -1px',\n  5: '0px 3px 5px -1px',\n  6: '0px 3px 5px -1px',\n  7: '0px 4px 5px -2px',\n  8: '0px 5px 5px -3px',\n  9: '0px 5px 6px -3px',\n  10: '0px 6px 6px -3px',\n  11: '0px 6px 7px -4px',\n  12: '0px 7px 8px -4px',\n  13: '0px 7px 8px -4px',\n  14: '0px 7px 9px -4px',\n  15: '0px 8px 9px -5px',\n  16: '0px 8px 10px -5px',\n  17: '0px 8px 11px -5px',\n  18: '0px 9px 11px -5px',\n  19: '0px 9px 12px -6px',\n  20: '0px 10px 13px -6px',\n  21: '0px 10px 13px -6px',\n  22: '0px 10px 14px -6px',\n  23: '0px 11px 14px -7px',\n  24: '0px 11px 15px -7px',\n) !default;\n\n$penumbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 1px 0px',\n  2: '0px 2px 2px 0px',\n  3: '0px 3px 4px 0px',\n  4: '0px 4px 5px 0px',\n  5: '0px 5px 8px 0px',\n  6: '0px 6px 10px 0px',\n  7: '0px 7px 10px 1px',\n  8: '0px 8px 10px 1px',\n  9: '0px 9px 12px 1px',\n  10: '0px 10px 14px 1px',\n  11: '0px 11px 15px 1px',\n  12: '0px 12px 17px 2px',\n  13: '0px 13px 19px 2px',\n  14: '0px 14px 21px 2px',\n  15: '0px 15px 22px 2px',\n  16: '0px 16px 24px 2px',\n  17: '0px 17px 26px 2px',\n  18: '0px 18px 28px 2px',\n  19: '0px 19px 29px 2px',\n  20: '0px 20px 31px 3px',\n  21: '0px 21px 33px 3px',\n  22: '0px 22px 35px 3px',\n  23: '0px 23px 36px 3px',\n  24: '0px 24px 38px 3px',\n) !default;\n\n$ambient-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 3px 0px',\n  2: '0px 1px 5px 0px',\n  3: '0px 1px 8px 0px',\n  4: '0px 1px 10px 0px',\n  5: '0px 1px 14px 0px',\n  6: '0px 1px 18px 0px',\n  7: '0px 2px 16px 1px',\n  8: '0px 3px 14px 2px',\n  9: '0px 3px 16px 2px',\n  10: '0px 4px 18px 3px',\n  11: '0px 4px 20px 3px',\n  12: '0px 5px 22px 4px',\n  13: '0px 5px 24px 4px',\n  14: '0px 5px 26px 4px',\n  15: '0px 6px 28px 5px',\n  16: '0px 6px 30px 5px',\n  17: '0px 6px 32px 5px',\n  18: '0px 7px 34px 6px',\n  19: '0px 7px 36px 6px',\n  20: '0px 8px 38px 7px',\n  21: '0px 8px 40px 7px',\n  22: '0px 8px 42px 7px',\n  23: '0px 9px 44px 8px',\n  24: '0px 9px 46px 8px',\n) !default;\n\n// The css property used for elevation. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$property: box-shadow !default;\n\n// The default color for the elevation overlay.\n$overlay-color: #fff;\n\n// The css property used for elevation overlay transitions. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$overlay-property: opacity !default;\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: animation-variables.$standard-curve-timing-function !default;\n\n///\n/// Sets the elevation transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$property} #{$duration} #{$easing};\n}\n\n///\n/// Sets the elevation overlay transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function overlay-transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$overlay-property} #{$duration} #{$easing};\n}\n\n// Returns the correct box-shadow specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@function elevation-box-shadow(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0\n) {\n  @if meta.type-of($z-value) != number or not math.is-unitless($z-value) {\n    @error \"$z-value must be a unitless number, but received '#{$z-value}'\";\n  }\n\n  @if $z-value < 0 or $z-value > 24 {\n    @error \"$z-value must be between 0 and 24, but received '#{$z-value}'\";\n  }\n\n  $color: theme-color.prop-value($color);\n\n  $umbra-z-value: map.get($umbra-map, $z-value);\n  $penumbra-z-value: map.get($penumbra-map, $z-value);\n  $ambient-z-value: map.get($ambient-map, $z-value);\n\n  $umbra-color: rgba($color, $umbra-opacity + $opacity-boost);\n  $penumbra-color: rgba($color, $penumbra-opacity + $opacity-boost);\n  $ambient-color: rgba($color, $ambient-opacity + $opacity-boost);\n\n  $box-shadow: (\n    #{'#{$umbra-z-value} #{$umbra-color}'},\n    #{'#{$penumbra-z-value} #{$penumbra-color}'},\n    #{$ambient-z-value} $ambient-color\n  );\n\n  @return $box-shadow;\n}\n\n@function get-elevation($level) {\n  @return (box-shadow: elevation-box-shadow($level));\n}\n\n///\n/// Sets the shadow of the element.\n///\n/// @param {String} $box-shadow - The shadow to apply to the element.\n///\n@mixin shadow($box-shadow, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    /* @alternate */\n    box-shadow: $box-shadow;\n  }\n}\n\n///\n/// Sets the elevation overlay surface required positioning.\n///\n@mixin overlay-surface-position($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    /* @alternate */\n    position: relative;\n  }\n}\n\n///\n/// Sets the dimensions of the elevation overlay, including positioning and sizing.\n///\n/// @param {Number} $width - The width of the elevation overlay\n/// @param {Number} [$height] - The height of the elevation overlay\n/// @param {Boolean} [$has-content-sizing] - Set to false if the container has no content sizing\n///\n@mixin overlay-dimensions(\n  $width,\n  $height: $width,\n  $has-content-sizing: true,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n\n      @if $has-content-sizing {\n        top: 0;\n        /* @noflip */\n        left: 0;\n      } @else {\n        top: 50%;\n        /* @noflip */\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n    }\n  }\n}\n\n///\n/// Sets the elevation overlay fill color.\n/// Expected to be called directly on the elevation overlay element.\n///\n/// @param {Color} $color - The color of the elevation overlay.\n///\n@mixin overlay-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n///\n/// Sets the elevation overlay opacity.\n/// Expected to be called from a parent element.\n///\n/// @param {Number} $opacity - The opacity of the elevation overlay.\n///\n@mixin overlay-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n// Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@mixin elevation(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0,\n  $query: feature-targeting.all()\n) {\n  $box-shadow: elevation-box-shadow(\n    $z-value,\n    $color: $color,\n    $opacity-boost: $opacity-boost\n  );\n\n  @include shadow($box-shadow, $query: $query);\n}\n"],"sourceRoot":""}