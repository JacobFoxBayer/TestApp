{"version":3,"sources":["webpack:///node_modules/@material/tab-bar/mdc-tab-bar.scss","webpack:///node_modules/@material/tab-bar/_mixins.scss","webpack:///components/tab-bar/tab-bar.scss","webpack:///node_modules/@material/tab/_mixins.scss","webpack:///node_modules/@material/tab-scroller/mdc-tab-scroller.scss","webpack:///node_modules/@material/tab-scroller/_mixins.scss","webpack:///node_modules/@material/tab-indicator/mdc-tab-indicator.scss","webpack:///node_modules/@material/tab-indicator/_mixins.scss","webpack:///node_modules/@material/theme/_css.scss","webpack:///node_modules/@material/theme/_gss.scss","webpack:///node_modules/@material/typography/_typography.scss","webpack:///node_modules/@material/tab/_variables.scss","webpack:///node_modules/@material/rtl/_rtl.scss","webpack:///node_modules/@material/ripple/_ripple.scss","webpack:///node_modules/@material/animation/_animation.scss","webpack:///node_modules/@material/ripple/_ripple-theme.scss","webpack:///node_modules/@material/theme/_theme.scss","webpack:///common/_mixins.scss","webpack:///common/_element.core.scss","webpack:///components/typography/typography.scss","webpack:///components/badge/_badge-base.scss","webpack:///components/badge/notification-badge.scss","webpack:///components/utility/color/utility-colors.scss","webpack:///components/icon/icon.scss","webpack:///components/icon/_icon-mixins.scss","webpack:///node_modules/@material/elevation/_elevation.scss","webpack:///node_modules/@material/elevation/_elevation-theme.scss","webpack:///common/_elevation.scss"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;EAAA;ACkCE;EAaE,WAZe;ACXnB;;ADwCE;EE6IE,YFnJO;AC9BX;;ADqDE;EE4HE,YFlIO;AC3CX;;AEhCA;;;;;;;;;;;;;;;;;;;;;EAAA;ACuDE;EAOI;AHJN;AGfE;EAEI;AHgBN;;AGME;EAEI;EACA;EACA;EACA;EACA;AHJN;;AGQE;EAEI;EACA;EACA;AHNN;;AGaM;;EACE;AHTR;;AGeE;EAEI;AHbN;;AGiBE;EFmFE;EEvCA;EACA;EACA;EAIA;AH3DJ;;AGaE;EAEI;AHXN;;AGeE;EAEI;AHbN;;AGiBE;EAEI;AHfN;;AGoBI;EAEI;AHlBR;;AI5GA;;;;;;;;;;;;;;;;;;;;;EAAA;ACkCE;EAyIE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ALrCJ;AKjCE;EC3CI;ECjCF;ED6CA;EAAA;ANqEJ;AKPE;EC1EI;ECjCF;ED6CA;EAAA;AN0EJ;AKjCE;EAEI,qBA8CsB;ALZ5B;AKLE;EAEI,YAgBiB;EAfjB,eAeiB;ALTvB;;AKzHE;EAEI;EACA;AL2HN;;AKvHE;EAEI;EACA;EACA;EACA;ALyHN;;AKrHE;EAEI;EACA;ALuHN;;AKnHE;EAEI;ALqHN;;AKhHE;EAEI;ALkHN;;AK7GE;EAEI;AL+GN;;AK3GE;EAEI;AL6GN;;AKxGE;EAGI;ALyGN;;ACnJE;EOyQE;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;EL2CA,mBQ7FiB;ER8FjB,kBQ9FiB;ER2MjB,eQ5MQ;EJ2ER;EJoJA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ADxBJ;AChHE;EKnDE;ANsKJ;ACzGE;EK7DE;ELiEE;ADyGN;ACoBI;EACE;EACA;ADlBN;;ACvME;EAEI;ADyMN;;ACrME;EI2CE;EJqNA;EACA;EACA;EACA;EACA;ADtDJ;;AC1ME;EAEI;EAIA;EAKA;EACA;ADqMN;;ACjME;EAEI;EAIA,WQ7DM;ER8DN,YQ9DM;ER+DN,eQ/DM;ERgEN;ADgMN;;AC+CI;EACE;EACA;EACA;AD5CN;AC+CI;EACE;EACA;AD7CN;;ACjKE;EK/DI;ECjCF;ED6CA;EAAA;AN0NJ;AC7JE;EKzEI;ECjCF;ED6CA;EAAA;ELiEE;AD+JN;AC4CE;;EAGI;AD3CN;;AC9ME;EM9DE;EDwCA;ECxCA;EDwCA;AN2OJ;AUjPI;EHlCA;EDwCA;ECxCA;EDwCA;ANiPJ;;AWvBE;EACE;IACE,uDCnR2B;IDwR3B;IAAA;EXsBJ;EWnBE;IACE;IAAA;EXqBJ;AACF;AWjBE;EACE;IACE;IACA;EXmBJ;EWhBE;IACE;IAAA;EXkBJ;AACF;AWfE;EACE;IACE;IACA;IAAA;EXiBJ;EWdE;IACE;EXgBJ;AACF;ACrEE;EU5KE;EACA;EACA;EACA;EACA;EACA;EAEA;AXmPJ;AW5OE;;EAGI;EACA;EACA;EACA;EACA;AX6ON;AWzOE;EAGI;ELpEA;ECjCF;ED6CA;EAAA;ANoSJ;AW/NE;ELjFI;ECjCF;ED6CA;EAAA;ANySJ;AWxNI;EAEI;EAAA;AXyNR;AWrNI;EAEI;EACA;EACA;EACA;EACA;AXsNR;AWhNI;EAEI;EAAA;EACA;EACA;EAAA;AXiNR;AW3MI;EAEI;AX4MR;AWpMI;EAEI;EAKA;EAAA;AXiMR;AWnLE;;EAGI;EACA;EACA;EACA;EACA;AXoLN;AW/KI;EAEI;EAAA;EACA;EAAA;AXgLR;AanUE;EPpBI;ECjCF;ED6CA;EAAA;ANgVJ;AazQI;EPnFE;ECjCF;ED6CA;EAAA;ANqVJ;AapOM;EAiBF;EP9IE;ECjCF;ED6CA;EAAA;AN2VJ;AalMI;EAEI;AbmMR;Aa9LM;EAEI,yBA5MS;EP8Bb;ECjCF;ED6CA;EAAA;ANoWJ;AapLE;EAEI;AbqLN;;AC9IE;EAEI;EACA;EACA;EACA;EACA;EACA;EAEA;AD+IN;;AcxZE;ERuCE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AN4YJ;;AcvaM;EReA;ECjCF;ED6CA;EAAA;ANkZJ;;Ac7aM;EReA;ECjCF;ED6CA;EAAA;ANwZJ;;Ac7aM;ERSA;ECjCF;ED6CA;EAAA;AN8ZJ;;AcnbM;ERSA;ECjCF;ED6CA;EAAA;ANoaJ;;Ac/bM;EReA;ECjCF;ED6CA;EAAA;AN0aJ;;AcrcM;EReA;ECjCF;ED6CA;EAAA;ANgbJ;;Ac3cM;EReA;ECjCF;ED6CA;EAAA;ANsbJ;;AcjdM;EReA;ECjCF;ED6CA;EAAA;AN4bJ;;AcvdM;EReA;ECjCF;ED6CA;EAAA;ANkcJ;;Ac7dM;EReA;ECjCF;ED6CA;EAAA;ANwcJ;;AcneM;EReA;ECjCF;ED6CA;EAAA;AN8cJ;;AczeM;EReA;ECjCF;ED6CA;EAAA;ANodJ;;Ac/eM;EReA;ECjCF;ED6CA;EAAA;AN0dJ;;AcrfM;EReA;ECjCF;ED6CA;EAAA;ANgeJ;;Ac3fM;EReA;ECjCF;ED6CA;EAAA;ANseJ;;AcjgBM;EReA;ECjCF;ED6CA;EAAA;AN4eJ;;AcvgBM;EReA;ECjCF;ED6CA;EAAA;ANkfJ;;Ac7gBM;EReA;ECjCF;ED6CA;EAAA;ANwfJ;;AcnhBM;EReA;ECjCF;ED6CA;EAAA;AN8fJ;;AczhBM;EReA;ECjCF;ED6CA;EAAA;ANogBJ;;Ac/hBM;EReA;ECjCF;ED6CA;EAAA;AN0gBJ;;AcriBM;EReA;ECjCF;ED6CA;EAAA;ANghBJ;;Ac3iBM;EReA;ECjCF;ED6CA;EAAA;ANshBJ;;AcjjBM;EReA;ECjCF;ED6CA;EAAA;AN4hBJ;;AcviBI;ERDE;ECjCF;ED6CA;EAAA;ANkiBJ;;Ac7iBI;ERDE;ECjCF;ED6CA;EAAA;ANwiBJ;;AexmBA;AA4BA;AAoCI;;EAEI,yBCMK;EDLL;Af6iBR;;AetiBI;EACI,cCHK;AhB4iBb;;AepjBI;;EAEI,yBCMK;EDLL;AfujBR;;AehjBI;EACI,cCHK;AhBsjBb;;Ae9jBI;;EAEI,yBCMK;EDLL;AfikBR;;Ae1jBI;EACI,cCHK;AhBgkBb;;AexkBI;;EAEI,yBCMK;EDLL;Af2kBR;;AepkBI;EACI,cCHK;AhB0kBb;;AellBI;;EAEI,yBCMK;EDLL;AfqlBR;;Ae9kBI;EACI,cCHK;AhBolBb;;Ae5lBI;;EAEI,yBCMK;EDLL;Af+lBR;;AexlBI;EACI,cCHK;AhB8lBb;;AetmBI;;EAEI,yBCMK;EDLL;AfymBR;;AelmBI;EACI,cCHK;AhBwmBb;;AehnBI;;EAEI,yBCMK;EDLL;AfmnBR;;Ae5mBI;EACI,cCHK;AhBknBb;;Ae1nBI;;EAEI,yBCMK;EDLL;Af6nBR;;AetnBI;EACI,cCHK;AhB4nBb;;AepoBI;;EAEI,yBCMK;EDLL;AfuoBR;;AehoBI;EACI,cCHK;AhBsoBb;;Ae9oBI;;EAEI,yBCkBO;EDjBP;AfipBR;;Ae1oBI;EACI,cCSO;AhBooBf;;AexpBI;;EAEI,yBCkBO;EDjBP;Af2pBR;;AeppBI;EACI,cCSO;AhB8oBf;;AelqBI;;EAEI,yBCkBO;EDjBP;AfqqBR;;Ae9pBI;EACI,cCSO;AhBwpBf;;Ae5qBI;;EAEI,yBCkBO;EDjBP;Af+qBR;;AexqBI;EACI,cCSO;AhBkqBf;;AetrBI;;EAEI,yBCkBO;EDjBP;AfyrBR;;AelrBI;EACI,cCSO;AhB4qBf;;AehsBI;;EAEI,yBCkBO;EDjBP;AfmsBR;;Ae5rBI;EACI,cCSO;AhBsrBf;;Ae1sBI;;EAEI,yBCkBO;EDjBP;Af6sBR;;AetsBI;EACI,cCSO;AhBgsBf;;AeptBI;;EAEI,yBCkBO;EDjBP;AfutBR;;AehtBI;EACI,cCSO;AhB0sBf;;Ae9tBI;;EAEI,yBCkBO;EDjBP;AfiuBR;;Ae1tBI;EACI,cCSO;AhBotBf;;AexuBI;;EAEI,yBCkBO;EDjBP;Af2uBR;;AepuBI;EACI,cCSO;AhB8tBf;;AelvBI;;EAEI,sBCsDO;EDrDP;AfqvBR;;Ae9uBI;EACI,WC6CO;AhBosBf;;Ae5vBI;;EAEI,sBCsDO;EDrDP;Af+vBR;;AexvBI;EACI,WC6CO;AhB8sBf;;AetwBI;;EAEI,sBCsDO;EDrDP;AfywBR;;AelwBI;EACI,WC6CO;AhBwtBf;;AehxBI;;EAEI,sBCsDO;EDrDP;AfmxBR;;Ae5wBI;EACI,WC6CO;AhBkuBf;;Ae1xBI;;EAEI,sBCsDO;EDrDP;Af6xBR;;AetxBI;EACI,WC6CO;AhB4uBf;;AepyBI;;EAEI,sBCsDO;EDrDP;AfuyBR;;AehyBI;EACI,WC6CO;AhBsvBf;;Ae9yBI;;EAEI,sBCsDO;EDrDP;AfizBR;;Ae1yBI;EACI,WC6CO;AhBgwBf;;AexzBI;;EAEI,sBCsDO;EDrDP;Af2zBR;;AepzBI;EACI,WC6CO;AhB0wBf;;Ael0BI;;EAEI,sBCsDO;EDrDP;Afq0BR;;Ae9zBI;EACI,WC6CO;AhBoxBf;;Ae50BI;;EAEI,yBCiEgB;EDhEhB;Af+0BR;;Aex0BI;EACI,cCwDgB;AhBmxBxB;;Aet1BI;;EAEI,yBCiEgB;EDhEhB;Afy1BR;;Ael1BI;EACI,cCwDgB;AhB6xBxB;;Aeh2BI;;EAEI,yBCiEgB;EDhEhB;Afm2BR;;Ae51BI;EACI,cCwDgB;AhBuyBxB;;Ae12BI;;EAEI,yBCiEgB;EDhEhB;Af62BR;;Aet2BI;EACI,cCwDgB;AhBizBxB;;Aep3BI;;EAEI,yBCiEgB;EDhEhB;Afu3BR;;Aeh3BI;EACI,cCwDgB;AhB2zBxB;;Ae93BI;;EAEI,yBCiEgB;EDhEhB;Afi4BR;;Ae13BI;EACI,cCwDgB;AhBq0BxB;;Aex4BI;;EAEI,yBCiEgB;EDhEhB;Af24BR;;Aep4BI;EACI,cCwDgB;AhB+0BxB;;Ael5BI;;EAEI,yBCiEgB;EDhEhB;Afq5BR;;Ae94BI;EACI,cCwDgB;AhBy1BxB;;Ae55BI;;EAEI,yBCiEgB;EDhEhB;Af+5BR;;Aex5BI;EACI,cCwDgB;AhBm2BxB;;Aet6BI;;EAEI,yBCiEgB;EDhEhB;Afy6BR;;Ael6BI;EACI,cCwDgB;AhB62BxB;;Aeh7BI;;EAEI,yBC6EgB;ED5EhB;Afm7BR;;Ae56BI;EACI,cCoEgB;AhB22BxB;;Ae17BI;;EAEI,yBC6EgB;ED5EhB;Af67BR;;Aet7BI;EACI,cCoEgB;AhBq3BxB;;Aep8BI;;EAEI,yBC6EgB;ED5EhB;Afu8BR;;Aeh8BI;EACI,cCoEgB;AhB+3BxB;;Ae98BI;;EAEI,yBC6EgB;ED5EhB;Afi9BR;;Ae18BI;EACI,cCoEgB;AhBy4BxB;;Aex9BI;;EAEI,yBC6EgB;ED5EhB;Af29BR;;Aep9BI;EACI,cCoEgB;AhBm5BxB;;Ael+BI;;EAEI,yBC6EgB;ED5EhB;Afq+BR;;Ae99BI;EACI,cCoEgB;AhB65BxB;;Ae5+BI;;EAEI,yBC6EgB;ED5EhB;Af++BR;;Aex+BI;EACI,cCoEgB;AhBu6BxB;;Aet/BI;;EAEI,yBC6EgB;ED5EhB;Afy/BR;;Ael/BI;EACI,cCoEgB;AhBi7BxB;;AehgCI;;EAEI,yBC6EgB;ED5EhB;AfmgCR;;Ae5/BI;EACI,cCoEgB;AhB27BxB;;Ae1gCI;;EAEI,yBC6EgB;ED5EhB;Af6gCR;;AetgCI;EACI,cCoEgB;AhBq8BxB;;AephCI;;EAEI,yBCyFgB;EDxFhB;AfuhCR;;AehhCI;EACI,cCgFgB;AhBm8BxB;;Ae9hCI;;EAEI,yBCyFgB;EDxFhB;AfiiCR;;Ae1hCI;EACI,cCgFgB;AhB68BxB;;AexiCI;;EAEI,yBCyFgB;EDxFhB;Af2iCR;;AepiCI;EACI,cCgFgB;AhBu9BxB;;AeljCI;;EAEI,yBCyFgB;EDxFhB;AfqjCR;;Ae9iCI;EACI,cCgFgB;AhBi+BxB;;Ae5jCI;;EAEI,yBCyFgB;EDxFhB;Af+jCR;;AexjCI;EACI,cCgFgB;AhB2+BxB;;AetkCI;;EAEI,yBCyFgB;EDxFhB;AfykCR;;AelkCI;EACI,cCgFgB;AhBq/BxB;;AehlCI;;EAEI,yBCyFgB;EDxFhB;AfmlCR;;Ae5kCI;EACI,cCgFgB;AhB+/BxB;;Ae1lCI;;EAEI,yBCyFgB;EDxFhB;Af6lCR;;AetlCI;EACI,cCgFgB;AhBygCxB;;AepmCI;;EAEI,yBCyFgB;EDxFhB;AfumCR;;AehmCI;EACI,cCgFgB;AhBmhCxB;;Ae9mCI;;EAEI,yBCyFgB;EDxFhB;AfinCR;;Ae1mCI;EACI,cCgFgB;AhB6hCxB;;AehjCY;EACI;EAKA;Af+iChB;;AerjCY;EACI;EAKA;AfojChB;;Ae1jCY;EACI;EAKA;AfyjChB;;Ae/jCY;EACI;EAKA;Af8jChB;;AepkCY;EACI;EAKA;AfmkChB;;AezkCY;EACI;EAKA;AfwkChB;;AevlCY;EACI;EAKA;AfslChB;;Ae5lCY;EACI;EAKA;Af2lChB;;AejmCY;EACI;EAKA;AfgmChB;;AetmCY;EACI;EAKA;AfqmChB;;Ae3mCY;EACI;EAKA;Af0mChB;;AehnCY;EACI;EAKA;Af+mChB;;Ae5mCY;EACI;EAKA;Af2mChB;;Ae1nCY;EACI;EAKA;AfynChB;;AetnCY;EACI;EAKA;AfqnChB;;AepoCY;EACI;EAKA;AfmoChB;;AgBn9BA;;EAEI;EACA;EACA;EAGA;EAGA;EACA;AhBk9BJ;;AgB/8BA;EAEI;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EAMA;EAKA;EAKA;EAKA;EAIA;EAGA;EAGA;EAGA;EAII;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAKA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAOA;EAAA;EAAA;EAAA;EAAA;EAKA;EAAA;EAAA;EAAA;EAAA;EAKA;EAAA;EAAA;EAAA;EAAA;EAKA;EAAA;EAAA;EAAA;EAAA;EAKA;EAAA;EAAA;EAAA;EAAA;EAKA;EAAA;EAAA;EAAA;EAAA;EAKA;EAAA;EAAA;EAAA;EAAA;EAIJ;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAYA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EAGA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AhB88BJ;;AQ/wCE;EAgEE;EACA;EFzPE;ECjCF;ED6CA;EAAA;ANm8CJ;;AQlxCI;EA2DA;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;AN69CJ;;AQ5yCI;EA2DA;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;ANu/CJ;;AQt0CI;EA2DA;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;ANihDJ;;AQh2CI;EA2DA;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;AN2iDJ;;AQ13CI;EA2DA;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;ANqkDJ;;AQp5CI;EA2DA;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;AN+lDJ;;AQ96CI;EA2DA;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;ANynDJ;;AQx8CI;EA2DA;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;ANmpDJ;;AQl+CI;EA2DA;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;AN6qDJ;;AQ5/CI;EA2DA;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;ANusDJ;;AQthDI;EA2DA;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;ANiuDJ;;AQhjDI;EA2DA;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;AN2vDJ;;AQ1kDI;EA2DA;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;ANqxDJ;;AiBp1DA;;EAGI;EACA;EACA;EAGA;EACA;EAQA;EACA;EASA;EASA;EAkBA;EASA;EAQA;EACA;EAGA;EAMA;EACA;EAGA;EAMA;EACA;EAGA;EAUA;EAOA;EAGA;EAOA;EASA;AjB8uDJ;;AiBzuDA;ETmKI;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;EW2EA;AjBkwDJ;;AiB/vDA;ET8JI;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;EWgFA;AjBwxDJ;;AiBrxDA;ETyJI;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;EWqFA;AjB8yDJ;;AiB3yDA;EToJI;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;EW0FA;AjBo0DJ;;AiBj0DA;ET+II;EACA;EFzPE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;EAZE;ECjCF;ED6CA;EAAA;UAAA;EAZE;ECjCF;ED6CA;EAAA;EW+FA;AjB01DJ;;AiBv1DA;;;EAGI;EACA;EACA;EACA;UAAA;AjB01DJ;;AiBr1DI;EACI;AjBw1DR;;AiBl1DI;EACI;AjBq1DR;;AkB3gEA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AlB8gEJ;AkB5gEI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AlB8gER;;AmBliEQ;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AnBqiEZ;AmBniEY;EACI;EACA;EACA;EACA;EACA;EACA;AnBqiEhB;AmBliEY;EACI;EACA;AnBoiEhB;AmBjiEY;EACI;EACA;AnBmiEhB;AmBhiEY;EACI;EACA;AnBkiEhB;AmB/hEY;EACI;EACA;AnBiiEhB;;AoB9iEI;EACI;EACA;ApBijER;;AoB9iEI;;EAEI;EACA;ApBijER;;AoBzjEI;EACI;EACA;ApB4jER;;AoBzjEI;;EAEI;EACA;ApB4jER;;AoBpkEI;EACI;EACA;ApBukER;;AoBpkEI;;EAEI;EACA;ApBukER;;AoB/kEI;EACI;EACA;ApBklER;;AoB/kEI;;EAEI;EACA;ApBklER;;AoB1lEI;EACI;EACA;ApB6lER;;AoB1lEI;;EAEI;EACA;ApB6lER;;AoBrmEI;EACI;EACA;ApBwmER;;AoBrmEI;;EAEI;EACA;ApBwmER;;AoBhnEI;EACI;EACA;ApBmnER;;AoBhnEI;;EAEI;EACA;ApBmnER;;AoB3nEI;EACI;EACA;ApB8nER;;AoB3nEI;;EAEI;EACA;ApB8nER;;AqBnqEA;EACI;ArBsqEJ;;AqBnqEA;EACI;EACA;ArBsqEJ;;AqBnqEA;EACI;EACA;ArBsqEJ;;AqBnqEA;EACI;EACA;ArBsqEJ;;AqBnqEA;EACI;EACA;ArBsqEJ;;AqBnqEA;EACI;EACA;ArBsqEJ;;AqBnqEA;EACI;ArBsqEJ;;AqBnqEA;EACI;ArBsqEJ;;AqBnqEA;EACI,WAzCI;ArB+sER;;AqBnqEA;EACI;EACA;ArBsqEJ;;AsBvtEI;EACI;EACA;AtB0tER;;AsB5tEI;EACI;EACA;AtB+tER;;AsBjuEI;EACI;EACA;AtBouER;;AsBtuEI;EACI;EACA;AtByuER;;AsB3uEI;EACI;EACA;AtB8uER;;AsBhvEI;EACI;EACA;AtBmvER;;AsBrvEI;EACI;EACA;AtBwvER;;AsB1vEI;EACI;EACA;AtB6vER;;AqBtsEI;EACI;EACA;EACA;ArBysER;;AqBpsEI;EACI;EACA;EACA;ArBusER;;AqBlsEI;EACI;EACA;EACA;ArBqsER;;AqBhsEI;EACI;EACA;EACA;ArBmsER;;AqB9rEI;EACI;EACA;EACA;ArBisER;;AqB7rEA;EACI;ArBgsEJ;AqB9rEI;EACI;EACA;EACA;ArBgsER;AqB9rEQ;EACI;EACA;ArBgsEZ;;AuBxwEI;ECuLA;EACA,wHA0FW;AxB2/Df;;AuB7wEI;ECuLA;EACA,yHA0FW;AxBggEf;;AuBlxEI;ECuLA;EACA,yHA0FW;AxBqgEf;;AuBvxEI;ECuLA;EACA,yHA0FW;AxB0gEf;;AuB5xEI;ECuLA;EACA,0HA0FW;AxB+gEf;;AuBjyEI;ECuLA;EACA,0HA0FW;AxBohEf;;AuBtyEI;ECuLA;EACA,2HA0FW;AxByhEf;;AuB3yEI;ECuLA;EACA,2HA0FW;AxB8hEf;;AuBhzEI;ECuLA;EACA,2HA0FW;AxBmiEf;;AuBrzEI;ECuLA;EACA,2HA0FW;AxBwiEf;;AuB1zEI;ECuLA;EACA,4HA0FW;AxB6iEf;;AuB/zEI;ECuLA;EACA,4HA0FW;AxBkjEf;;AuBp0EI;ECuLA;EACA,4HA0FW;AxBujEf;;AuBz0EI;ECuLA;EACA,4HA0FW;AxB4jEf;;AuB90EI;ECuLA;EACA,4HA0FW;AxBikEf;;AuBn1EI;ECuLA;EACA,4HA0FW;AxBskEf;;AuBx1EI;ECuLA;EACA,6HA0FW;AxB2kEf;;AuB71EI;ECuLA;EACA,6HA0FW;AxBglEf;;AuBl2EI;ECuLA;EACA,6HA0FW;AxBqlEf;;AuBv2EI;ECuLA;EACA,6HA0FW;AxB0lEf;;AuB52EI;ECuLA;EACA,8HA0FW;AxB+lEf;;AuBj3EI;ECuLA;EACA,8HA0FW;AxBomEf;;AuBt3EI;ECuLA;EACA,8HA0FW;AxBymEf;;AuB33EI;ECuLA;EACA,8HA0FW;AxB8mEf;;AuBh4EI;ECuLA;EACA,8HA0FW;AxBmnEf;;AuBh4EE;EAEI;EAIA,uBC+EK;AxBgzEX;;AyBr6EA;EACI;EACA;EACA;AzBw6EJ;;AyBj3EA;EACI;AzBo3EJ;;AyBj3EA;EACI,+GAxDa;AzB46EjB;;AyBj3EA;EACI,iHAvDa;AzB26EjB;;AyBj3EA;EACI,iHAtDa;AzB06EjB;;AyBj3EA;EACI,kHArDa;AzBy6EjB;;AyBj3EA;EACI,mHApDa;AzBw6EjB;;AyBj3EA;EACI,2HAnDa;AzBu6EjB;;AyBj3EA;EACI,2HAlDa;AzBs6EjB;;AyBj3EA;EACI,4HAjDa;AzBq6EjB;;AyBj3EA;EACI,6HAhDa;AzBo6EjB;;AyBj3EA;EACI,8HA/Ca;AzBm6EjB;;AyBj3EA;EACI;AzBo3EJ;;AyBj3EA;EACI;AzBo3EJ;;AyBj3EA;EACI;AzBo3EJ;;AyBj3EA;EACI;AzBo3EJ;;AyBj3EA;EACI;EACA;EACA;AzBo3EJ;;AAz+EA;EACI;EACA;AA4+EJ;AA1+EI;EACI;AA4+ER;AA1+EI;EACI;AA4+ER;;AAv+EA;EACI,iHyBNa;AzBg/EjB;;AAt+EA;EACI;EACA;EACA;AAy+EJ;AAv+EI;EACI;AAy+ER;AAv+EQ;EACI;AAy+EZ;AAr+EI;EACI;EACA;AAu+ER;AAn+EI;EACI;EACA;EACA;AAq+ER;AAl+EI;EACI;AAo+ER;;AA/9EA;EACI;EACA;EACA;AAk+EJ;AAh+EI;EACI;AAk+ER;AAh+EQ;EACI;AAk+EZ;AA79EI;EACI;EACA;AA+9ER;AA39EI;EACI;EACA;EACA;AA69ER;AA19EI;EACI;AA49ER;;AAv9EQ;EACI;AA09EZ;AAp9EY;EACI;AAs9EhB;AAp9EgB;EACI;AAs9EpB;AA/8EY;EACI;AAi9EhB;AA/8EgB;EACI;AAi9EpB;AA18EY;EACI;AA48EhB;AA18EgB;EACI;AA48EpB,C","file":"element-tab-bar.css","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n@use './mixins';\n@include mixins.core-styles;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/animation/variables' as animation-variables;\n@use '@material/density/functions' as density-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/tab-scroller/mixins' as tab-scroller-mixins;\n@use '@material/tab/mixins' as tab-mixins;\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  // postcss-bem-linter: define tab-bar\n  .mdc-tab-bar {\n    @include width(100%, $query);\n  }\n\n  @include density(variables.$density-scale, $query: $query);\n  @include stacked-density(variables.$stacked-density-scale, $query: $query);\n  // postcss-bem-linter: end\n}\n\n@mixin width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $width;\n  }\n}\n\n///\n/// Sets density scale to default tab bar variant. Use `mdc-tab-bar-stacked-density()` mixin for stacked tab bar\n/// variant.\n///\n/// @param {Number} $density-scale Density scale value. Supported density scales `-4`, `-3`, `-2`, `-1` and `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-tab {\n    @include tab-mixins.height($height, $query: $query);\n  }\n}\n\n///\n/// Sets density scale to stacked tab bar variant.\n///\n/// @param {Number} $density-scale Density scale value. Supported density scales `-4`, `-3`, `-2`, `-1` and `0`.\n///\n@mixin stacked-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$stacked-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-tab--stacked {\n    @include tab-mixins.height($height, $query: $query);\n  }\n}\n\n///\n/// Sets the CSS transition for the tab scrolling animation. This mixin is a proxy to `mdc-tab-scroller-transition`\n/// mixin.\n///\n/// @param {Number | String} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin tab-scroller-transition(\n  $duration-ms,\n  $timing-function: animation-variables.$standard-curve-timing-function,\n  $query: feature-targeting.all()\n) {\n  .mdc-tab-scroller {\n    @include tab-scroller-mixins.transition(\n      $duration-ms,\n      $timing-function: $timing-function,\n      $query: $query\n    );\n  }\n}\n","@use '@material/tab-bar/mdc-tab-bar';\n@use '@material/tab-scroller/mdc-tab-scroller';\n@use '@material/tab-indicator/mdc-tab-indicator';\n@use '@material/tab/mdc-tab';\n@use '../badge/notification-badge.scss';\n@use '../icon/icon.scss';\n@use '../typography/typography.scss';\n@use '../../common/element.core';\n@use '../../common/elevation';\n\n// NOTE: Material uses \"primary\" to highlight active Tab states with Ripple and text color\n// NOTE: Material uses \"secondary\" to highlight Tab Indicator Icons\n\n// Surface/Default Variant\n.mdc-tab-bar--surface {\n    background-color: var(--lmnt-theme-surface);\n    --mdc-theme-primary: var(--lmnt-theme-primary-on-surface);\n\n    .mdc-tab {\n        --mdc-theme-primary: var(--lmnt-theme-primary-on-surface);\n    }\n    .mdc-tab-indicator .mdc-tab-indicator__content--underline {\n        border-color: var(--lmnt-theme-primary-on-surface);\n    }\n}\n\n// Elevated Modifier\n.mdc-tab-bar--elevated {\n    box-shadow: elevation.$elevation-02dp;\n}\n\n// Primary Variant\n.mdc-tab-bar--primary {\n    --mdc-theme-primary: var(--lmnt-theme-on-primary);\n    --mdc-theme-secondary: var(--lmnt-theme-secondary);\n    background-color: var(--lmnt-theme-primary);\n\n    .mdc-tab {\n        --mdc-theme-primary: var(--lmnt-theme-on-primary);\n\n        .mdc-tab__icon {\n            --mdc-theme-primary: var(--lmnt-theme-on-primary);\n        }\n    }\n    // Text color for inactive Tabs\n    .mdc-tab:not(.mdc-tab--active) .mdc-tab__text-label {\n        color: var(--lmnt-theme-on-primary);\n        opacity: 0.6;\n    }\n\n    // Icon color for inactive Tabs\n    .mdc-tab:not(.mdc-tab--active) .mdc-tab__icon {\n        color: var(--lmnt-theme-on-primary);\n        fill: currentColor;\n        opacity: var(--lmnt-theme-emphasis-icon-in-component);\n    }\n\n    .mdc-tab-indicator .mdc-tab-indicator__content--underline {\n        border-color: var(--lmnt-theme-on-primary);\n    }\n}\n\n// Secondary Variant\n.mdc-tab-bar--secondary {\n    --mdc-theme-primary: var(--lmnt-theme-on-secondary);\n    --mdc-theme-secondary: var(--lmnt-theme-primary);\n    background-color: var(--lmnt-theme-secondary);\n\n    .mdc-tab {\n        --mdc-theme-primary: var(--lmnt-theme-on-secondary);\n\n        .mdc-tab__icon {\n            --mdc-theme-primary: var(--lmnt-theme-on-secondary);\n        }\n    }\n\n    // Text color for inactive Tabs\n    .mdc-tab:not(.mdc-tab--active) .mdc-tab__text-label {\n        color: var(--lmnt-theme-on-secondary);\n        opacity: 0.6;\n    }\n\n    // Icon color for inactive Tabs\n    .mdc-tab:not(.mdc-tab--active) .mdc-tab__icon {\n        color: var(--lmnt-theme-on-secondary);\n        fill: currentColor;\n        opacity: var(--lmnt-theme-emphasis-icon-in-component);\n    }\n\n    .mdc-tab-indicator .mdc-tab-indicator__content--underline {\n        border-color: var(--lmnt-theme-on-secondary);\n    }\n}\n.lmnt {\n    .mdc-tab {\n        .lmnt-tab-bar--notification-badge {\n            margin-left: 14px;\n        }\n    }\n\n    &.mdc-tab-bar--surface {\n        .mdc-tab {\n            &.mdc-button:disabled {\n                color: var(--lmnt-theme-on-surface-disabled);\n\n                .mdc-tab__text-label {\n                    color: var(--lmnt-theme-on-surface-disabled);\n                }\n            }\n        }\n    }\n    &.mdc-tab-bar--primary {\n        .mdc-tab {\n            &.mdc-button:disabled {\n                color: var(--lmnt-theme-on-primary-disabled);\n\n                .mdc-tab__text-label {\n                    color: var(--lmnt-theme-on-primary-disabled);\n                }\n            }\n        }\n    }\n    &.mdc-tab-bar--secondary {\n        .mdc-tab {\n            &.mdc-button:disabled {\n                color: var(--lmnt-theme-on-secondary-disabled);\n\n                .mdc-tab__text-label {\n                    color: var(--lmnt-theme-on-secondary-disabled);\n                }\n            }\n        }\n    }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use '@material/rtl/mixins' as rtl-mixins;\n@use '@material/tab-indicator/mixins' as tab-indicator-mixins;\n@use './variables';\n\n// Public mixins\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple($query);\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles\n// from the other tah styles. It is recommended that most users use `mdc-tab-core-styles` instead.\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define tab\n\n  .mdc-tab {\n    @include base_($query);\n  }\n\n  .mdc-tab--min-width {\n    @include feature-targeting.targets($feat-structure) {\n      flex: 0 1 auto;\n    }\n  }\n\n  .mdc-tab__content {\n    @include content_($query);\n  }\n\n  .mdc-tab__text-label {\n    @include feature-targeting.targets($feat-animation) {\n      transition: 150ms color linear;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      // Setting line-height here overrides the line-height from the typography\n      // mixin above. The line-height needs to be overridden so that the spacing\n      // between the text label and the icon as well as the text label and the\n      // bottom of the tab remain the same.\n      line-height: 1;\n      z-index: 2;\n    }\n  }\n\n  .mdc-tab__icon {\n    @include feature-targeting.targets($feat-animation) {\n      transition: 150ms color linear;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      width: variables.$icon-size;\n      height: variables.$icon-size;\n      font-size: variables.$icon-size;\n      z-index: 2;\n    }\n  }\n\n  .mdc-tab--stacked {\n    @include stacked_($query);\n  }\n\n  .mdc-tab--active {\n    @include active_($query);\n  }\n\n  .mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon + .mdc-tab__text-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl-mixins.reflexive-box(padding, left, 8px);\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles\n// from the other tah styles. It is recommended that most users use `mdc-tab-core-styles` instead.\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  @include ripple_($query);\n}\n\n@mixin horizontal-padding($padding, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    padding-right: $padding;\n    padding-left: $padding;\n  }\n}\n\n@mixin text-label-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-tab__text-label {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-tab__icon {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n\n      fill: currentColor;\n    }\n  }\n}\n\n@mixin states-color($color, $query: feature-targeting.all()) {\n  @include ripple-theme.states(\n    $color,\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include icon-color($color, $query);\n  @include states-color($color, $query);\n  @include text-label-color($color, $query);\n}\n\n@mixin active-text-label-color($color, $query: feature-targeting.all()) {\n  &.mdc-tab--active {\n    @include text-label-color($color, $query);\n  }\n}\n\n@mixin active-icon-color($color, $query: feature-targeting.all()) {\n  &.mdc-tab--active {\n    @include icon-color($color, $query);\n  }\n}\n\n@mixin active-states-color($color, $query: feature-targeting.all()) {\n  &.mdc-tab--active {\n    @include states-color($color, $query);\n  }\n}\n\n@mixin parent-positioning($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: relative;\n  }\n}\n\n@mixin fixed-width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    flex: 0 1 $width;\n  }\n}\n\n///\n/// Sets tab height\n///\n/// @param {Number} $height Height value in `px`.\n///\n@mixin height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n///\n/// Sets tab text transform\n///\n/// @param {String} $transform The text-transform property to apply.\n///\n@mixin text-transform($transform, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-transform: $transform;\n  }\n}\n\n///\n/// Sets tab min-width.\n///\n/// @param {Number} $min-width Minimum width value in `px`.\n///\n@mixin min-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    min-width: $min-width;\n  }\n}\n\n//\n// Private\n//\n\n@mixin base_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include typography.typography(button, $query);\n  @include text-label-color(variables.$text-label-color-default, $query);\n  @include icon-color(variables.$icon-color-default, $query);\n  @include horizontal-padding(variables.$horizontal-padding, $query);\n  @include min-width(variables.$min-width, $query);\n  @include tab-indicator-mixins.surface($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    flex: 1 0 auto;\n    justify-content: center;\n    box-sizing: border-box;\n    // Explicitly setting margin to 0 is to override safari default margin for button elements.\n    margin: 0;\n    padding-top: 0;\n    padding-bottom: 0;\n    border: none;\n    outline: none;\n    background: none;\n    text-align: center;\n    white-space: nowrap;\n    cursor: pointer;\n    -webkit-appearance: none;\n    z-index: 1;\n\n    // Firefox still draws a dotted border around focused buttons unless specifically overridden.\n    &::-moz-focus-inner {\n      padding: 0;\n      border: 0;\n    }\n  }\n}\n\n@mixin ripple_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-tab {\n    @include ripple.surface(\n      $query,\n      $ripple-target: variables.$ripple-target,\n      $include-will-change: false\n    );\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: variables.$ripple-target\n    );\n    @include ripple-theme.states(\n      $color: primary,\n      $query: $query,\n      $ripple-target: variables.$ripple-target\n    );\n  }\n\n  #{variables.$ripple-target} {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      // TODO(b/151931961): Remove the following line once resolved\n      will-change: transform, opacity;\n    }\n  }\n}\n\n@mixin content_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include tab-indicator-mixins.surface($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: inherit;\n    pointer-events: none;\n  }\n}\n\n@mixin stacked_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-tab__content {\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n    }\n\n    .mdc-tab__text-label {\n      padding-top: 6px;\n      padding-bottom: 4px;\n    }\n  }\n}\n\n@mixin active_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include text-label-color(variables.$text-label-color-active, $query);\n  @include icon-color(variables.$icon-color-active, $query);\n\n  .mdc-tab__text-label,\n  .mdc-tab__icon {\n    @include feature-targeting.targets($feat-animation) {\n      transition-delay: 100ms;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n@use './mixins';\n@include mixins.core-styles;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/animation/variables' as animation-variables;\n@use '@material/tab/mixins' as tab-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use './variables';\n\n///\n/// Sets the CSS transition for the tab scrolling animation.\n///\n/// @param {Number | String} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin transition(\n  $duration-ms,\n  $timing-function: animation-variables.$standard-curve-timing-function,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  &.mdc-tab-scroller--animating .mdc-tab-scroller__scroll-content {\n    @include feature-targeting.targets($feat-animation) {\n      transition: $duration-ms transform $timing-function;\n    }\n  }\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define tab-scroller\n  .mdc-tab-scroller {\n    @include transition(\n      $duration-ms: variables.$transition-duration,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      overflow-y: hidden;\n    }\n  }\n\n  // Selector for test element used to feature-detect horizontal scrollbar height\n  .mdc-tab-scroller__test {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      top: -9999px;\n      width: 100px;\n      height: 100px;\n      overflow-x: scroll;\n    }\n  }\n\n  .mdc-tab-scroller__scroll-area {\n    @include feature-targeting.targets($feat-structure) {\n      -webkit-overflow-scrolling: touch;\n      display: flex;\n      overflow-x: hidden;\n    }\n  }\n\n  .mdc-tab-scroller__scroll-area,\n  .mdc-tab-scroller__test {\n    @include feature-targeting.targets($feat-structure) {\n      &::-webkit-scrollbar {\n        display: none;\n      }\n    }\n  }\n\n  // This modifier class will be added in JS after computing the OS scrollbar size in order to hide the scrollbar.\n  .mdc-tab-scroller__scroll-area--scroll {\n    @include feature-targeting.targets($feat-structure) {\n      overflow-x: scroll;\n    }\n  }\n\n  .mdc-tab-scroller__scroll-content {\n    @include scroll-content_($query);\n  }\n\n  .mdc-tab-scroller--align-start .mdc-tab-scroller__scroll-content {\n    @include feature-targeting.targets($feat-structure) {\n      justify-content: flex-start;\n    }\n  }\n\n  .mdc-tab-scroller--align-end .mdc-tab-scroller__scroll-content {\n    @include feature-targeting.targets($feat-structure) {\n      justify-content: flex-end;\n    }\n  }\n\n  .mdc-tab-scroller--align-center .mdc-tab-scroller__scroll-content {\n    @include feature-targeting.targets($feat-structure) {\n      justify-content: center;\n    }\n  }\n\n  .mdc-tab-scroller--animating {\n    .mdc-tab-scroller__scroll-area {\n      @include feature-targeting.targets($feat-animation) {\n        -webkit-overflow-scrolling: auto;\n      }\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n//\n// Private\n//\n\n@mixin scroll-content_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include tab-mixins.parent-positioning($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    flex: 1 0 auto;\n    transform: none;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    will-change: transform;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n@use './mixins';\n@include mixins.core-styles;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/animation/variables';\n@use '@material/theme/theme';\n@use '@material/feature-targeting/feature-targeting';\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define tab-indicator\n\n  .mdc-tab-indicator {\n    @include base_($query);\n  }\n\n  .mdc-tab-indicator__content {\n    @include feature-targeting.targets($feat-structure) {\n      transform-origin: left;\n      opacity: 0;\n    }\n  }\n\n  .mdc-tab-indicator__content--underline {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: flex-end;\n      box-sizing: border-box;\n      width: 100%;\n      border-top-style: solid;\n    }\n  }\n\n  .mdc-tab-indicator__content--icon {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      margin: 0 auto;\n    }\n  }\n\n  .mdc-tab-indicator--active .mdc-tab-indicator__content {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n    }\n  }\n\n  // Slide by default\n  .mdc-tab-indicator .mdc-tab-indicator__content {\n    @include feature-targeting.targets($feat-animation) {\n      transition: 250ms transform variables.$standard-curve-timing-function;\n    }\n  }\n\n  // --no-transition is applied in cases where styles need to be applied immediately to set up a transition\n  .mdc-tab-indicator--no-transition .mdc-tab-indicator__content {\n    @include feature-targeting.targets($feat-animation) {\n      transition: none;\n    }\n  }\n\n  .mdc-tab-indicator--fade .mdc-tab-indicator__content {\n    @include feature-targeting.targets($feat-animation) {\n      transition: 150ms opacity linear;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  .mdc-tab-indicator--active.mdc-tab-indicator--fade\n    .mdc-tab-indicator__content {\n    @include feature-targeting.targets($feat-animation) {\n      transition-delay: 100ms;\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n@mixin surface($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: relative;\n  }\n}\n\n@mixin underline-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-tab-indicator__content--underline {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin underline-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-tab-indicator__content--underline {\n    @include feature-targeting.targets($feat-structure) {\n      border-top-width: $height;\n    }\n  }\n}\n\n@mixin underline-top-corner-radius($radius, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-tab-indicator__content--underline {\n    @include feature-targeting.targets($feat-structure) {\n      border-top-left-radius: $radius;\n      border-top-right-radius: $radius;\n    }\n  }\n}\n\n@mixin icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-tab-indicator__content--icon {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin icon-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-tab-indicator__content--icon {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n      font-size: $height;\n    }\n  }\n}\n\n//\n// Private\n//\n\n@mixin base_($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include underline-color(primary, $query);\n  @include icon-color(secondary, $query);\n  @include underline-height(2px, $query);\n  @include icon-height(34px, $query);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: absolute;\n    top: 0;\n    left: 0;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    z-index: 1;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n@use 'sass:map';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// @example\n///   `annotate((noflip: true)) => /* @noflip */`\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations) {\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return $tracking / ($font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @return $px / 16px * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/theme/theme-color';\n\n$icon-size: 24px !default;\n$height: 48px !default;\n$stacked-height: 72px !default;\n$min-width: 90px !default;\n$horizontal-padding: 24px !default;\n$text-label-opacity: 0.6 !default;\n$icon-opacity: 0.54 !default;\n$text-label-color-default: rgba(\n  theme-color.prop-value(on-surface),\n  $text-label-opacity\n) !default;\n$icon-color-default: rgba(\n  theme-color.prop-value(on-surface),\n  $icon-opacity\n) !default;\n$text-label-color-active: primary !default;\n$icon-color-active: primary !default;\n$ripple-target: '.mdc-tab__ripple';\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/theme/theme';\n\n$include: true !default;\n\n/// Creates a rule that will be applied when a component is within the context\n/// of an RTL layout.\n///\n/// @example - scss\n/// .mdc-foo {\n///   padding-left: 4px;\n///\n///   @include rtl {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n/// }\n///\n/// @example - css\n///   .mdc-foo {\n///     padding-left: 4px;\n///   }\n///\n///   [dir=\"rtl\"] .mdc-foo,\n///   .mdc-foo[dir=\"rtl\"] {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n///\n/// Note that this mixin works by checking for an ancestor element with\n/// `[dir=\"rtl\"]`. As a result, nested `dir` values are not supported:\n///\n/// @example - html\n/// <html dir=\"rtl\">\n///   <!-- ... -->\n///   <div dir=\"ltr\">\n///     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n///   </div>\n/// </html>\n///\n/// In the future, selectors such as the `:dir` pseudo-class\n/// (http://mdn.io/css/:dir) will help us mitigate this.\n///\n/// @content Content to be styled in an RTL context.\n@mixin rtl() {\n  @if ($include) {\n    [dir='rtl'] &,\n    &[dir='rtl'] {\n      @content;\n    }\n  }\n}\n\n// Takes a base box-model property name (`margin`, `border`, `padding`, etc.) along with a\n// default direction (`left` or `right`) and value, and emits rules which apply the given value to the\n// specified direction by default and the opposite direction in RTL.\n//\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, left, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 8px;\n//   margin-right: 0;\n//\n//   @include rtl {\n//     margin-left: 0;\n//     margin-right: 8px;\n//   }\n// }\n// ```\n//\n// whereas:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, right, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 0;\n//   margin-right: 8px;\n//\n//   @include rtl {\n//     margin-left: 8px;\n//     margin-right: 0;\n//   }\n// }\n// ```\n//\n// You can also pass an optional 4th `$root-selector` argument which will be forwarded to `mdc-rtl`,\n// e.g. `@include rtl-reflexive-box(margin, left, 8px, '.mdc-component')`.\n//\n// Note that this function will always zero out the original value in an RTL context.\n// If you're trying to flip the values, use `mdc-rtl-reflexive-property()` instead.\n@mixin reflexive-box(\n  $base-property,\n  $default-direction,\n  $value,\n  $replace: null\n) {\n  @if (list.index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction: '#{$default-direction}'. Please specifiy either 'right' or 'left'.\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include reflexive-property(\n    $base-property,\n    $left-value,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n// <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-property(margin, auto, 12px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: auto;\n//   margin-right: 12px;\n//\n//   @include rtl {\n//     margin-left: 12px;\n//     margin-right: auto;\n//   }\n// }\n// ```\n//\n// An optional 4th `$root-selector` argument can be given, which will be passed to `mdc-rtl`.\n@mixin reflexive-property(\n  $base-property,\n  $left-value,\n  $right-value,\n  $replace: null\n) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include reflexive(\n    $prop-left,\n    $left-value,\n    $prop-right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes an argument specifying a horizontal position property (either 'left' or 'right') as well\n// as a value, and applies that value to the specified position in a LTR context, and flips it in a\n// RTL context. For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-position(left, 0);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 0;\n//   right: initial;\n//\n//   @include rtl {\n//     left: initial;\n//     right: 0;\n//   }\n// }\n// ```\n//\n// An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive-position($position-property, $value, $replace: null) {\n  @if (list.index((right, left), $position-property) == null) {\n    @error \"Invalid position #{position-property}. Please specifiy either right or left\";\n  }\n\n  // TODO: 'initial' is not supported in IE 11. https://caniuse.com/#feat=css-initial-value\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($position-property == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include reflexive(\n    left,\n    $left-value,\n    right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes pair of properties with values as arguments and flips it in RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive(left, 2px, right, 5px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 2px;\n//   right: 5px;\n//\n//   @include rtl {\n//     right: 2px;\n//     left: 5px;\n//   }\n// }\n// ```\n//\n// An optional fifth `$root-selector` argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $replace: null\n) {\n  $left-replace: null;\n  $right-replace: null;\n  @if $replace {\n    @if meta.type-of($left-value) == 'string' {\n      $left-replace: $replace;\n    }\n\n    @if meta.type-of($right-value) == 'string' {\n      $right-replace: $replace;\n    }\n\n    @if $left-replace == null and $right-replace == null {\n      @error 'mdc-rtl: $replace may only be used with strings but neither left nor right values are strings.';\n    }\n  }\n\n  @include _property($left-property, $left-value, $replace: $left-replace);\n  @include _property($right-property, $right-value, $replace: $right-replace);\n\n  @include rtl {\n    @include _property($left-property, $right-value, $replace: $right-replace);\n    @include _property($right-property, $left-value, $replace: $left-replace);\n  }\n}\n\n///\n/// Adds `@noflip` annotation when `$mdc-rtl-include` is true.\n///\n/// @param {String} $property\n/// @param {String} $value\n/// @param {Map} $replace\n///\n@mixin _property($property, $value, $replace: null) {\n  @include theme.property(\n    $property,\n    $value,\n    $replace: $replace,\n    $gss: (noflip: $include)\n  );\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use './ripple-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-ripple-surface {\n    @include surface($query: $query);\n    @include ripple-theme.states($query: $query);\n    @include radius-bounded($query: $query);\n    @include surface-styles($query: $query);\n  }\n\n  .mdc-ripple-surface[data-mdc-ripple-is-unbounded],\n  .mdc-ripple-upgraded--unbounded {\n    @include radius-unbounded($query: $query);\n    @include unbounded-styles($query: $query);\n  }\n}\n\n/// Sets all states (including hover, focus, press, activated and selected) with\n/// given color as base color.\n///\n/// This mixin is for internal use only. Use `ripple-theme.states($color)` mixin\n/// to set interactive states (hover, focus & press) color.\n///\n/// @param {Color|String} $color - Target base color. Can be valid CSS color or\n///     a color string literal (i.e., `primary`, `secondary`, etc).\n@mixin states-for-color($color, $query: feature-targeting.all()) {\n  @include ripple-theme.states($color, $query: $query);\n  @include ripple-theme.states-activated($color, $query: $query);\n  @include ripple-theme.states-selected($color, $query: $query);\n}\n\n@mixin surface-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: relative;\n    outline: none;\n    overflow: hidden;\n  }\n}\n\n@mixin unbounded-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    overflow: visible;\n  }\n}\n\n@mixin common($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // Ensure that styles needed by any component using MDC Ripple are emitted, but only once.\n  // (Every component using MDC Ripple imports these mixins, but doesn't necessarily import\n  // mdc-ripple.scss.)\n  @include feature-targeting.targets($feat-animation) {\n    @include base-mixins.emit-once('mdc-ripple/common/animation') {\n      @include keyframes_;\n    }\n  }\n}\n\n@mixin surface(\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $include-will-change: true // TODO(b/151931961): Remove once resolved\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    --mdc-ripple-fg-size: 0;\n    --mdc-ripple-left: 0;\n    --mdc-ripple-top: 0;\n    --mdc-ripple-fg-scale: 1;\n    --mdc-ripple-fg-translate-end: 0;\n    --mdc-ripple-fg-translate-start: 0;\n\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    // TODO(b/151931961): Remove the following block once resolved\n    @if $include-will-change {\n      will-change: transform, opacity;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: '';\n    }\n  }\n\n  #{$ripple-target}::before {\n    @include feature-targeting.targets($feat-animation) {\n      // Also transition background-color to avoid unnatural color flashes when toggling activated/selected state\n      transition: opacity ripple-theme.$states-wash-duration linear,\n        background-color ripple-theme.$states-wash-duration linear;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that the ripple wash for hover/focus states is displayed on top of positioned child elements\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, 1)\n      );\n    }\n  }\n\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, 0)\n      );\n    }\n  }\n\n  // Common styles for upgraded surfaces (some of these depend on custom properties set via JS or other mixins)\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::before {\n      @include feature-targeting.targets($feat-structure) {\n        transform: scale(var(--mdc-ripple-fg-scale, 1));\n      }\n    }\n\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-structure) {\n        top: 0;\n        /* @noflip */\n        left: 0;\n        transform: scale(0);\n        transform-origin: center center;\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--unbounded {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-structure) {\n        top: var(--mdc-ripple-top, 0);\n        /* @noflip */\n        left: var(--mdc-ripple-left, 0);\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--foreground-activation {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-animation) {\n        animation: mdc-ripple-fg-radius-in ripple-theme.$translate-duration\n            forwards,\n          mdc-ripple-fg-opacity-in ripple-theme.$fade-in-duration forwards;\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded--foreground-deactivation {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-animation) {\n        animation: mdc-ripple-fg-opacity-out ripple-theme.$fade-out-duration;\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        // Retain transform from mdc-ripple-fg-radius-in activation\n        transform: translate(var(--mdc-ripple-fg-translate-end, 0))\n          scale(var(--mdc-ripple-fg-scale, 1));\n      }\n    }\n  }\n}\n\n@mixin radius-bounded(\n  $radius: 100%,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-struture: feature-targeting.create-target($query, structure);\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-struture) {\n      top: calc(50% - #{$radius});\n      /* @noflip */\n      left: calc(50% - #{$radius});\n      width: $radius * 2;\n      height: $radius * 2;\n    }\n  }\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n  }\n}\n\n@mixin radius-unbounded(\n  $radius: 100%,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-struture: feature-targeting.create-target($query, structure);\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-struture) {\n      top: calc(50% - #{$radius / 2});\n      /* @noflip */\n      left: calc(50% - #{$radius / 2});\n      width: $radius;\n      height: $radius;\n    }\n  }\n\n  &.mdc-ripple-upgraded {\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        top: var(--mdc-ripple-top, calc(50% - #{$radius / 2}));\n        /* @noflip */\n        left: var(--mdc-ripple-left, calc(50% - #{$radius / 2}));\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-struture) {\n        width: var(--mdc-ripple-fg-size, $radius);\n        height: var(--mdc-ripple-fg-size, $radius);\n      }\n    }\n  }\n}\n\n// Common styles for a ripple target element.\n// Used for components which have an inner ripple target element.\n@mixin target-common($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    // Necessary for clicks on other inner elements (e.g. close icon in chip)\n    // to go through.\n    pointer-events: none;\n  }\n}\n\n@mixin keyframes_ {\n  @keyframes mdc-ripple-fg-radius-in {\n    from {\n      animation-timing-function: variables2.$standard-curve-timing-function;\n      // NOTE: For these keyframes, we do not need custom property fallbacks because they are only\n      // used in conjunction with `.mdc-ripple-upgraded`. Since MDCRippleFoundation checks to ensure\n      // that custom properties are supported within the browser before adding this class, we can\n      // safely use them without a fallback.\n      transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    }\n\n    to {\n      transform: translate(var(--mdc-ripple-fg-translate-end, 0))\n        scale(var(--mdc-ripple-fg-scale, 1));\n    }\n  }\n\n  @keyframes mdc-ripple-fg-opacity-in {\n    from {\n      animation-timing-function: linear;\n      opacity: 0;\n    }\n\n    to {\n      opacity: var(--mdc-ripple-fg-opacity, 0);\n    }\n  }\n\n  @keyframes mdc-ripple-fg-opacity-out {\n    from {\n      animation-timing-function: linear;\n      opacity: var(--mdc-ripple-fg-opacity, 0);\n    }\n\n    to {\n      opacity: 0;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n$deceleration-curve-timing-function: cubic-bezier(0, 0, 0.2, 1) !default;\n$standard-curve-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$acceleration-curve-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n$sharp-curve-timing-function: cubic-bezier(0.4, 0, 0.6, 1) !default;\n\n@function enter($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $deceleration-curve-timing-function;\n}\n\n@function exit-permanent($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $acceleration-curve-timing-function;\n}\n\n@function exit-temporary($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $sharp-curve-timing-function;\n}\n\n@function standard($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay $standard-curve-timing-function;\n}\n\n@function linear($name, $duration, $delay: 0ms) {\n  @return $name $duration $delay linear;\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:active:active';\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if not custom-properties.is-custom-prop($color) {\n    $color: custom-properties.create(\n      --mdc-ripple-color,\n      theme-color.get-custom-property($color)\n    );\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-color) {\n      @if color.alpha(theme-color.prop-value($color)) > 0 {\n        @include theme.property(background-color, $color);\n      } @else {\n        // If a color with 0 alpha is specified, don't render the ripple pseudo-elements at all.\n        // This avoids unnecessary transitions and overflow.\n        content: none;\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(--mdc-ripple-hover-opacity, $opacity)\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Note that this duration is only effective on focus, not blur\n  @include feature-targeting.targets($feat-animation) {\n    transition-duration: 75ms;\n  }\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(\n      opacity,\n      custom-properties.create(--mdc-ripple-focus-opacity, $opacity)\n    );\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  &:not(.mdc-ripple-upgraded) {\n    // Apply press additively by using the ::after pseudo-element\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-animation) {\n        transition: opacity $fade-out-duration linear;\n      }\n    }\n\n    &:active {\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition-duration: $fade-in-duration;\n        }\n\n        // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n        @include feature-targeting.targets($feat-color) {\n          @include theme.property(\n            opacity,\n            custom-properties.create(--mdc-ripple-press-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n\n  &.mdc-ripple-upgraded {\n    @include feature-targeting.targets($feat-color) {\n      --mdc-ripple-fg-opacity: var(--mdc-ripple-press-opacity, #{$opacity});\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin active() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/feature-targeting/feature-targeting';\n@use './css';\n@use './custom-properties';\n@use './gss';\n@use './keys';\n@use './replace';\n@use './theme-color';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  :root {\n    @include feature-targeting.targets($feat-color) {\n      @each $style in theme-color.get-theme-keys() {\n        @include custom-properties.declaration(\n          keys.create-custom-property($style)\n        );\n      }\n    }\n  }\n\n  @each $style in theme-color.get-theme-keys() {\n    @if $style != 'background' and $style != 'surface' {\n      .mdc-theme--#{$style} {\n        @include feature-targeting.targets($feat-color) {\n          @include property(color, $style, $important: true);\n        }\n      }\n    } @else {\n      .mdc-theme--#{$style} {\n        @include feature-targeting.targets($feat-color) {\n          @include property(background-color, $style);\n        }\n      }\n    }\n  }\n\n  // CSS rules for using primary and secondary (plus light/dark variants) as background colors.\n  @each $style in ('primary', 'secondary') {\n    .mdc-theme--#{$style}-bg {\n      @include feature-targeting.targets($feat-color) {\n        @include property(background-color, $style, $important: true);\n      }\n    }\n  }\n}\n\n/// Applies a dynamic value to the specified property. This mixin should be used\n/// in theme style mixins when setting properties.\n///\n/// The value may be any of the following:\n/// - a standard CSS value\n/// - a custom property Map, e.g. (varname: --mdc-foo, fallback: blue)\n/// - a Material theme key String, e.g. 'primary', 'on-primary'\n///\n/// @example\n///   @include theme.property(color, teal);\n///   @include theme.property(color, custom-properties.create(foo, blue));\n///   @include theme.property(color, primary);\n///\n/// A `$replace` Map parameter may be provided to replace key/value pairs for\n/// string values. This can be used to substitute parameters in complex string\n/// values such as `calc()` with custom properties.\n///\n/// @example\n///   @include theme.property(\n///     width,\n///     calc(foo + bar),\n///     $replace: (foo: custom-properties.create(foo), bar: 8px)\n///   );\n///\n/// Note: Material theme key Strings (e.g. `primary`) are not supported as\n/// replacement values.\n///\n/// @param {String} $property - The name of the CSS property.\n/// @param {String | Number | Color | List | Map} $value - The property's value.\n/// @param {Map} $gss - Optional Map of GSS annotations to set.\n/// @param {Map} $replace - An optional Map of replacement key/value pairs if\n///     the `$value` is a string.\n/// @param {Bool} $important - Set to true to add an `!important` rule. Defaults\n///     to false.\n@mixin property(\n  $property,\n  $value,\n  $gss: (),\n  $replace: null,\n  $important: false\n) {\n  @if custom-properties.is-custom-prop($value) {\n    // $value is a custom property Map\n    @include custom-properties.declaration(\n      $property,\n      $value,\n      $gss: $gss,\n      $important: $important\n    );\n  } @else if keys.is-key($value) {\n    // $value is a key String\n    $custom-prop: keys.create-custom-property($value);\n\n    @if theme-color.is-theme-key($value) {\n      // Determine if we need to use a compile-time updated value to support\n      // Angular.\n      $key: $value;\n      // (changed: Bool, value: *)\n      $result: theme-color.deprecated-get-global-theme-key-value-if-changed(\n        $key\n      );\n\n      @if map.get($result, changed) {\n        // $mdc-theme-property-values was changed at compile time. Use the\n        // global value instead. Otherwise if it was not changed, continue\n        // using the key store normally.\n        $custom-prop: keys.create-custom-property($key);\n        $custom-prop: custom-properties.set-fallback(\n          $custom-prop,\n          map.get($result, value)\n        );\n      }\n    }\n\n    @include custom-properties.declaration(\n      $property,\n      $custom-prop,\n      $gss: $gss,\n      $important: $important\n    );\n  } @else {\n    // $value is a standard CSS value\n    $fallback: null;\n    @if $replace {\n      // If any replacements are null, treat the entire value as null (do not\n      // emit anything).\n      @each $name, $replacement in $replace {\n        @if $replacement == null {\n          $value: null;\n        }\n      }\n    }\n\n    @if $replace and $value {\n      @if meta.type-of($replace) != 'map' {\n        @error 'mdc-theme: Invalid replacement #{$replace}. Must be a Map.';\n      }\n\n      $replace-map-fallback: ();\n      $replace-map-value: ();\n      $needs-fallback: false;\n      @each $name, $replacement in $replace {\n        @if custom-properties.is-custom-prop($replacement) {\n          $replace-value: custom-properties.get-declaration-value($replacement);\n          $replace-fallback: custom-properties.get-declaration-fallback(\n            $replacement\n          );\n          @if $replace-fallback {\n            $needs-fallback: true;\n          }\n\n          $replace-map-value: map.set(\n            $replace-map-value,\n            $name,\n            $replace-value\n          );\n          $replace-map-fallback: map.set(\n            $replace-map-fallback,\n            $name,\n            $replace-fallback\n          );\n        } @else {\n          $replace-map-value: map.set($replace-map-value, $name, $replacement);\n          $replace-map-fallback: map.set(\n            $replace-map-fallback,\n            $name,\n            $replacement\n          );\n        }\n      }\n\n      @if meta.type-of($value) == 'string' {\n        @if $needs-fallback {\n          $fallback: replace.replace-string($value, $replace-map-fallback);\n        }\n        $value: replace.replace-string($value, $replace-map-value);\n      } @else if meta.type-of($value) == 'list' {\n        @if $needs-fallback {\n          $fallback: replace.replace-list($value, $replace-map-fallback);\n        }\n        $value: replace.replace-list($value, $replace-map-value);\n      } @else {\n        @error 'mdc-theme: Invalid replacement value #{$value}. $replace may only be used with string or list values.';\n      }\n    }\n\n    @include css.declaration(\n      $property,\n      $value,\n      $fallback-value: $fallback,\n      $gss: $gss,\n      $important: $important\n    );\n  }\n}\n\n// @deprecated use the `property()` mixin instead\n@mixin prop($property, $style, $important: false) {\n  @include property($property, $style, $important: $important);\n}\n\n/// Validates keys in provided theme configuration by comparing with original\n/// theme configuration.\n/// Use this in component's `theme()` mixin implementation to validate if\n/// provided theme configuration has supported theme configuration keys.\n/// @param {Map} $origin-theme - Original theme configuration in Sass map format\n///     that has all supported keys.\n/// @param {Map} $custom-theme - Provided theme configuration in Sass map format\n///     that should be validated against `$origin-theme`.\n/// @examples\n///     @mixin theme($theme) {\n///       @include theme.validate-keys($light-theme, $theme);\n///\n///       // ...\n///     }\n@mixin validate-keys($origin-theme, $custom-theme, $test-only: false) {\n  $origin-keys: map.keys($origin-theme);\n  $unsupported-keys: ();\n  $unsupported-custom-prop-keys: ();\n\n  @each $key, $value in $custom-theme {\n    @if (not list.index($origin-keys, $key)) {\n      $unsupported-keys: list.append(\n        $unsupported-keys,\n        $key,\n        $separator: comma\n      );\n    }\n\n    $is-prop: custom-properties.is-custom-prop($value) or\n      custom-properties.is-custom-prop-string($value);\n    @if $is-prop {\n      $unsupported-custom-prop-keys: list.append(\n        $unsupported-custom-prop-keys,\n        $key,\n        $separator: comma\n      );\n    }\n  }\n\n  @if list.length($unsupported-keys) > 0 {\n    $error-message: 'Unsupported keys found: #{$unsupported-keys}. Expected one of: #{$origin-keys}.';\n\n    @if $test-only {\n      content: $error-message;\n    } @else {\n      @error $error-message;\n    }\n  }\n\n  @if list.length($unsupported-custom-prop-keys) > 0 {\n    $error-message: 'Custom properties are not supported for theme map keys: #{$unsupported-custom-prop-keys}';\n\n    @if $test-only {\n      content: $error-message;\n    } @else {\n      @error $error-message;\n    }\n  }\n}\n","@use 'functions' as functions;\n@use 'sass:map';\n\n$white: rgba(#fff, 1);\n$black: rgba(#000, 0.87);\n///////////////////////////\n///////  Media Query ///////\n////////////////////////////\n\n// TODO: document breakpoint rationale\n\n// Dev discussion on GitHub\n// https://github.platforms.engineering/element/element-core/issues/169\n\n/* stylelint-disable scss/media-feature-value-dollar-variable */\n@mixin for-size($size) {\n    @if $size == phone-only {\n        @media (max-width: 599px) {\n            @content;\n        }\n    } @else if $size == tablet-portrait-up {\n        @media (min-width: 600px) {\n            @content;\n        }\n    } @else if $size == tablet-landscape-up {\n        @media (min-width: 720px) {\n            @content;\n        }\n    } @else if $size == desktop-up {\n        @media (min-width: 840px) {\n            @content;\n        }\n    } @else if $size == mid-desktop-up {\n        @media (min-width: 1024px) {\n            @content;\n        }\n    } @else if $size == big-desktop-up {\n        @media (min-width: 1440px) {\n            @content;\n        }\n    }\n}\n/* stylelint-enable scss/media-feature-value-dollar-variable */\n\n//////////////////////////////\n///////  Theme Utility ///////\n//////////////////////////////\n\n@mixin on-primary() {\n    .lmnt-theme-primary-bg {\n        @content;\n    }\n}\n\n@mixin on-secondary() {\n    .lmnt-theme-secondary-bg {\n        @content;\n    }\n}\n\n@mixin on-danger() {\n    .lmnt-theme-danger-bg {\n        @content;\n    }\n}\n\n//////////////////////////////////////\n///////  On Background Classes ///////\n//////////////////////////////////////\n\n// Note: utility classes for `background-color` and `color`\n// Note: foreground `color` is determined by `color-contrast-value-check`\n@mixin onBackgroundColorClasses(\n    $color,\n    $value,\n    $themeBlack: $black,\n    $themeWhite: $white\n) {\n    .lmnt-theme-#{$color}--bg, // Keeping both class names until v6.  For consistency with the DK kit we will have the double hyphen\n    .lmnt-theme-#{$color}-bg {\n        background-color: $value;\n        color: functions.color-contrast-value-check(\n            $value,\n            $blackText: $themeBlack,\n            $whiteText: $themeWhite\n        );\n    }\n\n    .lmnt-theme-#{$color} {\n        color: $value;\n    }\n}\n\n@mixin onClasses($color, $value) {\n    @if str-index($color, '-stroke') {\n        .lmnt-theme-#{$color} {\n            border-color: $value;\n            border-bottom-color: $value;\n        }\n    } @else {\n        .lmnt-theme-#{$color} {\n            color: $value;\n        }\n    }\n}\n\n@mixin colorRamp($map, $themeBlack: $black, $themeWhite: $white) {\n    @each $color, $value in $map {\n        @include onBackgroundColorClasses(\n            $color: $color,\n            $value: $value,\n            $themeBlack: $themeBlack,\n            $themeWhite: $themeWhite\n        );\n    }\n}\n\n@mixin mapUtilityColors($class, $color, $value) {\n    #{$class}#{$color} {\n        background-color: #{map.get($value, 'surface')};\n        color: #{map.get($value, 'on-surface')};\n    }\n}\n\n@mixin mapCommonColors($class, $color, $value) {\n    #{$class}#{$color} {\n        background-color: #{map.get($value, 'surface')};\n        color: #{map.get($value, 'on-color')};\n    }\n}\n\n@mixin mapOutlineColors($class, $color, $value) {\n    #{$class}#{$color} {\n        border-color: #{map.get($value, 'on-surface')};\n        color: #{map.get($value, 'on-surface')};\n    }\n}\n\n@mixin gradientRamp($gradient-colors) {\n    @each $colorName, $colorVal in $gradient-colors {\n        @if str-index($colorName, 'to-top') {\n            .lmnt-theme--bg-linear-gradient-#{$colorName} {\n                background: linear-gradient(\n                    0deg,\n                    hsla(0, 0, 0, 0) 0,\n                    rgba($colorVal, 0.8) 100%\n                );\n                color: functions.color-contrast-value-check(rgba($colorVal, 0.8));\n            }\n        } @else {\n            .lmnt-theme--bg-linear-gradient-#{$colorName} {\n                background: linear-gradient(\n                    180deg,\n                    hsla(0, 0, 0, 0) 0,\n                    rgba($colorVal, 0.8) 100%\n                );\n                color: functions.color-contrast-value-check(rgba($colorVal, 0.8));\n            }\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '@material/theme/mdc-theme';\n@use 'sass-hex-rgb' as rgb;\n@use 'functions' as functions;\n@use 'mixins' as mixins;\n@use '@material/elevation' as elevation;\n\n$assetsPath: '..' !default;\n\n///////////////////////////\n//////  Font Stacks  //////\n///////////////////////////\n\n// NOTE: double-quote string wrapper needed to preserve font-family single-quotes\n$Roboto: \"'Roboto', 'Arial Narrow', helvetica, arial, sans-serif\";\n\n//////////////////////\n//////  Colors  //////\n//////////////////////\n\n$athens-gray: #f4f6f8;\n$black: #000;\n$dark-charcoal: #4d4d4d;\n$dusty-gray: #9a9a9a;\n$mine-shaft: #333;\n$white: #fff;\n$wild-sand: #f5f5f5;\n\n$lmnt-black-rgb: rgb.toValues($black);\n$lmnt-white-rgb: rgb.toValues($white);\n////////////////////////\n//////  Emphasis  //////\n////////////////////////\n\n$emphasis-active-black: 0.87;\n$emphasis-active: 1;\n$emphasis-completed: 0.6;\n$emphasis-disabled: 0.38;\n$emphasis-dragged: 0.08;\n$emphasis-focus--alt: 0.24;\n$emphasis-focus: 0.12;\n$emphasis-high-black: 0.87;\n$emphasis-high: 1;\n$emphasis-highlighted: 0.24;\n$emphasis-hover--alt: 0.08;\n$emphasis-hover: 0.04;\n$emphasis-inactive: 0.6;\n$emphasis-low: 0.38;\n$emphasis-med: 0.6;\n$emphasis-pressed--alt: 0.32;\n$emphasis-pressed: 0.16;\n$emphasis-resting: 0.08;\n$emphasis-selected: 0.08;\n$emphasis-stroke: 0.12;\n$emphasis-stroke-dark: 0.24;\n$emphasis-icon-in-component: 0.54;\n\n// these are the reverse of the above\n$emphasis-on-surface-active-black: calc(1 - #{$emphasis-active-black});\n$emphasis-on-surface-active: calc(1 - #{$emphasis-active});\n$emphasis-on-surface-completed: calc(1 - #{$emphasis-completed});\n$emphasis-on-surface-disabled: calc(1 - #{$emphasis-disabled});\n$emphasis-on-surface-dragged: calc(1 - #{$emphasis-dragged});\n$emphasis-on-surface-focus--alt: calc(1 - #{$emphasis-focus--alt});\n$emphasis-on-surface-focus: calc(1 - #{$emphasis-focus});\n$emphasis-on-surface-high-black: calc(1 - #{$emphasis-high-black});\n$emphasis-on-surface-high: calc(1 - #{$emphasis-high});\n$emphasis-on-surface-highlighted: calc(1 - #{$emphasis-highlighted});\n$emphasis-on-surface-hover-alt: calc(1 - #{$emphasis-hover--alt});\n$emphasis-on-surface-hover: calc(1 - #{$emphasis-hover});\n$emphasis-on-surface-inactive: calc(1 - #{$emphasis-inactive});\n$emphasis-on-surface-low: calc(1 - #{$emphasis-low});\n$emphasis-on-surface-med: calc(1 - #{$emphasis-med});\n$emphasis-on-surface-pressed--alt: calc(1 - #{$emphasis-pressed--alt});\n$emphasis-on-surface-pressed: calc(1 - #{$emphasis-pressed});\n$emphasis-on-surface-resting: calc(1 - #{$emphasis-resting});\n$emphasis-on-surface-selected: calc(1 - #{$emphasis-selected});\n$emphasis-on-surface-stroke: calc(1 - #{$emphasis-stroke});\n$emphasis-on-surface-stroke-dark: calc(1 - #{$emphasis-stroke-dark});\n$emphasis-on-unknown-white: 0.54;\n\n/////////////////////\n//////  Theme  //////\n/////////////////////\n\n$primaryMap: (\n    primary-50: #f1edf8,\n    primary-100: #c7b7e4,\n    primary-200: #b9a5de,\n    primary-300: #9381d1,\n    primary-400: #825dc4,\n    primary-500: #673ab7,\n    primary-600: #553096,\n    primary-700: #4b2b86,\n    primary-800: #422575,\n    primary-900: #261643\n) !default;\n$secondaryMap: (\n    secondary-50: #edf8ff,\n    secondary-100: #caecff,\n    secondary-200: #b9e5ff,\n    secondary-300: #96d9ff,\n    secondary-400: #74ccff,\n    secondary-500: #40baff,\n    secondary-600: #3599d1,\n    secondary-700: #2f88ba,\n    secondary-800: #23668c,\n    secondary-900: #18445d\n) !default;\n$successMap: (\n    success-50: #eeffef,\n    success-100: #d3ffd7,\n    success-200: #a9f6af,\n    success-300: #6fef7a,\n    success-400: #29e539,\n    success-500: #13c545,\n    success-600: #0ea01a,\n    success-700: #01830c,\n    success-800: #075a0e,\n    success-900: #053709\n) !default;\n$dangerMap: (\n    danger-50: #ffeaed,\n    danger-100: #ffccce,\n    danger-200: #ee9894,\n    danger-300: #e3716a,\n    danger-400: #ec5145,\n    danger-500: #ef4227,\n    danger-600: #e13727,\n    danger-700: #cf2d22,\n    danger-800: #c2261b,\n    danger-900: #b3190d\n) !default;\n$ancillaryMap: (\n    ancillary-100: #000,\n    ancillary-200: #000,\n    ancillary-300: #000,\n    ancillary-400: #000,\n    ancillary-500: #000,\n    ancillary-600: #000,\n    ancillary-700: #000,\n    ancillary-800: #000,\n    ancillary-900: #000\n) !default;\n$dataVizComparativeMap: (\n    dataVizComparative-50: #240f67,\n    dataVizComparative-100: #2d72c4,\n    dataVizComparative-200: #89c9b7,\n    dataVizComparative-300: #785e9f,\n    dataVizComparative-400: #3b8ec8,\n    dataVizComparative-500: #b7dbbc,\n    dataVizComparative-600: #4153af,\n    dataVizComparative-700: #47a3c4,\n    dataVizComparative-800: #dfeccb,\n    dataVizComparative-900: #6332ad\n);\n$dataVizSequential1Map: (\n    dataVizSequential1-50: #261643,\n    dataVizSequential1-100: #422575,\n    dataVizSequential1-200: #6540aa,\n    dataVizSequential1-300: #7e52d0,\n    dataVizSequential1-400: #9a75dd,\n    dataVizSequential1-500: #af8bef,\n    dataVizSequential1-600: #c6a6ff,\n    dataVizSequential1-700: #d8c1ff,\n    dataVizSequential1-800: #e8dbff,\n    dataVizSequential1-900: #f5efff\n);\n$dataVizSequential2Map: (\n    dataVizSequential2--50: #052d44,\n    dataVizSequential2--100: #08517b,\n    dataVizSequential2--200: #1774aa,\n    dataVizSequential2--300: #319bd8,\n    dataVizSequential2--400: #40baff,\n    dataVizSequential2--500: #75cdff,\n    dataVizSequential2--600: #97e0ff,\n    dataVizSequential2--700: #a9f0ff,\n    dataVizSequential2--800: #c3fbff,\n    dataVizSequential2--900: #ddfffd\n);\n\n@include mixins.colorRamp($primaryMap);\n@include mixins.colorRamp($secondaryMap);\n@include mixins.colorRamp($ancillaryMap);\n@include mixins.colorRamp($dataVizComparativeMap);\n@include mixins.colorRamp($dataVizSequential1Map);\n@include mixins.colorRamp($dataVizSequential2Map);\n\n$lmnt-theme-primary: #673ab7 !default;\n$lmnt-theme-primary-variant: #4b2b86 !default;\n$lmnt-theme-secondary: #40baff !default;\n$lmnt-theme-secondary-variant: #2f88ba !default;\n$lmnt-theme-danger: #cf2d22 !default;\n$lmnt-theme-danger-variant: #b3190d !default;\n$lmnt-theme-danger-alt: $wild-sand !default;\n$lmnt-theme-success: #0ea01a !default;\n$lmnt-theme-success-variant: #13c545 !default;\n\n$onClassesMap: (\n    on-background: functions.color-contrast-value-check($white),\n    on-surface: functions.color-contrast-value-check($white),\n    on-primary: functions.color-contrast-value-check($lmnt-theme-primary),\n    on-primary-variant: functions.color-contrast-value-check($lmnt-theme-primary-variant),\n    primary-on-surface: $lmnt-theme-primary,\n    on-secondary: functions.color-contrast-value-check($lmnt-theme-secondary),\n    on-secondary-variant:\n        functions.color-contrast-value-check($lmnt-theme-secondary-variant),\n    secondary-on-surface: #23668c,\n    on-danger: functions.color-contrast-value-check($lmnt-theme-danger),\n    on-danger-alt: #cf2d22,\n    on-danger-variant: functions.color-contrast-value-check($lmnt-theme-danger-variant),\n    danger-on-surface: #cf2d22,\n    success-on-surface: #01830c,\n    on-success: functions.color-contrast-value-check($lmnt-theme-success)\n) !default;\n$lmnt-primary-on-surface-rgb: rgb.toValues(map.get($onClassesMap, 'primary-on-surface'));\n\n$onSurfaceMap: (\n    on-surface-active: rgba(map.get($onClassesMap, 'on-surface'), $emphasis-high-black),\n    on-surface-inactive: rgba(map.get($onClassesMap, 'on-surface'), $emphasis-inactive),\n    on-surface-disabled: rgba(map.get($onClassesMap, 'on-surface'), $emphasis-disabled),\n    on-surface-stroke: rgba(map.get($onClassesMap, 'on-surface'), $emphasis-stroke),\n    on-surface-base: rgba(map.get($onClassesMap, 'on-surface'), $emphasis-high)\n) !default;\n\n$onPrimaryMap: (\n    on-primary-active: rgba(map.get($onClassesMap, 'on-primary'), $emphasis-high-black),\n    on-primary-inactive: rgba(map.get($onClassesMap, 'on-primary'), $emphasis-inactive),\n    on-primary-disabled: rgba(map.get($onClassesMap, 'on-primary'), $emphasis-disabled),\n    on-primary-stroke: rgba(map.get($onClassesMap, 'on-primary'), $emphasis-stroke),\n    on-primary-base: rgba(map.get($onClassesMap, 'on-primary'), $emphasis-high)\n) !default;\n\n$onSecondaryMap: (\n    on-secondary-active:\n        rgba(map.get($onClassesMap, 'on-secondary'), $emphasis-high-black),\n    on-secondary-inactive:\n        rgba(map.get($onClassesMap, 'on-secondary'), $emphasis-inactive),\n    on-secondary-disabled:\n        rgba(map.get($onClassesMap, 'on-secondary'), $emphasis-disabled),\n    on-secondary-stroke: rgba(map.get($onClassesMap, 'on-secondary'), $emphasis-stroke),\n    on-secondary-base: rgba(map.get($onClassesMap, 'on-secondary'), $emphasis-high)\n) !default;\n\n$onSuccessMap: (\n    on-success-active: rgba(map.get($onClassesMap, 'on-success'), $emphasis-high-black),\n    on-success-inactive: rgba(map.get($onClassesMap, 'on-success'), $emphasis-inactive),\n    on-success-disabled: rgba(map.get($onClassesMap, 'on-success'), $emphasis-disabled),\n    on-success-stroke: rgba(map.get($onClassesMap, 'on-success'), $emphasis-stroke),\n    on-success-base: rgba(map.get($onClassesMap, 'on-success'), $emphasis-high)\n) !default;\n\n$onDangerMap: (\n    on-danger-active: rgba(map.get($onClassesMap, 'on-danger'), $emphasis-high-black),\n    on-danger-inactive: rgba(map.get($onClassesMap, 'on-danger'), $emphasis-inactive),\n    on-danger-disabled: rgba(map.get($onClassesMap, 'on-danger'), $emphasis-disabled),\n    on-danger-stroke: rgba(map.get($onClassesMap, 'on-danger'), $emphasis-stroke),\n    on-danger-base: rgba(map.get($onClassesMap, 'on-danger'), $emphasis-high)\n) !default;\n\n$onUnknownBlackClassesMap: (\n    on-unknown-black-active: rgba(0, 0, 0, $emphasis-high-black),\n    on-unknown-black-inactive: rgba(0, 0, 0, $emphasis-inactive),\n    on-unknown-black-disabled: rgba(0, 0, 0, $emphasis-disabled),\n    on-unknown-black-stroke: rgba(0, 0, 0, $emphasis-stroke),\n    on-unknown-black-base: rgba(0, 0, 0, $emphasis-high)\n) !default;\n\n$onUnknownWhiteClassesMap: (\n    on-unknown-white-active: rgba(255, 255, 255, $emphasis-high),\n    on-unknown-white-inactive: rgba(255, 255, 255, $emphasis-on-unknown-white),\n    on-unknown-white-disabled: rgba(255, 255, 255, $emphasis-disabled),\n    on-unknown-white-stroke: rgba(255, 255, 255, $emphasis-stroke),\n    on-unknown-white-base: rgba(255, 255, 255, 1)\n) !default;\n\n//////////////////\n/// GRADIENTS ///\n/////////////////\n\n$gradient-colors: (\n    'primary-to-bottom': $lmnt-theme-primary,\n    'primary-dark-to-bottom': map.get($primaryMap, 'primary-900'),\n    'primary-darker-to-bottom': darken(map.get($primaryMap, 'primary-900'), 10),\n    'secondary-to-bottom': $lmnt-theme-secondary,\n    'secondary-dark-to-bottom': map.get($secondaryMap, 'secondary-900'),\n    'secondary-darker-to-bottom': darken(map.get($secondaryMap, 'secondary-900'), 10),\n    'primary-to-top': $lmnt-theme-primary,\n    'primary-dark-to-top': map.get($primaryMap, 'primary-900'),\n    'primary-darker-to-top': darken(map.get($primaryMap, 'primary-900'), 10),\n    'secondary-to-top': $lmnt-theme-secondary,\n    'secondary-dark-to-top': map.get($secondaryMap, 'secondary-900'),\n    'secondary-darker-to-top': darken(map.get($secondaryMap, 'secondary-900'), 10),\n    'black-to-bottom': $black,\n    'black-to-top': $black,\n    'white-to-bottom': $white,\n    'white-to-top': $white\n) !default;\n\n@include mixins.gradientRamp($gradient-colors);\n\n////////////////////\n/// Breakpoints ///\n///////////////////\n\n$breakpointsMap: (\n    'mobile-min': 0,\n    'mobile-max': 599px,\n    'tablet-sm-min': 600px,\n    'tablet-sm-max': 719px,\n    'tablet-lg-min': 720px,\n    'tablet-lg-max': 839px,\n    'desktop-sm-min': 840px,\n    'desktop-sm-max': 1023px,\n    'desktop-lg-min': 1024px,\n    'desktop-lg-max': 1439px,\n    'desktop-xl-min': 1440px,\n    'content-max-width-md': 776px,\n    'content-max-width-lg': 1052px,\n    'content-max-width-xl': 1176px\n) !default;\n\n:root,\n.lmnt {\n    --lmnt-theme-on-background: #{map.get($onClassesMap, 'on-background')};\n    --lmnt-theme-on-surface: #{map.get($onClassesMap, 'on-surface')};\n    --lmnt-theme-primary-font: #{$Roboto};\n\n    // Element Theme Defaults - Background\n    --lmnt-theme-background: #{$white};\n\n    // Element Theme Defaults - Surface\n    --lmnt-theme-surface: #{$white};\n    --lmnt-theme-surface-variant: #{$wild-sand};\n}\n\n.lmnt {\n    // Element Theme Defaults - Font\n    --lmnt-theme-primary-font: #{$Roboto};\n    --lmnt-theme-secondary-font: #{$Roboto};\n\n    --lmnt-black-rgb: #{$lmnt-black-rgb};\n    --lmnt-white-rgb: #{$lmnt-white-rgb};\n    // Element Theme Defaults - Primary\n    --lmnt-theme-primary: #{$lmnt-theme-primary};\n    --lmnt-theme-on-primary: #{map.get($onClassesMap, 'on-primary')};\n    --lmnt-theme-primary-variant: #{$lmnt-theme-primary-variant};\n    --lmnt-theme-on-primary-variant: #{map.get($onClassesMap, 'on-primary-variant')};\n    --lmnt-theme-primary-on-surface: #{map.get($onClassesMap, 'primary-on-surface')};\n    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};\n\n    // Element Theme Defaults - Secondary\n    --lmnt-theme-secondary: #{$lmnt-theme-secondary};\n    --lmnt-theme-on-secondary: #{map.get($onClassesMap, 'on-secondary')};\n    --lmnt-theme-secondary-variant: #2f88ba;\n    --lmnt-theme-on-secondary-variant: #{map.get($onClassesMap, 'on-secondary-variant')};\n    --lmnt-theme-secondary-on-surface: #{map.get($onClassesMap, 'secondary-on-surface')};\n\n    // Element Theme Defaults - Danger\n    --lmnt-theme-danger: #{$lmnt-theme-danger};\n    --lmnt-theme-on-danger: #{map.get($onClassesMap, 'on-danger')};\n    --lmnt-theme-danger-alt: #{$wild-sand};\n    --lmnt-theme-on-danger-alt: #{map.get($onClassesMap, 'on-danger-alt')};\n    --lmnt-theme-danger-variant: #{$lmnt-theme-danger-variant};\n    --lmnt-theme-on-danger-variant: #{map.get($onClassesMap, 'on-danger-variant')};\n    --lmnt-theme-danger-on-surface: #{map.get($onClassesMap, 'danger-on-surface')};\n\n    // Element Theme Defaults - Success\n    --lmnt-theme-success: #{$lmnt-theme-success};\n    --lmnt-theme-on-success: #{map.get($onClassesMap, 'on-success')};\n    --lmnt-theme-success-variant: #{$lmnt-theme-success-variant};\n    --lmnt-theme-success-on-surface: #{map.get($onClassesMap, 'success-on-surface')};\n\n    // On surface rgb\n    $lmnt-primary-on-surface-rgb: rgb.toValues(\n        map.get($onClassesMap, 'primary-on-surface')\n    );\n    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};\n\n    $lmnt-secondary-on-surface-rgb: rgb.toValues(\n        map.get($onClassesMap, 'secondary-on-surface')\n    );\n    --lmnt-secondary-on-surface-rgb: #{$lmnt-secondary-on-surface-rgb};\n\n    $lmnt-danger-on-surface-rgb: rgb.toValues(\n        map.get($onClassesMap, 'danger-on-surface')\n    );\n    --lmnt-danger-on-surface-rgb: #{$lmnt-danger-on-surface-rgb};\n\n    $lmnt-success-on-surface-rgb: rgb.toValues(\n        map.get($onClassesMap, 'danger-on-surface')\n    );\n    --lmnt-success-on-surface-rgb: #{$lmnt-success-on-surface-rgb};\n\n    // On color rgb\n    $lmnt-on-primary-rgb: rgb.toValues(map.get($onClassesMap, 'on-primary'));\n    --lmnt-on-primary-rgb: #{$lmnt-on-primary-rgb};\n\n    $lmnt-on-secondary-rgb: rgb.toValues(map.get($onClassesMap, 'on-secondary'));\n    --lmnt-on-secondary-rgb: #{$lmnt-on-secondary-rgb};\n\n    $lmnt-on-danger-rgb: rgb.toValues(map.get($onClassesMap, 'on-danger'));\n    --lmnt-on-danger-rgb: #{$lmnt-on-danger-rgb};\n\n    $lmnt-on-success-rgb: rgb.toValues(map.get($onClassesMap, 'on-success'));\n    --lmnt-on-success-rgb: #{$lmnt-on-success-rgb};\n\n    // Element Breakpoints\n    @each $name, $point in $breakpointsMap {\n        --lmnt-theme-breakpoint-#{$name}: #{$point};\n    }\n\n    // Element Primary Color Ramp\n    @each $name, $color in $primaryMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n    // Element Secondary Color Ramp\n    @each $name, $color in $secondaryMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n    // Element Success Color Ramp\n    @each $name, $color in $successMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n    // Element Danger Color Ramp\n    @each $name, $color in $dangerMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n    // Element Ancillary Color Ramp\n    @each $name, $color in $ancillaryMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n    // Element Data Viz Sequential 1 Color Ramp\n    @each $name, $color in $dataVizSequential1Map {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n    // Element Data Viz Sequential 2 Color Ramp\n    @each $name, $color in $dataVizSequential2Map {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n    // Element Data Viz Comparative Color Ramp\n    @each $name, $color in $dataVizComparativeMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n\n    // Element on Colors\n\n    // Element On Surface Color Ramp\n    @each $name, $color in $onSurfaceMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n\n    // Element On Primary Color Ramp\n    @each $name, $color in $onPrimaryMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n\n    // Element On Secondary Color Ramp\n    @each $name, $color in $onSecondaryMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n\n    // Element On Success Color Ramp\n    @each $name, $color in $onSuccessMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n\n    // Element On Danger Color Ramp\n    @each $name, $color in $onDangerMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n\n    // Element On Unknown Black Color Ramp\n    @each $name, $color in $onUnknownBlackClassesMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n\n    // Element On Unknown White Color Ramp\n    @each $name, $color in $onUnknownWhiteClassesMap {\n        --lmnt-theme-#{$name}: #{$color};\n    }\n\n    // white/black\n    --lmnt-theme-black: #{$black};\n    --lmnt-theme-white: #{$white};\n    --lmnt-theme-icon-in-component: rgba(#{$black}, #{$emphasis-icon-in-component});\n\n    // Emphasis\n    --lmnt-theme-emphasis-active-black: #{$emphasis-active-black};\n    --lmnt-theme-emphasis-active: #{$emphasis-active};\n    --lmnt-theme-emphasis-completed: #{$emphasis-completed};\n    --lmnt-theme-emphasis-disabled: #{$emphasis-disabled};\n    --lmnt-theme-emphasis-dragged: #{$emphasis-dragged};\n    --lmnt-theme-emphasis-focus: #{$emphasis-focus};\n    --lmnt-theme-emphasis-high-black: #{$emphasis-high-black};\n    --lmnt-theme-emphasis-high: #{$emphasis-high};\n    --lmnt-theme-emphasis-highlighted: #{$emphasis-highlighted};\n    --lmnt-theme-emphasis-hover--alt: #{$emphasis-hover--alt};\n    --lmnt-theme-emphasis-hover: #{$emphasis-hover};\n    --lmnt-theme-emphasis-inactive: #{$emphasis-inactive};\n    --lmnt-theme-emphasis-low: #{$emphasis-low};\n    --lmnt-theme-emphasis-med: #{$emphasis-med};\n    --lmnt-theme-emphasis-pressed--alt: #{$emphasis-pressed--alt};\n    --lmnt-theme-emphasis-pressed: #{$emphasis-pressed};\n    --lmnt-theme-emphasis-resting: #{$emphasis-resting};\n    --lmnt-theme-emphasis-focus--alt: #{$emphasis-focus--alt};\n    --lmnt-theme-emphasis-selected: #{$emphasis-selected};\n    --lmnt-theme-emphasis-stroke: #{$emphasis-stroke};\n    --lmnt-theme-emphasis-stroke-dark: #{$emphasis-stroke-dark};\n    --lmnt-theme-emphasis-icon-in-component: #{$emphasis-icon-in-component};\n\n    // these are the reverse of the above\n    --lmnt-theme-emphasis-on-surface-active-black: #{$emphasis-on-surface-active-black};\n    --lmnt-theme-emphasis-on-surface-active: #{$emphasis-on-surface-active};\n    --lmnt-theme-emphasis-on-surface-completed: #{$emphasis-on-surface-completed};\n    --lmnt-theme-emphasis-on-surface-disabled: #{$emphasis-on-surface-disabled};\n    --lmnt-theme-emphasis-on-surface-dragged: #{$emphasis-on-surface-dragged};\n    --lmnt-theme-emphasis-on-surface-focus--alt: #{$emphasis-on-surface-focus--alt};\n    --lmnt-theme-emphasis-on-surface-focus: #{$emphasis-on-surface-focus};\n    --lmnt-theme-emphasis-on-surface-high-black: #{$emphasis-on-surface-high-black};\n    --lmnt-theme-emphasis-on-surface-high: #{$emphasis-on-surface-high};\n    --lmnt-theme-emphasis-on-surface-highlighted: #{$emphasis-on-surface-highlighted};\n    --lmnt-theme-emphasis-on-surface-hover-alt: #{$emphasis-on-surface-hover-alt};\n    --lmnt-theme-emphasis-on-surface-hover: #{$emphasis-on-surface-hover};\n    --lmnt-theme-emphasis-on-surface-inactive: #{$emphasis-on-surface-inactive};\n    --lmnt-theme-emphasis-on-surface-low: #{$emphasis-on-surface-low};\n    --lmnt-theme-emphasis-on-surface-med: #{$emphasis-on-surface-med};\n    --lmnt-theme-emphasis-on-surface-pressed-alt: #{$emphasis-on-surface-pressed--alt};\n    --lmnt-theme-emphasis-on-surface-resting: #{$emphasis-on-surface-resting};\n    --lmnt-theme-emphasis-on-surface-selected: #{$emphasis-on-surface-selected};\n    --lmnt-theme-emphasis-on-surface-stroke: #{$emphasis-on-surface-stroke};\n    --lmnt-theme-emphasis-on-surface-stroke-dark: #{$emphasis-on-surface-stroke-dark};\n\n    ///////////////////////////\n    //////  Material   ////////\n    ///////////////////////////\n\n    // MIGRATION: these CSS variables will be included in all component stylesheets\n    // QUESTION: are MDC side-effects acceptable in all contexts?\n    // POTENTIAL: move this stuff to theme.scss ?\n    // POTENTIAL: add top level class wrapper for Element and avoid .lmnt\n\n    // MDC Theme CSS Variables\n    --mdc-typography-font-family: var(--lmnt-theme-primary-font);\n    --mdc-theme-primary: var(--lmnt-theme-primary);\n    --mdc-theme-on-primary: var(--lmnt-theme-on-primary);\n    --mdc-theme-secondary: var(--lmnt-theme-secondary);\n    --mdc-theme-on-secondary: var(--lmnt-theme-on-secondary);\n    --mdc-theme-background: var(--lmnt-theme-background);\n    --mdc-theme-surface: var(--lmnt-theme-surface);\n    --mdc-theme-on-surface: var(--lmnt-theme-on-surface);\n    --mdc-theme-error: var(--lmnt-theme-danger);\n    --mdc-theme-on-error: var(--lmnt-theme-on-danger);\n\n    // Default Button Elevation\n    --lmnt-button-box-shadow: #{elevation.elevation-box-shadow(2)};\n\n    // Default Card Elevation & Shape Radius\n    --lmnt-theme--shape-radius: 4px;\n    --lmnt-card-box-shadow: #{elevation.elevation-box-shadow(1)};\n\n    --mdc-theme-text-primary-on-background: var(--lmnt-theme-on-surface);\n    --mdc-theme-text-primary-on-dark: var(--lmnt-theme-on-unknown-white);\n    --mdc-theme-text-primary-on-light: var(--lmnt-theme-on-unknown-black);\n    --mdc-theme-text-secondary-on-background: rgba(var(--lmnt-black-rgb), 0.54);\n    --mdc-theme-text-disabled-on-background: var(--lmnt-theme-on-unknown-black-disabled);\n    --mdc-theme-text-disabled-on-dark: var(--lmnt-theme-on-unknown-white-disabled);\n    --mdc-theme-text-disabled-on-light: var(--lmnt-theme-on-unknown-black-disabled);\n    --mdc-theme-text-icon-on-background: var(--lmnt-theme-on-surface);\n    --mdc-theme-text-icon-on-dark: var(--lmnt-theme-on-unknown-white);\n    --mdc-theme-text-icon-on-light: var(--lmnt-theme-on-unknown-black);\n\n    // NOTE: These Material CSS variables exist and have no direct Element counterparts yet\n    // --mdc-theme-text-secondary-on-dark: ;\n    // --mdc-theme-text-secondary-on-light: ;\n    // --mdc-theme-text-hint-on-background: ;\n    // --mdc-theme-text-hint-on-dark: ;\n    // --mdc-theme-text-hint-on-light: ;\n}\n","////////////////////////////\n//////  Typography   ///////\n////////////////////////////\n@use 'sass:math';\n@use '@material/typography/mdc-typography';\n@use '@material/typography/_typography' as typo;\n@use '../../common/mixins';\n@use '../../common/functions' as functions;\n@use '../../common/element.core';\n\n// MIGRATION: move `font` utility features to this file?\n\n//////////////////////\n//////  Themes  //////\n//////////////////////\n:root,\n.lmnt {\n    // Text Link Styles\n    --lmnt-typography-link-color: var(--lmnt-theme-primary-variant);\n    --lmnt-typography-link-font-weight: bold;\n    --lmnt-typography-link-text-decoration: none;\n\n    // TODO: deprecate styling based on .lmnt-theme-primary-bg or `.lmnt-theme-secondary-bg` in favor of variant styling\n    --lmnt-typography-link-color-on-primary: inherit;\n    --lmnt-typography-link-color-on-secondary: inherit;\n\n    // NOTE: Material defaults listed here for reference. Used in themes primarily. Update only as needed.\n\n    // Display 1\n    // --mdc-typography-headline1-font-family: Roboto;\n    // --mdc-typography-headline1-font-size: 6rem; // 96px\n    // --mdc-typography-headline1-font-weight: 300;\n    --mdc-typography-headline1-letter-spacing: #{functions.toRem(-1.25)};\n    --mdc-typography-headline1-line-height: #{functions.toRem(116)};\n    // --mdc-typography-headline1-text-decoration: inherit;\n    // --mdc-typography-headline1-text-transform: inherit;\n\n    // Display 2\n    // --mdc-typography-headline2-font-family: Roboto;\n    // --mdc-typography-headline2-font-size: 3.75rem; // 60px\n    // --mdc-typography-headline2-font-weight: 300;\n    // --mdc-typography-headline2-letter-spacing: -0.0083333333em; // -0.5px\n    --mdc-typography-headline2-line-height: #{functions.toRem(72)};\n    // --mdc-typography-headline2-text-decoration: inherit;\n    // --mdc-typography-headline2-text-transform: inherit;\n\n    // Display 3\n    // --mdc-typography-headline3-font-family: Roboto;\n    // --mdc-typography-headline3-font-size: 3rem; // 48px\n    // --mdc-typography-headline3-font-weight: 400;\n    // --mdc-typography-headline3-letter-spacing: normal;\n    --mdc-typography-headline3-line-height: #{functions.toRem(56)};\n    // --mdc-typography-headline3-text-decoration: inherit;\n    // --mdc-typography-headline3-text-transform: inherit;\n\n    // Display 4\n    // --mdc-typography-headline4-font-family: Roboto;\n    // --mdc-typography-headline4-font-size: 2.125rem; // 34px\n    // --mdc-typography-headline4-font-weight: 400;\n    // --mdc-typography-headline4-letter-spacing: 0.0073529412em;\n    // --mdc-typography-headline4-line-height: 2.5rem; // 40px\n    // --mdc-typography-headline4-text-decoration: inherit;\n    // --mdc-typography-headline4-text-transform: inherit;\n\n    // Display 5\n    // --mdc-typography-headline5-font-family: Roboto;\n    // --mdc-typography-headline5-font-size: 1.5rem; // 24px\n    // --mdc-typography-headline5-font-weight: 400;\n    // --mdc-typography-headline5-letter-spacing: normal;\n    --mdc-typography-headline5-line-height: #{functions.toRem(28)};\n    // --mdc-typography-headline5-text-decoration: inherit;\n    // --mdc-typography-headline5-text-transform: inherit;\n\n    // Display 6\n    // --mdc-typography-headline6-font-family: Roboto;\n    // --mdc-typography-headline6-font-size: 1.25rem; // 20px\n    // --mdc-typography-headline6-font-weight: 500;\n    // --mdc-typography-headline6-letter-spacing: 0.0125em; // 0.25px\n    --mdc-typography-headline6-line-height: #{functions.toRem(24)};\n    // --mdc-typography-headline6-text-decoration: inherit;\n    // --mdc-typography-headline6-text-transform: inherit;\n\n    // Subtitle 1\n    // --mdc-typography-subtitle1-font-family: Roboto;\n    // --mdc-typography-subtitle1-font-size: 1rem; // 16px\n    // --mdc-typography-subtitle1-font-weight: 400;\n    --mdc-typography-subtitle1-letter-spacing: normal;\n    --mdc-typography-subtitle1-line-height: #{functions.toRem(24)};\n    // --mdc-typography-subtitle1-text-decoration: inherit;\n    // --mdc-typography-subtitle1-text-transform: inherit;\n    --lmnt-typography--subtitle1-bold-font-weight: 700;\n\n    // Subtitle 2\n    // --mdc-typography-subtitle2-font-family: Roboto;\n    // --mdc-typography-subtitle2-font-size: 0.875rem; // 14px\n    // --mdc-typography-subtitle2-font-weight: 500;\n    --mdc-typography-subtitle2-letter-spacing: normal;\n    --mdc-typography-subtitle2-line-height: #{functions.toRem(20)};\n    // --mdc-typography-subtitle2-text-decoration: inherit;\n    // --mdc-typography-subtitle2-text-transform: inherit;\n    --lmnt-typography--subtitle2-bold-font-weight: 700;\n\n    // Body 1\n    // --mdc-typography-body1-font-family: Roboto;\n    // --mdc-typography-body1-font-size: 1rem; // 16px\n    // --mdc-typography-body1-font-weight: 400;\n    --mdc-typography-body1-letter-spacing: normal;\n    --mdc-typography-body1-line-height: #{functions.toRem(28)};\n    // --mdc-typography-body1-text-decoration: inherit;\n    // --mdc-typography-body1-text-transform: inherit;\n    --lmnt-typography--body1-bold-font-weight: 700;\n\n    // Body 2\n    // --mdc-typography-body2-font-family: Roboto;\n    // --mdc-typography-body2-font-size: 0.875rem; // 14px\n    // --mdc-typography-body2-font-weight: 400;\n    // --mdc-typography-body2-letter-spacing: 0.0178571429em; // 0.25px\n    // --mdc-typography-body2-line-height: 1.25rem; // 20px\n    // --mdc-typography-body2-text-decoration: inherit;\n    // --mdc-typography-body2-text-transform: inherit;\n    --lmnt-typography--body2-bold-font-weight: 700;\n\n    // Caption\n    // --mdc-typography-caption-font-family: Roboto;\n    // --mdc-typography-caption-font-size: 0.75rem; // 12px\n    // --mdc-typography-caption-font-weight: 400;\n    // --mdc-typography-caption-letter-spacing: 0.0333333333em; // 0.4px\n    --mdc-typography-caption-line-height: #{functions.toRem(16)}; //16px\n    // --mdc-typography-caption-text-decoration: inherit;\n    // --mdc-typography-caption-text-transform: inherit;\n    --lmnt-typography--caption-bold-font-weight: 500;\n\n    // Button\n    // --mdc-typography-button-font-family: Roboto;\n    // --mdc-typography-button-font-size: 0.875rem; // 14px\n    // --mdc-typography-button-font-weight: 500;\n    // --mdc-typography-button-letter-spacing: 0.0892857143em; // 1.25px\n    --mdc-typography-button-line-height: #{functions.toRem(16)};\n    // --mdc-typography-button-text-decoration: none;\n    // --mdc-typography-button-text-transform: uppercase;\n\n    // Overline\n    // --mdc-typography-overline-font-family: Roboto;\n    // --mdc-typography-overline-font-size: 0.75rem; // 12px\n    // --mdc-typography-overline-font-weight: 500;\n    // --mdc-typography-overline-letter-spacing: 0.1666666667em; // 2px\n    --mdc-typography-overline-line-height: #{functions.toRem(16)}; // 16px\n    // --mdc-typography-overline-text-decoration: none;\n    // --mdc-typography-overline-text-transform: uppercase;\n}\n\n.mdc-typography--subtitle1-bold {\n    @include typo.typography('subtitle1');\n    font-weight: var(--lmnt-typography--subtitle1-bold-font-weight);\n}\n\n.mdc-typography--subtitle2-bold {\n    @include typo.typography('subtitle2');\n    font-weight: var(--lmnt-typography--body1-bold-font-weight);\n}\n\n.mdc-typography--body1-bold {\n    @include typo.typography('body1');\n    font-weight: var(--lmnt-typography--subtitle2-bold-font-weight);\n}\n\n.mdc-typography--body2-bold {\n    @include typo.typography('body2');\n    font-weight: var(--lmnt-typography--body2-bold-font-weight);\n}\n\n.mdc-typography--caption-bold {\n    @include typo.typography('caption');\n    font-weight: var(--lmnt-typography--caption-bold-font-weight);\n}\n\n.lmnt-theme-link,\na.mdc-typography,\na {\n    color: var(--lmnt-typography-link-color);\n    font-weight: var(--lmnt-typography-link-font-weight);\n    cursor: pointer;\n    text-decoration: var(--lmnt-typography-link-text-decoration);\n}\n\n// TODO: deprecate styling based on `.lmnt-theme-primary-bg` in favor of variant styling\n@include mixins.on-primary {\n    a {\n        color: var(--typography-link-color-on-primary);\n    }\n}\n\n// TODO: deprecate styling based on `.lmnt-theme-secondary-bg` in favor of variant styling\n@include mixins.on-secondary {\n    a {\n        color: var(--lmnt-typography-link-color-on-secondary);\n    }\n}\n","///////////////////////\n//////  Badge  ///////\n///////////////////////\n\n@use '../../common/element.core';\n@use '../../common/mixins';\n@use '../../common/functions' as functions;\n@use '../typography/typography.scss';\n\n//////////////////////\n//////  Colors  //////\n//////////////////////\n\n.lmnt {\n    --lmnt-badge-padding-left: 8px;\n    --lmnt-badge-padding-right: 8px;\n    --lmnt-badge-padding-top: 0;\n    --lmnt-badge-padding-bottom: 0;\n    --lmnt-badge-min-width: 8px;\n    --lmnt-badge-min-height: 8px;\n    --lmnt-badge-max-height: 8px;\n    --lmnt-badge-font-weight: 700;\n\n    &.lmnt-badge {\n        align-items: center;\n        border-radius: var(--lmnt-badge-shape-radius);\n        display: flex;\n        font-weight: var(--lmnt-badge-font-weight);\n        max-height: var(--lmnt-badge-max-height);\n        min-height: var(--lmnt-badge-min-height);\n        min-width: var(--lmnt-badge-min-width);\n        padding-bottom: var(--lmnt-badge-padding-top);\n        padding-left: var(--lmnt-badge-padding-left);\n        padding-right: var(--lmnt-badge-padding-right);\n        padding-top: var(--lmnt-badge-padding-top);\n        width: fit-content;\n    }\n}\n","///////////////////////\n//////  Badge  ///////\n///////////////////////\n\n@use '../../common/element.core';\n@use '../../common/mixins';\n@use '../../common/functions' as functions;\n@use './badge-base';\n\n//////////////////////\n//////  Colors  //////\n//////////////////////\n\n.lmnt {\n    &.lmnt-badge {\n        &.lmnt-badge--notification {\n            --lmnt-badge-notification-border-color: var(--lmnt-theme-surface);\n            --lmnt-badge-padding-left: 6px;\n            --lmnt-badge-padding-right: 6px;\n            --lmnt-badge-padding-top: 0;\n            --lmnt-badge-padding-bottom: 0;\n            --lmnt-badge-shape-radius: 12px;\n            border: 2px solid var(--lmnt-badge-notification-border-color);\n            padding: 0;\n\n            &.lmnt-badge--notification-badge-counter {\n                padding-left: var(--lmnt-badge-padding-left);\n                padding-right: var(--lmnt-badge-padding-right);\n                padding-top: var(--lmnt-badge-padding-top);\n                padding-bottom: var(--lmnt-badge-padding-bottom);\n                --lmnt-badge-min-height: 16px;\n                --lmnt-badge-max-height: unset;\n            }\n\n            &.lmnt-badge--notification-primary {\n                background-color: var(--lmnt-theme-primary);\n                color: var(--lmnt-theme-on-primary);\n            }\n\n            &.lmnt-badge--notification-secondary {\n                background-color: var(--lmnt-theme-secondary);\n                color: var(--lmnt-theme-on-secondary);\n            }\n\n            &.lmnt-badge--notification-danger {\n                background-color: var(--lmnt-theme-danger);\n                color: var(--lmnt-theme-on-danger);\n            }\n\n            &.lmnt-badge--notification-success {\n                background-color: var(--lmnt-theme-success);\n                color: var(--lmnt-theme-on-success);\n            }\n        }\n    }\n}\n","@use 'sass:map';\n\n$utilityColorMap: (\n    'blue': (\n        surface: #c2e0ff,\n        on-surface: #0b3f73\n    ),\n    'gray': (\n        surface: #e6e6e6,\n        on-surface: #474747\n    ),\n    'green': (\n        surface: #b8f2c7,\n        on-surface: #084d19\n    ),\n    'orange': (\n        surface: #ffe6b2,\n        on-surface: #593f09\n    ),\n    'purple': (\n        surface: #dfcbf2,\n        on-surface: #400b73\n    ),\n    'red': (\n        surface: #ffd6d6,\n        on-surface: #730b0b\n    ),\n    'teal': (\n        surface: #b8f2ed,\n        on-surface: #084d47\n    ),\n    'yellow': (\n        surface: #f2f2b6,\n        on-surface: #404006\n    )\n);\n\n@mixin badgeClasses($color, $value) {\n    .lmnt-utility-#{$color} {\n        background-color: #{map.get($value, 'surface')};\n        color: #{map.get($value, 'on-surface')};\n    }\n\n    :root,\n    .lmnt {\n        --lmnt-utility-#{$color}-surface: #{map.get($value, 'surface')};\n        --lmnt-utility-#{$color}-on-surface: #{map.get($value, 'on-surface')};\n    }\n}\n\n@each $color, $value in $utilityColorMap {\n    @include badgeClasses($color: $color, $value: $value);\n}\n","@use '../../common/element.core';\n@use '../utility/color/utility-colors.scss' as utility;\n@use './_icon-mixins' as mixins;\n@use '../badge/notification-badge.scss';\n\n$black: #000;\n$white: #fff;\n$emphasis-low: 0.38;\n\n.lmnt-icon-pointer {\n    cursor: pointer;\n}\n\n.lmnt-icon--fill {\n    border-radius: 50%;\n    padding: 8px;\n}\n\n.lmnt-icon--fill-danger-alt {\n    background-color: var(--lmnt-theme-danger-alt);\n    color: var(--lmnt-theme-on-danger-alt);\n}\n\n.lmnt-icon--fill-danger {\n    background-color: var(--lmnt-theme-danger);\n    color: var(--lmnt-theme-on-danger);\n}\n\n.lmnt-icon--fill-primary {\n    background-color: var(--lmnt-theme-primary);\n    color: var(--lmnt-theme-on-primary);\n}\n\n.lmnt-icon--fill-secondary {\n    background-color: var(--lmnt-theme-secondary);\n    color: var(--lmnt-theme-on-secondary);\n}\n\n.lmnt-icon--color-primary {\n    color: var(--lmnt-theme-primary);\n}\n\n.lmnt-icon--color-secondary {\n    color: var(--lmnt-theme-secondary);\n}\n\n.lmnt-icon--color-on-dark {\n    color: $white;\n}\n\n.lmnt-icon--fill-muted {\n    background-color: rgba($black, 0.12);\n    color: var(--lmnt-theme-on-secondary);\n}\n\n@each $color, $value in utility.$utilityColorMap {\n    @include mixins.iconUtilityClasses($color: $color, $value: $value);\n}\n\n.lmnt {\n    .lmnt-icon--medium {\n        font-size: 24px;\n        height: 24px;\n        width: 24px;\n    }\n}\n\n.lmnt {\n    .lmnt-icon--xlarge {\n        font-size: 48px;\n        height: 48px;\n        width: 48px;\n    }\n}\n\n.lmnt {\n    .lmnt-icon--large {\n        font-size: 36px;\n        height: 36px;\n        width: 36px;\n    }\n}\n\n.lmnt {\n    .lmnt-icon--small {\n        font-size: 18px;\n        height: 18px;\n        width: 18px;\n    }\n}\n\n.lmnt {\n    .lmnt-icon--xsmall {\n        font-size: 12px;\n        height: 12px;\n        width: 12px;\n    }\n}\n\n.lmnt-icon--notification-badge {\n    position: relative;\n\n    .lmnt-badge--notification {\n        position: absolute;\n        top: -3px;\n        left: 17px;\n\n        &.lmnt-badge--notification-badge-counter {\n            top: -6px;\n            left: 15px;\n        }\n    }\n}\n","@use 'sass:map';\n\n@mixin iconUtilityClasses($color, $value) {\n    .lmnt-icon--utility-#{$color} {\n        background-color: #{map.get($value, 'surface')};\n        color: #{map.get($value, 'on-surface')};\n    }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/theme/custom-properties';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use './elevation-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @for $z-value from 0 through 24 {\n    .mdc-elevation--z#{$z-value} {\n      @include elevation-theme.elevation($z-value, $query: $query);\n    }\n  }\n\n  .mdc-elevation-transition {\n    @include feature-targeting.targets($feat-animation) {\n      transition: elevation-theme.transition-value();\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      will-change: elevation-theme.$property;\n    }\n  }\n}\n\n///\n/// Called once per application to set up the global default elevation styles.\n///\n@mixin overlay-common($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-structure) {\n      @include base-mixins.emit-once('mdc-elevation/common/structure') {\n        position: absolute;\n        border-radius: inherit;\n        pointer-events: none;\n\n        @include theme.property(\n          opacity,\n          custom-properties.create(--mdc-elevation-overlay-opacity, 0)\n        );\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      @include base-mixins.emit-once('mdc-elevation/common/animation') {\n        transition: elevation-theme.overlay-transition-value();\n      }\n    }\n\n    @include base-mixins.emit-once('mdc-elevation/common/color') {\n      $fill-color: custom-properties.create(\n        --mdc-elevation-overlay-color,\n        elevation-theme.$overlay-color\n      );\n      @include elevation-theme.overlay-fill-color($fill-color, $query: $query);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/theme/custom-properties';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n\n$baseline-color: black !default;\n$umbra-opacity: 0.2 !default;\n$penumbra-opacity: 0.14 !default;\n$ambient-opacity: 0.12 !default;\n\n$umbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 2px 1px -1px',\n  2: '0px 3px 1px -2px',\n  3: '0px 3px 3px -2px',\n  4: '0px 2px 4px -1px',\n  5: '0px 3px 5px -1px',\n  6: '0px 3px 5px -1px',\n  7: '0px 4px 5px -2px',\n  8: '0px 5px 5px -3px',\n  9: '0px 5px 6px -3px',\n  10: '0px 6px 6px -3px',\n  11: '0px 6px 7px -4px',\n  12: '0px 7px 8px -4px',\n  13: '0px 7px 8px -4px',\n  14: '0px 7px 9px -4px',\n  15: '0px 8px 9px -5px',\n  16: '0px 8px 10px -5px',\n  17: '0px 8px 11px -5px',\n  18: '0px 9px 11px -5px',\n  19: '0px 9px 12px -6px',\n  20: '0px 10px 13px -6px',\n  21: '0px 10px 13px -6px',\n  22: '0px 10px 14px -6px',\n  23: '0px 11px 14px -7px',\n  24: '0px 11px 15px -7px',\n) !default;\n\n$penumbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 1px 0px',\n  2: '0px 2px 2px 0px',\n  3: '0px 3px 4px 0px',\n  4: '0px 4px 5px 0px',\n  5: '0px 5px 8px 0px',\n  6: '0px 6px 10px 0px',\n  7: '0px 7px 10px 1px',\n  8: '0px 8px 10px 1px',\n  9: '0px 9px 12px 1px',\n  10: '0px 10px 14px 1px',\n  11: '0px 11px 15px 1px',\n  12: '0px 12px 17px 2px',\n  13: '0px 13px 19px 2px',\n  14: '0px 14px 21px 2px',\n  15: '0px 15px 22px 2px',\n  16: '0px 16px 24px 2px',\n  17: '0px 17px 26px 2px',\n  18: '0px 18px 28px 2px',\n  19: '0px 19px 29px 2px',\n  20: '0px 20px 31px 3px',\n  21: '0px 21px 33px 3px',\n  22: '0px 22px 35px 3px',\n  23: '0px 23px 36px 3px',\n  24: '0px 24px 38px 3px',\n) !default;\n\n$ambient-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 3px 0px',\n  2: '0px 1px 5px 0px',\n  3: '0px 1px 8px 0px',\n  4: '0px 1px 10px 0px',\n  5: '0px 1px 14px 0px',\n  6: '0px 1px 18px 0px',\n  7: '0px 2px 16px 1px',\n  8: '0px 3px 14px 2px',\n  9: '0px 3px 16px 2px',\n  10: '0px 4px 18px 3px',\n  11: '0px 4px 20px 3px',\n  12: '0px 5px 22px 4px',\n  13: '0px 5px 24px 4px',\n  14: '0px 5px 26px 4px',\n  15: '0px 6px 28px 5px',\n  16: '0px 6px 30px 5px',\n  17: '0px 6px 32px 5px',\n  18: '0px 7px 34px 6px',\n  19: '0px 7px 36px 6px',\n  20: '0px 8px 38px 7px',\n  21: '0px 8px 40px 7px',\n  22: '0px 8px 42px 7px',\n  23: '0px 9px 44px 8px',\n  24: '0px 9px 46px 8px',\n) !default;\n\n// The css property used for elevation. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$property: box-shadow !default;\n\n// The default color for the elevation overlay.\n$overlay-color: #fff;\n\n// The css property used for elevation overlay transitions. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a `will-change` rule.\n$overlay-property: opacity !default;\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: animation-variables.$standard-curve-timing-function !default;\n\n///\n/// Sets the elevation transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$property} #{$duration} #{$easing};\n}\n\n///\n/// Sets the elevation overlay transition value.\n///\n/// @param {String} $duration - The duration of the transition.\n/// @param {String} $easing - The easing function for the transition.\n/// @return {String}\n///\n@function overlay-transition-value(\n  $duration: $transition-duration,\n  $easing: $transition-timing-function\n) {\n  @return #{$overlay-property} #{$duration} #{$easing};\n}\n\n// Returns the correct box-shadow specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@function elevation-box-shadow(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0\n) {\n  @if meta.type-of($z-value) != number or not math.is-unitless($z-value) {\n    @error \"$z-value must be a unitless number, but received '#{$z-value}'\";\n  }\n\n  @if $z-value < 0 or $z-value > 24 {\n    @error \"$z-value must be between 0 and 24, but received '#{$z-value}'\";\n  }\n\n  $color: theme-color.prop-value($color);\n\n  $umbra-z-value: map.get($umbra-map, $z-value);\n  $penumbra-z-value: map.get($penumbra-map, $z-value);\n  $ambient-z-value: map.get($ambient-map, $z-value);\n\n  $umbra-color: rgba($color, $umbra-opacity + $opacity-boost);\n  $penumbra-color: rgba($color, $penumbra-opacity + $opacity-boost);\n  $ambient-color: rgba($color, $ambient-opacity + $opacity-boost);\n\n  $box-shadow: (\n    #{'#{$umbra-z-value} #{$umbra-color}'},\n    #{'#{$penumbra-z-value} #{$penumbra-color}'},\n    #{$ambient-z-value} $ambient-color\n  );\n\n  @return $box-shadow;\n}\n\n@function get-elevation($level) {\n  @return (box-shadow: elevation-box-shadow($level));\n}\n\n///\n/// Sets the shadow of the element.\n///\n/// @param {String} $box-shadow - The shadow to apply to the element.\n///\n@mixin shadow($box-shadow, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    /* @alternate */\n    box-shadow: $box-shadow;\n  }\n}\n\n///\n/// Sets the elevation overlay surface required positioning.\n///\n@mixin overlay-surface-position($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    /* @alternate */\n    position: relative;\n  }\n}\n\n///\n/// Sets the dimensions of the elevation overlay, including positioning and sizing.\n///\n/// @param {Number} $width - The width of the elevation overlay\n/// @param {Number} [$height] - The height of the elevation overlay\n/// @param {Boolean} [$has-content-sizing] - Set to false if the container has no content sizing\n///\n@mixin overlay-dimensions(\n  $width,\n  $height: $width,\n  $has-content-sizing: true,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n\n      @if $has-content-sizing {\n        top: 0;\n        /* @noflip */\n        left: 0;\n      } @else {\n        top: 50%;\n        /* @noflip */\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n    }\n  }\n}\n\n///\n/// Sets the elevation overlay fill color.\n/// Expected to be called directly on the elevation overlay element.\n///\n/// @param {Color} $color - The color of the elevation overlay.\n///\n@mixin overlay-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n///\n/// Sets the elevation overlay opacity.\n/// Expected to be called from a parent element.\n///\n/// @param {Number} $opacity - The opacity of the elevation overlay.\n///\n@mixin overlay-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-elevation-overlay {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n// Applies the correct CSS rules to an element to give it the elevation specified by $z-value.\n// The $z-value must be between 0 and 24.\n// If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use\n// $opacity-boost.\n@mixin elevation(\n  $z-value,\n  $color: $baseline-color,\n  $opacity-boost: 0,\n  $query: feature-targeting.all()\n) {\n  $box-shadow: elevation-box-shadow(\n    $z-value,\n    $color: $color,\n    $opacity-boost: $opacity-boost\n  );\n\n  @include shadow($box-shadow, $query: $query);\n}\n","////////////////////////////////\n/////  Utility: Elevation  /////\n////////////////////////////////\n@use '@material/elevation/elevation' as elevation;\n\n@include elevation.core-styles;\n\n// NOTE: the values for elevation come from the Element Design Kit :the_more_you_know:\n$black: #000;\n\n.lmnt {\n    --lmnt-elevation--outlined-border-color: #{rgba($black, 0.12)};\n    --lmnt-elevation--outlined-border-color-on-primary: var(--lmnt-theme-on-primary);\n    --lmnt-elevation--border-radius: 8px;\n}\n\n$box-shadow-color: #000;\n$elevation-01dp: (\n    0 1px 1px 0 rgba($box-shadow-color, 0.14),\n    0 2px 1px -1px rgba($box-shadow-color, 0.12),\n    0 1px 3px 0 rgba($box-shadow-color, 0.2)\n);\n$elevation-02dp: (\n    0px 3px 1px -2px rgba($box-shadow-color, 0.12),\n    0px 2px 2px rgba($box-shadow-color, 0.14),\n    0px 1px 5px rgba($box-shadow-color, 0.2)\n);\n$elevation-03dp: (\n    0px 3px 3px -2px rgba($box-shadow-color, 0.12),\n    0px 3px 4px rgba($box-shadow-color, 0.14),\n    0px 1px 8px rgba($box-shadow-color, 0.2)\n);\n$elevation-04dp: (\n    0px 2px 4px -1px rgba($box-shadow-color, 0.2),\n    0px 4px 5px rgba($box-shadow-color, 0.14),\n    0px 1px 10px rgba($box-shadow-color, 0.12)\n);\n$elevation-06dp: (\n    0px 3px 5px -1px rgba($box-shadow-color, 0.2),\n    0px 6px 10px rgba($box-shadow-color, 0.14),\n    0px 1px 18px rgba($box-shadow-color, 0.12)\n);\n$elevation-08dp: (\n    0px 8px 10px 1px rgba($box-shadow-color, 0.14),\n    0px 3px 14px 2px rgba($box-shadow-color, 0.12),\n    0px 5px 5px -3px rgba($box-shadow-color, 0.2)\n);\n$elevation-09dp: (\n    0px 9px 12px 1px rgba($box-shadow-color, 0.14),\n    0px 3px 16px 2px rgba($box-shadow-color, 0.12),\n    0px 5px 6px -3px rgba($box-shadow-color, 0.2)\n);\n$elevation-12dp: (\n    0px 12px 17px 2px rgba($box-shadow-color, 0.14),\n    0px 5px 22px 4px rgba($box-shadow-color, 0.12),\n    0px 7px 8px -4px rgba($box-shadow-color, 0.2)\n);\n$elevation-16dp: (\n    0px 16px 24px 2px rgba($box-shadow-color, 0.14),\n    0px 6px 30px 5px rgba($box-shadow-color, 0.12),\n    0px 8px 10px -5px rgba($box-shadow-color, 0.2)\n);\n$elevation-24dp: (\n    0px 24px 38px 3px rgba($box-shadow-color, 0.14),\n    0px 9px 46px 8px rgba($box-shadow-color, 0.12),\n    0px 11px 15px -7px rgba($box-shadow-color, 0.2)\n);\n\n.lmnt-theme-elevation-00dp {\n    box-shadow: none;\n}\n\n.lmnt-theme-elevation-01dp {\n    box-shadow: $elevation-01dp;\n}\n\n.lmnt-theme-elevation-02dp {\n    box-shadow: $elevation-02dp;\n}\n\n.lmnt-theme-elevation-03dp {\n    box-shadow: $elevation-03dp;\n}\n\n.lmnt-theme-elevation-04dp {\n    box-shadow: $elevation-04dp;\n}\n\n.lmnt-theme-elevation-06dp {\n    box-shadow: $elevation-06dp;\n}\n\n.lmnt-theme-elevation-08dp {\n    box-shadow: $elevation-08dp;\n}\n\n.lmnt-theme-elevation-09dp {\n    box-shadow: $elevation-09dp;\n}\n\n.lmnt-theme-elevation-12dp {\n    box-shadow: $elevation-12dp;\n}\n\n.lmnt-theme-elevation-16dp {\n    box-shadow: $elevation-16dp;\n}\n\n.lmnt-theme-elevation-24dp {\n    box-shadow: $elevation-24dp;\n}\n\n.lmnt-elevation--padding-standard {\n    padding: 1rem;\n}\n\n.lmnt-elevation--padding-dense {\n    padding: 0.5rem;\n}\n\n.lmnt-elevation--padding-airy {\n    padding: 1.5rem;\n}\n\n.lmnt-elevation--rounded {\n    border-radius: var(--lmnt-elevation--border-radius);\n}\n\n.lmnt-elevation--outlined {\n    border-color: var(--lmnt-elevation--outlined-border-color);\n    border-style: solid;\n    border-width: 1px;\n}\n"],"sourceRoot":""}