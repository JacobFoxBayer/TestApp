// NOTE: Color Ramps only require SCSS color values for contrast calculations
@use 'sass:map';
@use 'sass-hex-rgb' as rgb;
@use '../common/mixins' as mixins;
@use '../common/element.core' as element;
@use '../common/functions' as functions;

//////////////////////
//////  Colors  //////
//////////////////////

$lmnt-theme-primary: #af5900;
$lmnt-theme-primary-variant: #cf7418;
$lmnt-theme-secondary: #006944;
$lmnt-theme-secondary-variant: #4a9f82;

$primaryMap: (
    primary-50: #fbf3ea,
    primary-100: #f7e7d7,
    primary-200: #efcfb0,
    primary-300: #e3ad76,
    primary-400: #da964f,
    primary-500: #cf7418,
    primary-600: #bf6607,
    primary-700: #af5900,
    primary-800: #a25302,
    primary-900: #8f4700
);

$secondaryMap: (
    secondary-50: #e7f1ee,
    secondary-100: #b9d5cc,
    secondary-200: #8bbaaa,
    secondary-300: #6eab96,
    secondary-400: #4a9f82,
    secondary-500: #2b8d6a,
    secondary-600: #0c8057,
    secondary-700: #08744e,
    secondary-800: #006944,
    secondary-900: #045137
);

$successMap: (
    success-50: #eeffef,
    success-100: #d3ffd7,
    success-200: #a9f6af,
    success-300: #6fef7a,
    success-400: #29e539,
    success-500: #13c545,
    success-600: #0ea01a,
    success-700: #01830c,
    success-800: #075a0e,
    success-900: #053709
);

$dangerMap: (
    danger-50: #ffeaed,
    danger-100: #ffccce,
    danger-200: #ee9894,
    danger-300: #e3716a,
    danger-400: #ec5145,
    danger-500: #ef4227,
    danger-600: #e13727,
    danger-700: #cf2d22,
    danger-800: #c2261b,
    danger-900: #b3190d
);

$dataVizComparativeMap: (
    dataVizComparative-50: #8f4700,
    dataVizComparative-100: #8bbaaa,
    dataVizComparative-200: #af5900,
    dataVizComparative-300: #4a9f82,
    dataVizComparative-400: #cf7418,
    dataVizComparative-500: #006944,
    dataVizComparative-600: #e3ad76,
    dataVizComparative-700: #045137,
    dataVizComparative-800: #f7e7d7,
    dataVizComparative-900: #848484
);

$dataVizSequential1Map: (
    dataVizSequential1-50: #8f4700,
    dataVizSequential1-100: #a25302,
    dataVizSequential1-200: #af5900,
    dataVizSequential1-300: #bf6607,
    dataVizSequential1-400: #cf7418,
    dataVizSequential1-500: #da964f,
    dataVizSequential1-600: #e3ad76,
    dataVizSequential1-700: #efcfb0,
    dataVizSequential1-800: #f7e7d7,
    dataVizSequential1-900: #fbf3ea
);

$dataVizSequential2Map: (
    dataVizSequential2-50: #045137,
    dataVizSequential2-100: #006944,
    dataVizSequential2-200: #08744e,
    dataVizSequential2-300: #0c8057,
    dataVizSequential2-400: #2b8d6a,
    dataVizSequential2-500: #4a9f82,
    dataVizSequential2-600: #6eab96,
    dataVizSequential2-700: #8bbaaa,
    dataVizSequential2-800: #b9d5cc,
    dataVizSequential2-900: #e7f1ee
);

@include mixins.colorRamp($primaryMap);
@include mixins.colorRamp($secondaryMap);
@include mixins.colorRamp($successMap);
@include mixins.colorRamp($dangerMap);
@include mixins.colorRamp($dataVizComparativeMap);
@include mixins.colorRamp($dataVizSequential1Map);
@include mixins.colorRamp($dataVizSequential2Map);

///////////////////////////
//////  Font Stacks  //////
///////////////////////////

$ProximaNova: "'Proxima Nova', 'Open Sans', Helvetica, Arial, sans-serif";

/////////////////////
//////  Theme  //////
/////////////////////

$onClassesMap: map.merge(
    element.$onClassesMap,
    (
        primary-on-surface: $lmnt-theme-primary,
        on-secondary: functions.color-contrast-value-check($lmnt-theme-secondary),
        on-secondary-variant:
            functions.color-contrast-value-check($lmnt-theme-secondary-variant),
        secondary-on-surface: $lmnt-theme-secondary,
        on-danger: functions.color-contrast-value-check(element.$white)
    )
);

@each $color, $value in $onClassesMap {
    @include mixins.onBackgroundColorClasses($color: $color, $value: $value);
}

//////////////////
/// GRADIENTS ///
/////////////////

$gradient-colors: (
    'primary-to-bottom': $lmnt-theme-primary,
    'primary-dark-to-bottom': map.get($primaryMap, 'primary-900'),
    'primary-darker-to-bottom': darken(map.get($primaryMap, 'primary-900'), 10),
    'secondary-to-bottom': $lmnt-theme-secondary,
    'secondary-dark-to-bottom': map.get($secondaryMap, 'secondary-900'),
    'secondary-darker-to-bottom': darken(map.get($secondaryMap, 'secondary-900'), 10),
    'primary-to-top': $lmnt-theme-primary,
    'primary-dark-to-top': map.get($primaryMap, 'primary-900'),
    'primary-darker-to-top': darken(map.get($primaryMap, 'primary-900'), 10),
    'secondary-to-top': $lmnt-theme-secondary,
    'secondary-dark-to-top': map.get($secondaryMap, 'secondary-900'),
    'secondary-darker-to-top': darken(map.get($secondaryMap, 'secondary-900'), 10),
    'black-to-bottom': element.$black,
    'black-to-top': element.$black,
    'white-to-bottom': element.$white,
    'white-to-top': element.$white
);

@include mixins.gradientRamp($gradient-colors);

:root,
.lmnt,
.lmnt-theme-monsoy {
    --lmnt-theme-primary-font: #{$ProximaNova};
}

.lmnt,
.lmnt-theme-monsoy {
    //////////////////////////////////
    ////// BASE LEVEL OVERRIDES //////
    //////////////////////////////////

    // Element Theme Defaults - Fonts
    --lmnt-theme-primary-font: #{$ProximaNova};
    --lmnt-theme-secondary-font: #{$ProximaNova};

    // Element Theme Defaults - Primary
    --lmnt-theme-primary: #{$lmnt-theme-primary};
    --lmnt-theme-primary-variant: #{$lmnt-theme-primary-variant};

    --lmnt-theme-primary-on-surface: #{map.get($onClassesMap, 'primary-on-surface')};
    $lmnt-primary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'primary-on-surface')
    );

    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};

    // Element Theme Defaults - Secondary
    --lmnt-theme-secondary: #{$lmnt-theme-secondary};
    --lmnt-theme-on-secondary: #{map.get($onClassesMap, 'on-secondary')};
    --lmnt-theme-secondary-variant: #{$lmnt-theme-secondary-variant};
    --lmnt-theme-on-secondary-variant: #{map.get($onClassesMap, 'on-secondary-variant')};
    --lmnt-theme-secondary-on-surface: #{map.get($onClassesMap, 'secondary-on-surface')};

    // On surface rgb
    $lmnt-primary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'primary-on-surface')
    );
    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};

    $lmnt-secondary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'secondary-on-surface')
    );
    --lmnt-secondary-on-surface-rgb: #{$lmnt-secondary-on-surface-rgb};

    $lmnt-danger-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'danger-on-surface')
    );
    --lmnt-danger-on-surface-rgb: #{$lmnt-danger-on-surface-rgb};

    $lmnt-success-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'danger-on-surface')
    );
    --lmnt-success-on-surface-rgb: #{$lmnt-success-on-surface-rgb};

    // On color rgb
    $lmnt-on-primary-rgb: rgb.toValues(map.get($onClassesMap, 'on-primary'));
    --lmnt-on-primary-rgb: #{$lmnt-on-primary-rgb};

    $lmnt-on-secondary-rgb: rgb.toValues(map.get($onClassesMap, 'on-secondary'));
    --lmnt-on-secondary-rgb: #{$lmnt-on-secondary-rgb};

    $lmnt-on-danger-rgb: rgb.toValues(map.get($onClassesMap, 'on-danger'));
    --lmnt-on-danger-rgb: #{$lmnt-on-danger-rgb};

    $lmnt-on-success-rgb: rgb.toValues(map.get($onClassesMap, 'on-success'));
    --lmnt-on-success-rgb: #{$lmnt-on-success-rgb};

    // Element Primary Color Ramp
    @each $name, $color in $primaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Secondary Color Ramp
    @each $name, $color in $secondaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    ///////////////////////////////////////
    ////// COMPONENT LEVEL OVERRIDES //////
    ///////////////////////////////////////

    // Button
    --lmnt-button-shape-radius: 0;

    // TODO: deprecate styling based on `.lmnt-theme-primary-bg` in favor of variant styling
    // Button: On Primary
    --lmnt-button-filled-bg--on-primary: #{element.$white};
    --lmnt-button-filled-text--on-primary: var(--lmnt-theme-primary);

    // TODO: deprecate styling based on `.lmnt-theme-secondary-bg` in favor of variant styling
    // Button: On Secondary
    --lmnt-button-filled-bg--on-secondary: #{element.$white};
    --lmnt-button-filled-text--on-secondary: var(--lmnt-theme-secondary);

    // Snackbar
    --lmnt-theme-on-snackbar: #efcfb0;
    --lmnt-theme-on-snackbar-variant: #8bbaaa;

    // Typography
    // Text Link Styles
    --lmnt-typography-link-color: var(--lmnt-theme-primary);

    // Display 1
    --mdc-typography-headline1-letter-spacing: -0.01em; // -1px
    --mdc-typography-headline1-line-height: 1.2083333;

    // Display 2
    --mdc-typography-headline2-line-height: 1.2;

    // Display 3
    --mdc-typography-headline3-line-height: 1.166666667;

    // Display 4
    --mdc-typography-headline4-font-weight: 300;
    --mdc-typography-headline4-letter-spacing: 0.007em; // 0.25px
    --mdc-typography-headline4-line-height: 1.17647058;

    // Display 5
    --mdc-typography-headline5-line-height: 1.166666667;

    // Display 6
    --mdc-typography-headline6-font-weight: 600;
    --mdc-typography-headline6-line-height: 1.2;

    // Subtitle 1
    --mdc-typography-subtitle1-line-height: 1.5;

    // Subtitle 2
    --mdc-typography-subtitle2-font-weight: 600;
    --mdc-typography-subtitle2-line-height: 1.7142857143;

    // Body 1
    --mdc-typography-body1-line-height: 1.75;

    // Body 2
    --mdc-typography-body2-line-height: 1.428572;

    // Caption
    --mdc-typography-caption-line-height: 1.3333333;

    // Button
    --mdc-typography-button-font-weight: 600;
    --mdc-typography-button-line-height: 1.142857;

    // Overline
    --mdc-typography-overline-font-weight: 600;
    --mdc-typography-overline-line-height: 1.3333333;
}

/////////////////////////
////////  FONTS  ////////
/////////////////////////
$assetsPath: '..' !default;

/* @import must be at top of file, otherwise CSS will not work */
@import url('//hello.myfonts.net/count/3b4378');

/* stylelint-disable scale-unlimited/declaration-strict-value, font-weight-notation, indentation */

// ProximaNova  bold, light, medium, regular and semibold
@font-face {
    font-display: swap;
    font-family: 'Proxima Nova';
    font-style: normal;
    font-weight: 300;
    src: url('#{$assetsPath}/assets/fonts/Proxima_Nova/ProximaNova-Light/font.woff2')
        format('woff2');
}

@font-face {
    font-display: swap;
    font-family: 'Proxima Nova';
    font-style: normal;
    font-weight: 600;
    src: url('#{$assetsPath}/assets/fonts/Proxima_Nova/ProximaNova-Semibold/font.woff2')
        format('woff2');
}

@font-face {
    font-display: swap;
    font-family: 'Proxima Nova';
    font-style: normal;
    font-weight: 500;
    src: url('#{$assetsPath}/assets/fonts/Proxima_Nova/ProximaNova-Medium/font.woff2')
        format('woff2');
}

@font-face {
    font-display: swap;
    font-family: 'Proxima Nova';
    font-style: normal;
    font-weight: 700;
    src: url('#{$assetsPath}/assets/fonts/Proxima_Nova/ProximaNova-Bold/font.woff2')
        format('woff2');
}

@font-face {
    font-display: swap;
    font-family: 'Proxima Nova';
    font-style: normal;
    font-weight: 400;
    src: url('#{$assetsPath}/assets/fonts/Proxima_Nova/ProximaNova-Regular/font.woff2')
        format('woff2');
}

/* stylelint-enable scale-unlimited/declaration-strict-value, font-weight-notation, indentation */
