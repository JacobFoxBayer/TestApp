// NOTE: Color Ramps only require SCSS color values for contrast calculations
@use 'sass:math';

@use 'sass:map';
@use 'sass-hex-rgb' as rgb;
@use '../common/mixins' as mixins;
@use '../common/element.core' as element;
@use '../common/functions' as functions;

////////////////////////
//////  Colors   ///////
////////////////////////

$lmnt-theme-primary: #45423c;
$lmnt-theme-primary-variant: #78756e;
$lmnt-theme-secondary: #dedfd7;
$lmnt-theme-secondary-variant: #73746d;

$primaryMap: (
    primary-50: #fcfbf9,
    primary-100: #f3f2ed,
    primary-200: #e9e8e3,
    primary-300: #d5d2c9,
    primary-400: #b3afa9,
    primary-500: #8f8e8a,
    primary-600: #78756e,
    primary-700: #64615b,
    primary-800: #45423c,
    primary-900: #24211c
);

$secondaryMap: (
    secondary-50: #fdfdfb,
    secondary-100: #fafbf3,
    secondary-200: #f4f5ed,
    secondary-300: #eceee6,
    secondary-400: #dedfd7,
    secondary-500: #bbbcb4,
    secondary-600: #9c9d95,
    secondary-700: #73746d,
    secondary-800: #5f6059,
    secondary-900: #40413b
);
$successMap: (
    success-50: #eeffef,
    success-100: #d3ffd7,
    success-200: #a9f6af,
    success-300: #6fef7a,
    success-400: #29e539,
    success-500: #13c545,
    success-600: #0ea01a,
    success-700: #01830c,
    success-800: #075a0e,
    success-900: #053709
);

$dangerMap: (
    danger-50: #ffeaed,
    danger-100: #ffccce,
    danger-200: #ee9894,
    danger-300: #e3716a,
    danger-400: #ec5145,
    danger-500: #ef4227,
    danger-600: #e13727,
    danger-700: #cf2d22,
    danger-800: #c2261b,
    danger-900: #b3190d
);

$ancillaryMap: (
    ancillary-100: #ffca05,
    ancillary-200: #8e3708,
    ancillary-300: #02674d
);
$dataVizComparativeMap: (
    dataVizComparative-50: #1e180d,
    dataVizComparative-100: #9e9077,
    dataVizComparative-200: #52452e,
    dataVizComparative-300: #d1c8b7,
    dataVizComparative-400: #616161,
    dataVizComparative-500: #d47001,
    dataVizComparative-600: #803500,
    dataVizComparative-700: #d1c8b7,
    dataVizComparative-800: #939393,
    dataVizComparative-900: #eaeaea
);

$dataVizSequential1Map: (
    dataVizSequential1-50: #1e180d,
    dataVizSequential1-100: #372e1b,
    dataVizSequential1-200: #52452e,
    dataVizSequential1-300: #6c5c43,
    dataVizSequential1-400: #86765b,
    dataVizSequential1-500: #9e9077,
    dataVizSequential1-600: #c3b59d,
    dataVizSequential1-700: #eae1d2,
    dataVizSequential1-800: #f7edde,
    dataVizSequential1-900: #fff7ea
);

$dataVizSequential2Map: (
    dataVizSequential2-50: #372e1b,
    dataVizSequential2-100: #49412f,
    dataVizSequential2-200: #5b5444,
    dataVizSequential2-300: #6d6759,
    dataVizSequential2-400: #7f7a6d,
    dataVizSequential2-500: #918d82,
    dataVizSequential2-600: #a4a097,
    dataVizSequential2-700: #b6b3ac,
    dataVizSequential2-800: #cbc8c0,
    dataVizSequential2-900: #dfdcd3
);

@include mixins.colorRamp($primaryMap);
@include mixins.colorRamp($secondaryMap);
@include mixins.colorRamp($ancillaryMap);
@include mixins.colorRamp($successMap);
@include mixins.colorRamp($dangerMap);
@include mixins.colorRamp($dataVizComparativeMap);
@include mixins.colorRamp($dataVizSequential1Map);
@include mixins.colorRamp($dataVizSequential2Map);

///////////////////////////
//////  Font Stacks  //////
///////////////////////////

$Whitney: "'HCo Whitney SSm', 'Helvetica Neue', Helvetica, Arial, sans-serif";
$TradeGothic: "'Trade Gothic', 'Arial Narrow', helvetica, arial, sans-serif";

/////////////////////
//////  Theme  //////
/////////////////////

$onClassesMap: map.merge(
    element.$onClassesMap,
    (
        on-background: $lmnt-theme-primary,
        on-surface: $lmnt-theme-primary,
        primary-on-surface: $lmnt-theme-primary,
        on-secondary: $lmnt-theme-primary,
        on-secondary-variant:
            functions.color-contrast-value-check($lmnt-theme-secondary-variant),
        secondary-on-surface: $lmnt-theme-secondary
    )
);

$onSurfaceMap: (
    on-surface-active:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-high-black),
    on-surface-inactive:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-inactive),
    on-surface-disabled:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-disabled),
    on-surface-stroke:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-stroke),
    on-surface-base: rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-high)
);

$onSecondaryMap: (
    on-secondary-active:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-high-black),
    on-secondary-inactive:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-inactive),
    on-secondary-disabled:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-disabled),
    on-secondary-stroke:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-stroke),
    on-secondary-base:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-high)
);

@each $color, $value in $onClassesMap {
    @include mixins.onBackgroundColorClasses($color: $color, $value: $value);
}

@each $color, $value in $onSecondaryMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

@each $color, $value in $onSurfaceMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

//////////////////
/// GRADIENTS ///
/////////////////

$gradient-colors: (
    'primary-to-bottom': $lmnt-theme-primary,
    'primary-dark-to-bottom': map.get($primaryMap, 'primary-900'),
    'primary-darker-to-bottom': darken(map.get($primaryMap, 'primary-900'), 10),
    'secondary-to-bottom': $lmnt-theme-secondary,
    'secondary-dark-to-bottom': map.get($secondaryMap, 'secondary-900'),
    'secondary-darker-to-bottom': darken(map.get($secondaryMap, 'secondary-900'), 10),
    'primary-to-top': $lmnt-theme-primary,
    'primary-dark-to-top': map.get($primaryMap, 'primary-900'),
    'primary-darker-to-top': darken(map.get($primaryMap, 'primary-900'), 10),
    'secondary-to-top': $lmnt-theme-secondary,
    'secondary-dark-to-top': map.get($secondaryMap, 'secondary-900'),
    'secondary-darker-to-top': darken(map.get($secondaryMap, 'secondary-900'), 10),
    'black-to-bottom': element.$black,
    'black-to-top': element.$black,
    'white-to-bottom': element.$white,
    'white-to-top': element.$white
);

@include mixins.gradientRamp($gradient-colors);

:root,
.lmnt,
.lmnt-theme-dad {
    // Element Theme Defaults - Surface
    --lmnt-theme-on-background: #{map.get($onClassesMap, 'on-background')};
    --lmnt-theme-on-surface: #{map.get($onClassesMap, 'on-surface')};
    --lmnt-theme-primary-font: #{$Whitney};
    // Element Theme Defaults - Surface
    --lmnt-theme-surface-variant: #{#f5f5f5};
}

.lmnt,
.lmnt-theme-dad {
    //////////////////////////////////
    ////// BASE LEVEL OVERRIDES //////
    //////////////////////////////////

    // Element Theme Defaults - Fonts
    --lmnt-theme-secondary-font: #{$TradeGothic};

    // Element Theme Defaults - Primary
    --lmnt-theme-primary: #{$lmnt-theme-primary};
    --lmnt-theme-on-primary: #{map.get($onClassesMap, 'on-primary')};
    --lmnt-theme-primary-variant: #{$lmnt-theme-primary-variant};
    --lmnt-theme-on-primary-variant: #{map.get($onClassesMap, 'on-primary-variant')};

    --lmnt-theme-primary-on-surface: #{map.get($onClassesMap, 'primary-on-surface')};
    $lmnt-primary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'primary-on-surface')
    );

    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};

    // Element Theme Defaults - Secondary
    --lmnt-theme-secondary: #{$lmnt-theme-secondary};
    --lmnt-theme-on-secondary: #{map.get($onClassesMap, 'on-secondary')};
    --lmnt-theme-secondary-variant: #{$lmnt-theme-secondary-variant};
    --lmnt-theme-on-secondary-variant: #{map.get($onClassesMap, 'on-secondary-variant')};
    --lmnt-theme-secondary-on-surface: #{map.get($onClassesMap, 'secondary-on-surface')};

    // On surface rgb
    $lmnt-primary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'primary-on-surface')
    );
    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};

    $lmnt-secondary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'secondary-on-surface')
    );
    --lmnt-secondary-on-surface-rgb: #{$lmnt-secondary-on-surface-rgb};

    $lmnt-danger-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'danger-on-surface')
    );
    --lmnt-danger-on-surface-rgb: #{$lmnt-danger-on-surface-rgb};

    $lmnt-success-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'danger-on-surface')
    );
    --lmnt-success-on-surface-rgb: #{$lmnt-success-on-surface-rgb};

    // On color rgb
    $lmnt-on-primary-rgb: rgb.toValues(map.get($onClassesMap, 'on-primary'));
    --lmnt-on-primary-rgb: #{$lmnt-on-primary-rgb};

    $lmnt-on-secondary-rgb: rgb.toValues(map.get($onClassesMap, 'on-secondary'));
    --lmnt-on-secondary-rgb: #{$lmnt-on-secondary-rgb};

    $lmnt-on-danger-rgb: rgb.toValues(map.get($onClassesMap, 'on-danger'));
    --lmnt-on-danger-rgb: #{$lmnt-on-danger-rgb};

    $lmnt-on-success-rgb: rgb.toValues(map.get($onClassesMap, 'on-success'));
    --lmnt-on-success-rgb: #{$lmnt-on-success-rgb};

    // Element Primary Color Ramp
    @each $name, $color in $primaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Secondary Color Ramp
    @each $name, $color in $secondaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Ancillary Color Ramp
    @each $name, $color in $ancillaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Sequential 1 Color Ramp
    @each $name, $color in $dataVizSequential1Map {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Sequential 2 Color Ramp
    @each $name, $color in $dataVizSequential2Map {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Comparative Color Ramp
    @each $name, $color in $dataVizComparativeMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Success Color Ramp
    @each $name, $color in $successMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Danger Color Ramp
    @each $name, $color in $dangerMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element on Colors

    // Element On Surface Color Ramp
    @each $name, $color in $onSurfaceMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element On Secondary Color Ramp
    @each $name, $color in $onSecondaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    ///////////////////////////////////////
    ////// COMPONENT LEVEL OVERRIDES //////
    ///////////////////////////////////////

    // Button
    --lmnt-button-shape-radius: 0;

    // Snackbar
    --lmnt-theme-on-snackbar: #e9e8e3;
    --lmnt-theme-on-snackbar-variant: #f4f5ed;

    // Typography

    --lmnt-typography-link-color: #64615b;

    // Display 1
    --mdc-typography-headline1-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline1-font-weight: 700;
    --mdc-typography-headline1-letter-spacing: -0.016em; // -1.5px or 0.016em
    --mdc-typography-headline1-line-height: 1; // 96px or 1
    --mdc-typography-headline1-text-transform: uppercase;

    // Display 2
    --mdc-typography-headline2-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline2-font-weight: 400;
    --mdc-typography-headline2-line-height: #{math.div(72px, 60px)}; // 72px
    --mdc-typography-headline2-letter-spacing: normal;

    // Display 3
    --mdc-typography-headline3-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline3-line-height: #{math.div(56px, 48px)}; // 56px
    --mdc-typography-headline3-text-transform: uppercase;

    // Display 4
    --mdc-typography-headline4-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline4-letter-spacing: 0;
    --mdc-typography-headline4-line-height: #{functions.toRem(24)};

    // Display 5
    --mdc-typography-headline5-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline5-line-height: #{math.div(28px, 24px)}; // 28px
    --mdc-typography-headline5-text-transform: uppercase;

    // Display 6
    --mdc-typography-headline6-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline6-font-weight: 400;
    --mdc-typography-headline6-letter-spacing: 0;
    --mdc-typography-headline6-line-height: 1; // 20px

    // Subtitle 1
    --mdc-typography-subtitle1-line-height: #{functions.toRem(24)};

    // Subtitle 2
    --mdc-typography-subtitle2-letter-spacing: 0.018em; // 0.25px
    --mdc-typography-subtitle2-line-height: #{math.div(16px, 14px)}; // 26px

    // Body 1
    --mdc-typography-body1-font-weight: 500;
    --mdc-typography-body1-line-height: #{math.div(28px, 16px)}; // 28px

    // Body 2
    --mdc-typography-body2-font-weight: 300;
    --mdc-typography-body2-line-height: #{math.div(20px, 14px)}; // 20px

    // Caption
    --mdc-typography-caption-font-weight: 300;
    --mdc-typography-caption-line-height: #{math.div(16px, 12px)}; // 16px
    --lmnt-typography--caption-bold-font-weight: 700;

    // Button
    --mdc-typography-button-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-button-font-size: 1rem; // 16px
    --mdc-typography-button-font-weight: 700;
    --mdc-typography-button-line-height: 1;
    --mdc-typography-button-letter-spacing: 1.25px;

    // Overline
    --mdc-typography-overline-font-size: 0.688rem; // 11px
    --mdc-typography-overline-letter-spacing: 0.136em; // 1.5px or 0.136em
    --mdc-typography-overline-line-height: #{math.div(16px, 15px)}; // 16px
    --mdc-typography-overline-font-weight: 700;
    --mdc-typography-overline-font-family: var(--lmnt-theme-primary-font);
}

// MIGRATION: Solve the Emphasis challenge

// MDC Theme Variables
$mdc-emphasis-med: 0.76;

// TODO: update component level themes as components are updated

/////////////////////////////
//////  Components   ////////
/////////////////////////////

// Card
// Note: DAD cards are always outlined with no elevation
.mdc-card {
    border-color: #e0e0e0;
    border-style: solid;
    border-width: 1px;
    box-shadow: none;
}

/////////////////////////
////////  FONTS  ////////
/////////////////////////
$assetsPath: '..' !default;
/* stylelint-disable scale-unlimited/declaration-strict-value, font-weight-notation, indentation */
// TradeGothic - bold
@font-face {
    font-display: swap;
    font-family: 'Trade Gothic';
    font-style: normal;
    font-weight: bold;
    src: url('#{$assetsPath}/assets/fonts/Trade_Gothic/3630AF_0_0.eot');
    src: url('#{$assetsPath}/assets/fonts/Trade_Gothic/3630AF_0_0.eot?#iefix')
            format('embedded-opentype'),
        url('#{$assetsPath}/assets/fonts/Trade_Gothic/3630AF_0_0.woff2') format('woff2'),
        url('#{$assetsPath}/assets/fonts/Trade_Gothic/3630AF_0_0.woff') format('woff'),
        url('#{$assetsPath}/assets/fonts/Trade_Gothic/3630AF_0_0.ttf') format('truetype');
}

// Whitney SSm - medium
@font-face {
    font-display: swap;
    font-family: 'HCo Whitney SSm';
    font-style: normal;
    font-weight: 500;
    src: url('#{$assetsPath}/assets/fonts/HCo_WhitneySSm_Basic_Web/hco_fonts/woff2/WhitneySSm-Medium_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_WhitneySSm_Basic_Web/hco_fonts/woff/WhitneySSm-Medium_Web.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'HCo Whitney SSm';
    font-style: normal;
    font-weight: 700;
    src: url('#{$assetsPath}/assets/fonts/HCo_WhitneySSm_Basic_Web/hco_fonts/woff2/WhitneySSm-Bold_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_WhitneySSm_Basic_Web/hco_fonts/woff/WhitneySSm-Bold_Web.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'HCo Whitney SSm';
    font-style: italic;
    font-weight: 500;
    src: url('#{$assetsPath}/assets/fonts/HCo_WhitneySSm_Basic_Web/hco_fonts/woff2/WhitneySSm-MediumItalic_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_WhitneySSm_Basic_Web/hco_fonts/woff/WhitneySSm-MediumItalic_Web.woff')
            format('woff');
}

/* stylelint-enable scale-unlimited/declaration-strict-value, font-weight-notation, indentation */
