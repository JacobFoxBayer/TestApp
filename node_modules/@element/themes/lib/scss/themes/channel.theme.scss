// NOTE: Color Ramps only require SCSS color values for contrast calculations
@use 'sass:map';
@use 'sass-hex-rgb' as rgb;
@use '../common/mixins' as mixins;
@use '../common/element.core' as element;
@use '../common/functions' as functions;

///////////////////////////
//////  Font Stacks  //////
///////////////////////////

$GothamSSm: "'HCo Gotham SSm', 'Helvetica Neue', Helvetica, Arial, sans-serif";
$Gotham: "'HCo Gotham', 'Helvetica Neue', Helvetica, Arial, sans-serif";

////////////////////////
//////  Colors   ///////
////////////////////////

// NOTE: $mine-shaft replaces typical element.$black in `on-color` contexts for Channel
$mine-shaft: #292929;

$lmnt-theme-primary: #01625d;
$lmnt-theme-primary-variant: #014d49;
$lmnt-theme-secondary: #c1cd23;
$lmnt-theme-secondary-variant: #afbb0b;

$primaryMap: (
    primary-50: #c3d9d8,
    primary-100: #85b6b4,
    primary-200: #5ea09d,
    primary-300: #429390,
    primary-400: #27807c,
    primary-500: #006c67,
    primary-600: #01625d,
    primary-700: #015753,
    primary-800: #014d49,
    primary-900: #003c37
);

$secondaryMap: (
    secondary-50: #f8f9e5,
    secondary-100: #edf0bd,
    secondary-200: #e1e691,
    secondary-300: #d0d950,
    secondary-400: #c1cd23,
    secondary-500: #bbc613,
    secondary-600: #afbb0b,
    secondary-700: #a6b01e,
    secondary-800: #9ba516,
    secondary-900: #8f990d
);

$successMap: (
    success-50: #eeffef,
    success-100: #d3ffd7,
    success-200: #a9f6af,
    success-300: #6fef7a,
    success-400: #29e539,
    success-500: #13c545,
    success-600: #0ea01a,
    success-700: #01830c,
    success-800: #075a0e,
    success-900: #053709
);

$dangerMap: (
    danger-50: #ffeaed,
    danger-100: #ffccce,
    danger-200: #ee9894,
    danger-300: #e3716a,
    danger-400: #ec5145,
    danger-500: #ef4227,
    danger-600: #e13727,
    danger-700: #cf2d22,
    danger-800: #c2261b,
    danger-900: #b3190d
);

$ancillaryMap: (
    ancillary-100: #e8941a,
    ancillary-200: #54301a
);

$dataVizComparativeMap: (
    dataVizComparative-50: #006c67,
    dataVizComparative-100: #c2cd23,
    dataVizComparative-200: #3e9e99,
    dataVizComparative-300: #d9e53c,
    dataVizComparative-400: #36beb8,
    dataVizComparative-500: #ddf17f,
    dataVizComparative-600: #66e0db,
    dataVizComparative-700: #6a706f,
    dataVizComparative-800: #e3e5e7,
    dataVizComparative-900: #424444
);

$dataVizSequential1Map: (
    dataVizSequential1-50: #006c67,
    dataVizSequential1-100: #177974,
    dataVizSequential1-200: #2e8682,
    dataVizSequential1-300: #459490,
    dataVizSequential1-400: #5ca19e,
    dataVizSequential1-500: #73aeac,
    dataVizSequential1-600: #8bbcb9,
    dataVizSequential1-700: #a2c9c7,
    dataVizSequential1-800: #badddb,
    dataVizSequential1-900: #d0eeec
);

$dataVizSequential2Map: (
    dataVizSequential2-50: #a2ad09,
    dataVizSequential2-100: #afbb0b,
    dataVizSequential2-200: #c1cd23,
    dataVizSequential2-300: #ccd73e,
    dataVizSequential2-400: #d9e34f,
    dataVizSequential2-500: #e3ed63,
    dataVizSequential2-600: #eef86f,
    dataVizSequential2-700: #f4fb9f,
    dataVizSequential2-800: #faffbf,
    dataVizSequential2-900: #fbffd1
);

@include mixins.colorRamp($primaryMap);
@include mixins.colorRamp($secondaryMap);
@include mixins.colorRamp($ancillaryMap);
@include mixins.colorRamp($successMap);
@include mixins.colorRamp($dataVizComparativeMap);
@include mixins.colorRamp($dataVizSequential1Map);
@include mixins.colorRamp($dataVizSequential2Map);
@include mixins.colorRamp($dangerMap);

/////////////////////
//////  Theme  //////
/////////////////////

$onClassesMap: map.merge(
    element.$onClassesMap,
    (
        on-background: #262626,
        on-surface: #262626,
        on-primary:
            functions.color-contrast-value-check(
                $value: $lmnt-theme-primary,
                $blackText: $mine-shaft
            ),
        on-primary-variant:
            functions.color-contrast-value-check(
                $value: $lmnt-theme-primary-variant,
                $blackText: $mine-shaft
            ),
        primary-on-surface: $lmnt-theme-primary,
        on-secondary:
            functions.color-contrast-value-check(
                $lmnt-theme-secondary,
                $blackText: $mine-shaft
            ),
        on-secondary-variant:
            functions.color-contrast-value-check(
                $lmnt-theme-secondary-variant,
                $blackText: $mine-shaft
            ),
        secondary-on-surface: #6e760b,
        on-danger:
            functions.color-contrast-value-check(
                element.$lmnt-theme-danger,
                $blackText: $mine-shaft
            ),
        on-danger-variant:
            functions.color-contrast-value-check(
                element.$lmnt-theme-danger-variant,
                $blackText: $mine-shaft
            )
    )
);

$onSurfaceMap: (
    on-surface-active:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-high-black),
    on-surface-inactive:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-inactive),
    on-surface-disabled:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-disabled),
    on-surface-stroke:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-stroke),
    on-surface-base: rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-high)
);

@each $color, $value in $onSurfaceMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

@each $color, $value in $onClassesMap {
    @include mixins.onBackgroundColorClasses($color: $color, $value: $value);
}

//////////////////
/// GRADIENTS ///
/////////////////

$gradient-colors: (
    'primary-to-bottom': $lmnt-theme-primary,
    'primary-dark-to-bottom': map.get($primaryMap, 'primary-900'),
    'primary-darker-to-bottom': darken(map.get($primaryMap, 'primary-900'), 10),
    'secondary-to-bottom': $lmnt-theme-secondary,
    'secondary-dark-to-bottom': map.get($secondaryMap, 'secondary-900'),
    'secondary-darker-to-bottom': darken(map.get($secondaryMap, 'secondary-900'), 10),
    'primary-to-top': $lmnt-theme-primary,
    'primary-dark-to-top': map.get($primaryMap, 'primary-900'),
    'primary-darker-to-top': darken(map.get($primaryMap, 'primary-900'), 10),
    'secondary-to-top': $lmnt-theme-secondary,
    'secondary-dark-to-top': map.get($secondaryMap, 'secondary-900'),
    'secondary-darker-to-top': darken(map.get($secondaryMap, 'secondary-900'), 10),
    'black-to-bottom': element.$black,
    'black-to-top': element.$black,
    'white-to-bottom': element.$white,
    'white-to-top': element.$white
);

@include mixins.gradientRamp($gradient-colors);

:root,
.lmnt,
.lmnt-theme-channel {
    // Element Theme Defaults - Surface
    --lmnt-theme-on-background: #{map.get($onClassesMap, 'on-background')};
    --lmnt-theme-on-surface: #{rgba($mine-shaft, 0.87)};
    --lmnt-theme-primary-font: #{$GothamSSm};
}

.lmnt,
.lmnt-theme-channel {
    //////////////////////////////////
    ////// BASE LEVEL OVERRIDES //////
    //////////////////////////////////

    // Element Theme Defaults - Fonts
    --lmnt-theme-secondary-font: #{$Gotham};

    // Element Theme Defaults - Background
    --lmnt-theme-on-background: #{map.get($onClassesMap, 'on-surface')};

    // Element Theme Defaults - Surface

    // Element Theme Defaults - Primary
    --lmnt-theme-primary: #{$lmnt-theme-primary};
    --lmnt-theme-on-primary: #{map.get($onClassesMap, 'on-primary')};
    --lmnt-theme-primary-variant: #{$lmnt-theme-primary-variant};
    --lmnt-theme-on-primary-variant: #{map.get($onClassesMap, 'on-primary-variant')};

    --lmnt-theme-primary-on-surface: #{map.get($onClassesMap, 'primary-on-surface')};
    $lmnt-primary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'primary-on-surface')
    );

    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};

    // Element Theme Defaults - Secondary
    --lmnt-theme-secondary: #{$lmnt-theme-secondary};
    --lmnt-theme-on-secondary: #{map.get($onClassesMap, 'on-secondary')};
    --lmnt-theme-secondary-variant: #{$lmnt-theme-secondary-variant};
    --lmnt-theme-on-secondary-variant: #{map.get($onClassesMap, 'on-secondary-variant')};
    --lmnt-theme-secondary-on-surface: #{map.get($onClassesMap, 'secondary-on-surface')};

    // On surface rgb
    $lmnt-primary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'primary-on-surface')
    );
    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};

    $lmnt-secondary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'secondary-on-surface')
    );
    --lmnt-secondary-on-surface-rgb: #{$lmnt-secondary-on-surface-rgb};

    $lmnt-danger-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'danger-on-surface')
    );
    --lmnt-danger-on-surface-rgb: #{$lmnt-danger-on-surface-rgb};

    $lmnt-success-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'danger-on-surface')
    );
    --lmnt-success-on-surface-rgb: #{$lmnt-success-on-surface-rgb};

    // On color rgb
    $lmnt-on-primary-rgb: rgb.toValues(map.get($onClassesMap, 'on-primary'));
    --lmnt-on-primary-rgb: #{$lmnt-on-primary-rgb};

    $lmnt-on-secondary-rgb: rgb.toValues(map.get($onClassesMap, 'on-secondary'));
    --lmnt-on-secondary-rgb: #{$lmnt-on-secondary-rgb};

    $lmnt-on-danger-rgb: rgb.toValues(map.get($onClassesMap, 'on-danger'));
    --lmnt-on-danger-rgb: #{$lmnt-on-danger-rgb};

    $lmnt-on-success-rgb: rgb.toValues(map.get($onClassesMap, 'on-success'));
    --lmnt-on-success-rgb: #{$lmnt-on-success-rgb};

    // Element Primary Color Ramp
    @each $name, $color in $primaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Secondary Color Ramp
    @each $name, $color in $secondaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Ancillary Color Ramp
    @each $name, $color in $ancillaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Sequential 1 Color Ramp
    @each $name, $color in $dataVizSequential1Map {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Sequential 2 Color Ramp
    @each $name, $color in $dataVizSequential2Map {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Comparative Color Ramp
    @each $name, $color in $dataVizComparativeMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element on Colors

    // Element On Surface Color Ramp
    @each $name, $color in $onSurfaceMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Success Color Ramp
    @each $name, $color in $successMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Danger Color Ramp
    @each $name, $color in $dangerMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    ///////////////////////////////////////
    ////// COMPONENT LEVEL OVERRIDES //////
    ///////////////////////////////////////

    // Button
    --lmnt-button-shape-radius: 0;
    // --lmnt-button-filled-bg: var(--lmnt-theme-primary);
    // --lmnt-button-filled-text: var(--lmnt-theme-on-primary);
    // --lmnt-button-outlined-text-color: var(--lmnt-theme-primary);
    // --lmnt-button-outlined-border-color: #{rgba(element.$black, 0.12)};
    // --lmnt-button-text-color: var(--lmnt-theme-primary);

    // // TODO: deprecate styling based on `.lmnt-theme-primary-bg` in favor of variant styling
    // --lmnt-button-filled-bg--on-primary: var(--lmnt-theme-secondary);
    // --lmnt-button-filled-text--on-primary: var(--lmnt-theme-on-secondary);
    // --lmnt-button-outlined-text-color--on-primary: var(--lmnt-theme-on-primary);
    // --lmnt-button-outlined-border-color--on-primary: var(--lmnt-theme-on-primary);
    // --lmnt-button-text-color--on-primary: var(--lmnt-theme-on-primary);

    // // TODO: deprecate styling based on `.lmnt-theme-secondary-bg` in favor of variant styling
    // --lmnt-button-filled-bg--on-secondary: var(--lmnt-theme-primary);
    // --lmnt-button-filled-text--on-secondary: var(--lmnt-theme-on-primary);

    // Card
    --lmnt-card-header: var(--lmnt-theme-primary);
    --lmnt-card-on-header: var(--lmnt-theme-on-primary);

    // Typography

    --lmnt-typography-link-color: var(--lmnt-theme-secondary-on-surface);

    // Display 1
    --mdc-typography-headline1-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline1-font-weight: 700;
    --mdc-typography-headline1-letter-spacing: 0.01em; // 1px or 0.01em
    --mdc-typography-headline1-line-height: 1; // 96px or 1

    // Display 2
    --mdc-typography-headline2-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline2-font-weight: 700;
    --mdc-typography-headline2-line-height: 1; // 60px or 1

    // Display 3
    --mdc-typography-headline3-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline3-font-weight: 700;
    --mdc-typography-headline3-line-height: 1.167;

    // Display 4
    --mdc-typography-headline4-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline4-font-weight: 700;
    --mdc-typography-headline4-letter-spacing: 0.007em; // 0.25px or 0.007em
    --mdc-typography-headline4-line-height: 1.176;

    // Display 5
    --mdc-typography-headline5-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline5-font-weight: 700;
    --mdc-typography-headline5-line-height: 1.167;

    // Display 6
    --mdc-typography-headline6-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline6-font-weight: 700;
    --mdc-typography-headline6-line-height: 1.2;

    // Subtitle 1
    --mdc-typography-subtitle1-font-weight: 500;
    --mdc-typography-subtitle1-line-height: 1.5; // 24px or 1.5

    // Subtitle 2
    --mdc-typography-subtitle2-line-height: 1.429;

    // Body 1
    --mdc-typography-body1-font-weight: 300;
    --mdc-typography-body1-letter-spacing: 0;
    --mdc-typography-body1-line-height: 1.75;

    // Body 2
    --mdc-typography-body2-font-weight: 300;
    --mdc-typography-body2-line-height: 1.429;

    // Caption
    --mdc-typography-caption-font-weight: 400;
    --mdc-typography-caption-line-height: 1.333;
    --lmnt-typography--caption-bold-font-weight: 500;

    // Button
    --mdc-typography-button-font-weight: 700;
    --mdc-typography-button-line-height: 1.143;

    // Overline
    --mdc-typography-overline-line-height: 1.333;

    // Card: Channel cards are always outlined with no elevation
    --lmnt-card-box-shadow: none;
    --lmnt-card-border-color: #e0e0e0;
    --lmnt-card-border-style: solid;
    --lmnt-card-border-width: 1px;
}

/////////////////////////
////////  FONTS  ////////
/////////////////////////
$assetsPath: '..' !default;

/* stylelint-disable scale-unlimited/declaration-strict-value, font-weight-notation, indentation */
// Gotham - bold
@font-face {
    font-display: swap;
    font-family: 'HCo Gotham';
    font-style: normal;
    font-weight: 700;
    src: url('#{$assetsPath}/assets/fonts/HCo_Gotham_1_Web/hco_fonts/woff2/Gotham-Bold_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_Gotham_1_Web/hco_fonts/woff/Gotham-Bold_Web.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'HCo Gotham';
    font-style: italic;
    font-weight: 700;
    src: url('#{$assetsPath}/assets/fonts/HCo_Gotham_1_Web/hco_fonts/woff2/Gotham-BoldItalic_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_Gotham_1_Web/hco_fonts/woff/Gotham-BoldItalic_Web.woff')
            format('woff');
}

// GothamSSm - light, book, medium, bold
@font-face {
    font-display: swap;
    font-family: 'HCo Gotham SSm';
    font-style: normal;
    font-weight: 300;
    src: url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff2/GothamSSm-Light_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff/GothamSSm-Light_Web.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'HCo Gotham SSm';
    font-style: italic;
    font-weight: 300;
    src: url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff2/GothamSSm-LightItalic_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff/GothamSSm-LightItalic_Web.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'HCo Gotham SSm';
    font-style: normal;
    font-weight: 400;
    src: url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff2/GothamSSm-Book_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff/GothamSSm-Book_Web.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'HCo Gotham SSm';
    font-style: italic;
    font-weight: 400;
    src: url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff2/GothamSSm-BookItalic_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff/GothamSSm-BookItalic_Web.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'HCo Gotham SSm';
    font-style: normal;
    font-weight: 500;
    src: url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff2/GothamSSm-Medium_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff/GothamSSm-Medium_Web.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'HCo Gotham SSm';
    font-style: italic;
    font-weight: 500;
    src: url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff2/GothamSSm-MediumItalic_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff/GothamSSm-MediumItalic_Web.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'HCo Gotham SSm';
    font-style: normal;
    font-weight: 700;
    src: url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff2/GothamSSm-Bold_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff/GothamSSm-Bold_Web.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'HCo Gotham SSm';
    font-style: italic;
    font-weight: 700;
    src: url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff2/GothamSSm-BoldItalic_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff/GothamSSm-BoldItalic_Web.woff')
            format('woff');
}

/* stylelint-enable scale-unlimited/declaration-strict-value, font-weight-notation, indentation */
