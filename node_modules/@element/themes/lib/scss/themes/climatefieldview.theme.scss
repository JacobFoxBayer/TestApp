// NOTE: Color Ramps only require SCSS color values for contrast calculations
@use 'sass:map';
@use 'sass-hex-rgb' as rgb;
@use '../common/mixins' as mixins;
@use '../common/element.core' as element;
@use '../common/functions' as functions;

////////////////////////
//////  Colors   ///////
////////////////////////

$lmnt-theme-primary: #004bd7;
$lmnt-theme-primary-variant: #007aff;
$lmnt-theme-secondary: #aaaaaa;
$lmnt-theme-secondary-variant: #555555;

$primaryMap: (
    primary-50: #a3ceff,
    primary-100: #6bb1ff,
    primary-200: #4ea2ff,
    primary-300: #268dfd,
    primary-400: #007aff,
    primary-500: #0072f9,
    primary-600: #0866f2,
    primary-700: #004bd7,
    primary-800: #1047ad,
    primary-900: #153063
);

$secondaryMap: (
    secondary-50: #dfe3e7,
    secondary-100: #d7dadd,
    secondary-200: #cacdd1,
    secondary-300: #aaaaaa,
    secondary-400: #8b8d90,
    secondary-500: #76787a,
    secondary-600: #616365,
    secondary-700: #555555,
    secondary-800: #333333,
    secondary-900: #222324
);

$successMap: (
    success-50: #e5fbe2,
    success-100: #73c07a,
    success-200: #38a842,
    success-300: #269c30,
    success-400: #138f1e,
    success-500: #01830c,
    success-600: #006a09,
    success-700: #005107,
    success-800: #003805,
    success-900: #002003
);

$dangerMap: (
    danger-50: #fee8e8,
    danger-100: #ffccce,
    danger-200: #ee9894,
    danger-300: #e3716a,
    danger-400: #ec5145,
    danger-500: #ef4227,
    danger-600: #e13727,
    danger-700: #cf2d22,
    danger-800: #c2261b,
    danger-900: #990404
);

$dataVizComparativeMap: (
    dataVizComparative-50: #f6b100,
    dataVizComparative-100: #004bd7,
    dataVizComparative-200: #373839,
    dataVizComparative-300: #4ea2ff,
    dataVizComparative-400: #8b8d90,
    dataVizComparative-500: #007aff,
    dataVizComparative-600: #b5b8bb,
    dataVizComparative-700: #1047ad,
    dataVizComparative-800: #dfe3e7,
    dataVizComparative-900: #268dfd
);

$dataVizSequential1Map: (
    dataVizSequential1-50: #153063,
    dataVizSequential1-100: #1047ad,
    dataVizSequential1-200: #004bd7,
    dataVizSequential1-300: #0866f2,
    dataVizSequential1-400: #0072f9,
    dataVizSequential1-500: #007aff,
    dataVizSequential1-600: #268dfd,
    dataVizSequential1-700: #4ea2ff,
    dataVizSequential1-800: #6bb1ff,
    dataVizSequential1-900: #a3ceff
);

$dataVizSequential2Map: (
    dataVizSequential2-50: #222324,
    dataVizSequential2-100: #373839,
    dataVizSequential2-200: #4c424f,
    dataVizSequential2-300: #616365,
    dataVizSequential2-400: #76787a,
    dataVizSequential2-500: #8b8d90,
    dataVizSequential2-600: #a0a3a6,
    dataVizSequential2-700: #b5b8bb,
    dataVizSequential2-800: #cacdd1,
    dataVizSequential2-900: #dfe3e7
);

$ancillaryMap: (
    ancillary-100: #f6b100,
    ancillary-200: #a2e3ed,
    ancillary-300: #6cccdd,
    ancillary-400: #f0f4f5,
    ancillary-500: #804e14,
    ancillary-600: #fef4db
);

@include mixins.colorRamp($primaryMap);
@include mixins.colorRamp($secondaryMap);
@include mixins.colorRamp($successMap);
@include mixins.colorRamp($dataVizComparativeMap);
@include mixins.colorRamp($dataVizSequential1Map);
@include mixins.colorRamp($dataVizSequential2Map);
@include mixins.colorRamp($dangerMap);
@include mixins.colorRamp($ancillaryMap);

///////////////////////////
//////  Font Stacks  //////
///////////////////////////

$Roboto: "'Roboto', 'Arial Narrow', helvetica, arial, sans-serif";

/////////////////////
//////  Theme  //////
/////////////////////

$onClassesMap: map.merge(
    element.$onClassesMap,
    (
        primary-on-surface: $lmnt-theme-primary,
        on-secondary: functions.color-contrast-value-check($lmnt-theme-secondary),
        on-secondary-variant:
            functions.color-contrast-value-check($lmnt-theme-secondary-variant),
        secondary-on-surface: #333333
    )
);

$onPrimaryMap: (
    on-primary-active:
        rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-high-black),
    on-primary-inactive:
        rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-inactive),
    on-primary-disabled:
        rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-disabled),
    on-primary-stroke:
        rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-stroke),
    on-primary-base: rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-high)
);

$onSecondaryMap: (
    on-secondary-active:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-high-black),
    on-secondary-inactive:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-inactive),
    on-secondary-disabled:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-disabled),
    on-secondary-stroke:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-stroke),
    on-secondary-base:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-high)
);

$onSuccessMap: (
    on-success-active:
        rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-high-black),
    on-success-inactive:
        rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-inactive),
    on-success-disabled:
        rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-disabled),
    on-success-stroke:
        rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-stroke),
    on-success-base: rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-high)
);

$onDangerMap: (
    on-danger-active:
        rgba(map.get($onClassesMap, 'on-danger'), element.$emphasis-high-black),
    on-danger-inactive:
        rgba(map.get($onClassesMap, 'on-danger'), element.$emphasis-inactive),
    on-danger-disabled:
        rgba(map.get($onClassesMap, 'on-danger'), element.$emphasis-disabled),
    on-danger-stroke: rgba(map.get($onClassesMap, 'on-danger'), element.$emphasis-stroke),
    on-danger-base: rgba(map.get($onClassesMap, 'on-danger'), element.$emphasis-high)
);

@each $color, $value in $onClassesMap {
    @include mixins.onBackgroundColorClasses($color: $color, $value: $value);
}

@each $color, $value in $onPrimaryMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

@each $color, $value in $onSecondaryMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

@each $color, $value in $onSuccessMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

:root,
.lmnt,
.lmnt-theme-climateportal {
    // Element Theme Defaults - Surface
    --lmnt-theme-on-background: #{map.get($onClassesMap, 'on-background')};
    --lmnt-theme-on-surface: #{map.get($onClassesMap, 'on-surface')};
    --lmnt-theme-primary-font: #{$Roboto};
}

.lmnt,
.lmnt-theme-climateportal {
    //////////////////////////////////
    ////// BASE LEVEL OVERRIDES //////
    //////////////////////////////////

    // Element Theme Defaults - Fonts
    --lmnt-theme-primary-font: #{$Roboto};

    // Element Theme Defaults - Background
    --lmnt-theme-on-background: #{map.get($onClassesMap, 'on-surface')};

    // Element Theme Defaults - Surface
    --lmnt-theme-on-surface: #{map.get($onClassesMap, 'on-surface')};

    // Element Theme Defaults - Primary
    --lmnt-theme-primary: #{$lmnt-theme-primary};
    --lmnt-theme-primary-variant: #{$lmnt-theme-primary-variant};
    --lmnt-theme-primary-on-surface: #{map.get($onClassesMap, 'primary-on-surface')};

    // Element Theme Defaults - Secondary
    --lmnt-theme-secondary: #{$lmnt-theme-secondary};
    --lmnt-theme-on-secondary: #{map.get($onClassesMap, 'on-secondary')};
    --lmnt-theme-secondary-variant: #{$lmnt-theme-secondary-variant};
    --lmnt-theme-on-secondary-variant: #{map.get($onClassesMap, 'on-secondary-variant')};
    --lmnt-theme-secondary-on-surface: #{map.get($onClassesMap, 'secondary-on-surface')};

    // On surface rgb
    $lmnt-primary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'primary-on-surface')
    );
    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};

    $lmnt-secondary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'secondary-on-surface')
    );
    --lmnt-secondary-on-surface-rgb: #{$lmnt-secondary-on-surface-rgb};

    $lmnt-danger-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'danger-on-surface')
    );
    --lmnt-danger-on-surface-rgb: #{$lmnt-danger-on-surface-rgb};

    $lmnt-success-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'danger-on-surface')
    );
    --lmnt-success-on-surface-rgb: #{$lmnt-success-on-surface-rgb};

    // On color rgb
    $lmnt-on-primary-rgb: rgb.toValues(map.get($onClassesMap, 'on-primary'));
    --lmnt-on-primary-rgb: #{$lmnt-on-primary-rgb};

    $lmnt-on-secondary-rgb: rgb.toValues(map.get($onClassesMap, 'on-secondary'));
    --lmnt-on-secondary-rgb: #{$lmnt-on-secondary-rgb};

    $lmnt-on-danger-rgb: rgb.toValues(map.get($onClassesMap, 'on-danger'));
    --lmnt-on-danger-rgb: #{$lmnt-on-danger-rgb};

    $lmnt-on-success-rgb: rgb.toValues(map.get($onClassesMap, 'on-success'));
    --lmnt-on-success-rgb: #{$lmnt-on-success-rgb};

    // Element Primary Color Ramp
    @each $name, $color in $primaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Secondary Color Ramp
    @each $name, $color in $secondaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Sequential 1 Color Ramp
    @each $name, $color in $dataVizSequential1Map {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Sequential 2 Color Ramp
    @each $name, $color in $dataVizSequential2Map {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Comparative Color Ramp
    @each $name, $color in $dataVizComparativeMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Success Color Ramp
    @each $name, $color in $successMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Danger Color Ramp
    @each $name, $color in $dangerMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Ancillary Color Ramp
    @each $name, $color in $ancillaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element on Colors

    // Element On Primary Color Ramp
    @each $name, $color in $onPrimaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element On Secondary Color Ramp
    @each $name, $color in $onSecondaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element On Success Color Ramp
    @each $name, $color in $onSuccessMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element On Danger Color Ramp
    @each $name, $color in $onDangerMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    ///////////////////////////////////////
    ////// COMPONENT LEVEL OVERRIDES //////
    ///////////////////////////////////////

    // Typography
    --lmnt-typography-link-color: #{$lmnt-theme-primary};

    // Display 1

    // Display 2

    // Display 3
    --mdc-typography-headline3-letter-spacing: 0.031em; // 1.5px

    // Display 4
    --mdc-typography-headline4-letter-spacing: 0.007em; // 0.25px

    // Display 5
    --mdc-typography-headline5-letter-spacing: 0.017em; // 0.4px

    // Display 6
    --mdc-typography-headline6-letter-spacing: 0.017em; // 0.35px

    // Subtitle 1

    // Subtitle 2

    // Body 1
    --mdc-typography-body1-letter-spacing: 0;

    // Body 2

    // Caption
    --lmnt-typography--caption-bold-font-weight: 500;

    // Button

    // Overline
    --mdc-typography-button-letter-spacing: 2px;
}

/////////////////////////
////////  FONTS  ////////
/////////////////////////
$assetsPath: '..' !default;
