// NOTE: Color Ramps only require SCSS color values for contrast calculations
@use 'sass:map';
@use 'sass-hex-rgb' as rgb;
@use '../common/mixins' as mixins;
@use '../common/element.core' as element;
@use '../common/functions' as functions;

//////////////////////
//////  Colors  //////
//////////////////////

$lmnt-theme-primary: #368163;
$lmnt-theme-primary-variant: #18573e;
$lmnt-theme-secondary: #255c99;
$lmnt-theme-secondary-variant: #0b3c49;
$lmnt-theme-danger: #cf2d22;
$lmnt-theme-danger-variant: #b3190d;
$lmnt-theme-success: #0ea01a;
$lmnt-theme-success-variant: #13c545;

$primaryMap: (
    primary-50: #b8f8de,
    primary-100: #84e2bc,
    primary-200: #68caa3,
    primary-300: #55b68f,
    primary-400: #419d78,
    primary-500: #368163,
    primary-600: #25674d,
    primary-700: #18573e,
    primary-800: #0f4630,
    primary-900: #032316
);

$secondaryMap: (
    secondary-50: #d6e9ff,
    secondary-100: #9fcdff,
    secondary-200: #72b5ff,
    secondary-300: #5ba5f7,
    secondary-400: #4190e9,
    secondary-500: #2f7dd5,
    secondary-600: #1d6bc1,
    secondary-700: #255c99,
    secondary-800: #14506a,
    secondary-900: #0b3c49
);

$dangerMap: (
    danger-50: #ffeaed,
    danger-100: #ffccce,
    danger-200: #ee9894,
    danger-300: #e3716a,
    danger-400: #ec5145,
    danger-500: #ef4227,
    danger-600: #e13727,
    danger-700: #cf2d22,
    danger-800: #c2261b,
    danger-900: #b3190d
);

$successMap: (
    success-50: #eeffef,
    success-100: #d3ffd7,
    success-200: #a9f6af,
    success-300: #6fef7a,
    success-400: #29e539,
    success-500: #13c545,
    success-600: #0ea01a,
    success-700: #01830c,
    success-800: #075a0e,
    success-900: #053709
);

$dataVizComparativeMap: (
    dataVizComparative-50: #419d78,
    dataVizComparative-100: #0b3c49,
    dataVizComparative-200: #84e2bc,
    dataVizComparative-300: #255c99,
    dataVizComparative-400: #55b68f,
    dataVizComparative-500: #9fccff,
    dataVizComparative-600: #368163,
    dataVizComparative-700: #72b5ff,
    dataVizComparative-800: #18573e,
    dataVizComparative-900: #2f7dd5
);

$dataVizSequential1Map: (
    dataVizSequential1-50: #032316,
    dataVizSequential1-100: #0f4630,
    dataVizSequential1-200: #18573e,
    dataVizSequential1-300: #25674d,
    dataVizSequential1-400: #368163,
    dataVizSequential1-500: #419d78,
    dataVizSequential1-600: #55b68f,
    dataVizSequential1-700: #68caa2,
    dataVizSequential1-800: #84e2bc,
    dataVizSequential1-900: #b8f8de
);

$dataVizSequential2Map: (
    dataVizSequential2-50: #0b3c49,
    dataVizSequential2-100: #14506a,
    dataVizSequential2-200: #255c99,
    dataVizSequential2-300: #1d6bc1,
    dataVizSequential2-400: #2f7dd5,
    dataVizSequential2-500: #4090e9,
    dataVizSequential2-600: #5ba5f7,
    dataVizSequential2-700: #72b5ff,
    dataVizSequential2-800: #9fccff,
    dataVizSequential2-900: #d6e9ff
);

$ancillaryMap: (
    ancillary-100: #ce5f27,
    ancillary-200: #f2c14e
);

@include mixins.colorRamp($primaryMap);
@include mixins.colorRamp($secondaryMap);
@include mixins.colorRamp($dangerMap);
@include mixins.colorRamp($successMap);
@include mixins.colorRamp($ancillaryMap);
@include mixins.colorRamp($dataVizComparativeMap);
@include mixins.colorRamp($dataVizSequential1Map);
@include mixins.colorRamp($dataVizSequential2Map);

//////////////////
/// GRADIENTS ///
/////////////////

$gradient-colors: (
    'primary-to-bottom': $lmnt-theme-primary,
    'primary-dark-to-bottom': map.get($primaryMap, 'primary-900'),
    'primary-darker-to-bottom': darken(map.get($primaryMap, 'primary-900'), 10),
    'secondary-to-bottom': $lmnt-theme-secondary,
    'secondary-dark-to-bottom': map.get($secondaryMap, 'secondary-900'),
    'secondary-darker-to-bottom': darken(map.get($secondaryMap, 'secondary-900'), 10),
    'primary-to-top': $lmnt-theme-primary,
    'primary-dark-to-top': map.get($primaryMap, 'primary-900'),
    'primary-darker-to-top': darken(map.get($primaryMap, 'primary-900'), 10),
    'secondary-to-top': $lmnt-theme-secondary,
    'secondary-dark-to-top': map.get($secondaryMap, 'secondary-900'),
    'secondary-darker-to-top': darken(map.get($secondaryMap, 'secondary-900'), 10),
    'black-to-bottom': element.$black,
    'black-to-top': element.$black,
    'white-to-bottom': element.$white,
    'white-to-top': element.$white
);

@include mixins.gradientRamp($gradient-colors);

///////////////////////////
//////  Font Stacks  //////
///////////////////////////

$Montserrat: "'Montserrat', 'Open Sans', Helvetica, Arial, sans-serif";
$RobotoSlab: "'Roboto Slab', helvetica, arial, sans-serif";

/////////////////////
//////  Theme  //////
/////////////////////

$onClassesMap: map.merge(
    element.$onClassesMap,
    (
        primary-on-surface: $lmnt-theme-primary,
        on-secondary: functions.color-contrast-value-check($lmnt-theme-secondary),
        on-secondary-variant:
            functions.color-contrast-value-check($lmnt-theme-secondary-variant),
        secondary-on-surface: $lmnt-theme-secondary,
        danger-on-surface: $lmnt-theme-danger,
        success-on-surface: #01830c
    )
);

$onPrimaryMap: (
    on-primary-active:
        rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-high-black),
    on-primary-inactive:
        rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-inactive),
    on-primary-disabled:
        rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-disabled),
    on-primary-stroke:
        rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-stroke),
    on-primary-base: rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-high)
);

$onSecondaryMap: (
    on-secondary-active:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-high-black),
    on-secondary-inactive:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-inactive),
    on-secondary-disabled:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-disabled),
    on-secondary-stroke:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-stroke),
    on-secondary-base:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-high)
);

$onSuccessMap: (
    on-success-active:
        rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-high-black),
    on-success-inactive:
        rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-inactive),
    on-success-disabled:
        rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-disabled),
    on-success-stroke:
        rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-stroke),
    on-success-base: rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-high)
);

@each $color, $value in $onClassesMap {
    @include mixins.onBackgroundColorClasses($color: $color, $value: $value);
}
@each $color, $value in $onPrimaryMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

@each $color, $value in $onSecondaryMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

@each $color, $value in $onSuccessMap {
    @include mixins.onClasses($color: $color, $value: $value);
}
:root,
.lmnt,
.lmnt-theme-dataenablement {
    --lmnt-theme-primary-font: #{$Montserrat};
    --lmnt-theme-secondary-font: #{$RobotoSlab};
}

.lmnt,
.lmnt-theme-dataenablement {
    //////////////////////////////////
    ////// BASE LEVEL OVERRIDES //////
    //////////////////////////////////

    // Element Theme Defaults - Primary
    --lmnt-theme-primary: #{$lmnt-theme-primary};
    --lmnt-theme-primary-variant: #{$lmnt-theme-primary-variant};

    --lmnt-theme-primary-on-surface: #{map.get($onClassesMap, 'primary-on-surface')};
    $lmnt-primary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'primary-on-surface')
    );

    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};

    // Element Theme Defaults - Secondary
    --lmnt-theme-secondary: #{$lmnt-theme-secondary};
    --lmnt-theme-on-secondary: #{map.get($onClassesMap, 'on-secondary')};
    --lmnt-theme-secondary-variant: #{$lmnt-theme-secondary-variant};
    --lmnt-theme-on-secondary-variant: #{map.get($onClassesMap, 'on-secondary-variant')};
    --lmnt-theme-secondary-on-surface: #{map.get($onClassesMap, 'secondary-on-surface')};

    // On surface rgb
    $lmnt-primary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'primary-on-surface')
    );
    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};

    $lmnt-secondary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'secondary-on-surface')
    );
    --lmnt-secondary-on-surface-rgb: #{$lmnt-secondary-on-surface-rgb};

    $lmnt-danger-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'danger-on-surface')
    );
    --lmnt-danger-on-surface-rgb: #{$lmnt-danger-on-surface-rgb};

    $lmnt-success-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'danger-on-surface')
    );
    --lmnt-success-on-surface-rgb: #{$lmnt-success-on-surface-rgb};

    // On color rgb
    $lmnt-on-primary-rgb: rgb.toValues(map.get($onClassesMap, 'on-primary'));
    --lmnt-on-primary-rgb: #{$lmnt-on-primary-rgb};

    $lmnt-on-secondary-rgb: rgb.toValues(map.get($onClassesMap, 'on-secondary'));
    --lmnt-on-secondary-rgb: #{$lmnt-on-secondary-rgb};

    $lmnt-on-danger-rgb: rgb.toValues(map.get($onClassesMap, 'on-danger'));
    --lmnt-on-danger-rgb: #{$lmnt-on-danger-rgb};

    $lmnt-on-success-rgb: rgb.toValues(map.get($onClassesMap, 'on-success'));
    --lmnt-on-success-rgb: #{$lmnt-on-success-rgb};

    // Element Primary Color Ramp
    @each $name, $color in $primaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Secondary Color Ramp
    @each $name, $color in $secondaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Ancillary Color Ramp
    @each $name, $color in $ancillaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Sequential 1 Color Ramp
    @each $name, $color in $dataVizSequential1Map {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Sequential 2 Color Ramp
    @each $name, $color in $dataVizSequential2Map {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Comparative Color Ramp
    @each $name, $color in $dataVizComparativeMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Success Color Ramp
    @each $name, $color in $successMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Danger Color Ramp
    @each $name, $color in $dangerMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element on Colors
    // Element On Primary Color Ramp
    @each $name, $color in $onPrimaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element On Secondary Color Ramp
    @each $name, $color in $onSecondaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element On Success Color Ramp
    @each $name, $color in $onSuccessMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    ///////////////////////////////////////
    ////// COMPONENT LEVEL OVERRIDES //////
    ///////////////////////////////////////

    // Snackbar
    --lmnt-theme-on-snackbar: #68caa2;
    --lmnt-theme-on-snackbar-variant: #72b5ff;

    // Typography
    --lmnt-typography-link-color: #368163;

    // Display 1
    --mdc-typography-headline1-font-family: #{$RobotoSlab};
    --mdc-typography-headline1-font-weight: 700;

    // Display 2
    --mdc-typography-headline2-font-family: #{$RobotoSlab};
    --mdc-typography-headline2-font-weight: 700;
    --mdc-typography-headline2-line-height: #{functions.toRem(72)};

    // Display 3
    --mdc-typography-headline3-font-family: #{$RobotoSlab};
    --mdc-typography-headline3-font-weight: 700;

    // Display 4
    --mdc-typography-headline4-font-family: #{$RobotoSlab};
    --mdc-typography-headline4-font-weight: 700;
    --mdc-typography-headline4-letter-spacing: 0.25px;

    // Display 5
    --mdc-typography-headline5-font-family: #{$RobotoSlab};
    --mdc-typography-headline5-font-weight: 700;

    // Display 6
    --mdc-typography-headline6-font-family: #{$RobotoSlab};
    --mdc-typography-headline6-font-weight: 700;

    // Subtitle 1
    --mdc-typography-subtitle1-font-family: #{$Montserrat};

    // Subtitle 2
    --mdc-typography-subtitle2-font-family: #{$Montserrat};

    // Body 1
    --mdc-typography-body1-font-family: #{$Montserrat};

    // Body 2
    --mdc-typography-body2-font-family: #{$Montserrat};

    // Caption
    --mdc-typography-caption-font-family: #{$Montserrat};

    // Button
    --mdc-typography-button-font-family: #{$RobotoSlab};
    --mdc-typography-button-font-weight: 700;

    // Overline
    --mdc-typography-overline-font-family: #{$Montserrat};
}

/////////////////////////
////////  FONTS  ////////
/////////////////////////
$assetsPath: '..' !default;

/* stylelint-disable scale-unlimited/declaration-strict-value, font-weight-notation, indentation, font-family-name-quotes */

// Montserrat regular, medium and bold
@font-face {
    font-display: swap;
    font-family: 'Montserrat';
    font-style: normal;
    font-weight: 400;
    src: url('#{$assetsPath}/assets/fonts/Montserrat/Montserrat-Regular.ttf')
        format('truetype');
}

@font-face {
    font-display: swap;
    font-family: 'Montserrat';
    font-style: italic;
    font-weight: 400;
    src: url('#{$assetsPath}/assets/fonts/Montserrat/Montserrat-Italic.ttf')
        format('truetype');
}

@font-face {
    font-display: swap;
    font-family: 'Montserrat';
    font-style: normal;
    font-weight: 500;
    src: url('#{$assetsPath}/assets/fonts/Montserrat/Montserrat-Medium.ttf')
        format('truetype');
}

@font-face {
    font-display: swap;
    font-family: 'Montserrat';
    font-style: italic;
    font-weight: 500;
    src: url('#{$assetsPath}/assets/fonts/Montserrat/Montserrat-MediumItalic.ttf')
        format('truetype');
}

@font-face {
    font-display: swap;
    font-family: 'Montserrat';
    font-style: normal;
    font-weight: 700;
    src: url('#{$assetsPath}/assets/fonts/Montserrat/Montserrat-Bold.ttf')
        format('truetype');
}

@font-face {
    font-display: swap;
    font-family: 'Montserrat';
    font-style: italic;
    font-weight: 700;
    src: url('#{$assetsPath}/assets/fonts/Montserrat/Montserrat-BoldItalic.ttf')
        format('truetype');
}

// Roboto Slab
@font-face {
    font-display: swap;
    font-family: 'Roboto Slab';
    font-style: normal;
    font-weight: 300;
    src: url('#{$assetsPath}/assets/fonts/Roboto_Slab/RobotoSlab-Light.ttf')
        format('truetype');
}

@font-face {
    font-display: swap;
    font-family: 'Roboto Slab';
    font-style: normal;
    font-weight: 400;
    src: url('#{$assetsPath}/assets/fonts/Roboto_Slab/RobotoSlab-Regular.ttf')
        format('truetype');
}

@font-face {
    font-display: swap;
    font-family: 'Roboto Slab';
    font-style: normal;
    font-weight: 700;
    src: url('#{$assetsPath}/assets/fonts/Roboto_Slab/RobotoSlab-Bold.ttf')
        format('truetype');
}

/* stylelint-enable scale-unlimited/declaration-strict-value, font-weight-notation, indentation, font-family-name-quotes */
