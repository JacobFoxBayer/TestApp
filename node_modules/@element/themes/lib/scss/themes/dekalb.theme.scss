// NOTE: Color Ramps only require SCSS color values for contrast calculations
@use 'sass:math';

@use 'sass:map';
@use 'sass-hex-rgb' as rgb;
@use '../common/mixins' as mixins;
@use '../common/element.core' as element;
@use '../common/functions' as functions;

//////////////////////
//////  Colors  //////
//////////////////////

$cod-gray: #11100e;

$lmnt-theme-primary: #4f432b;
$lmnt-theme-primary-variant: #5b5034;
$lmnt-theme-secondary: #ffd22b;
$lmnt-theme-secondary-variant: #ffbd04;

$primaryMap: (
    primary-50: #efeee6,
    primary-100: #d7d2c5,
    primary-200: #bcb4a2,
    primary-300: #9f967e,
    primary-400: #897e61,
    primary-500: #736845,
    primary-600: #695e3e,
    primary-700: #5b5034,
    primary-800: #4f432b,
    primary-900: #403420
);

$secondaryMap: (
    secondary-50: #fff9e1,
    secondary-100: #ffefb4,
    secondary-200: #ffe582,
    secondary-300: #ffda50,
    secondary-400: #ffd22b,
    secondary-500: #ffca05,
    secondary-600: #ffc504,
    secondary-700: #ffbd04,
    secondary-800: #ffb703,
    secondary-900: #ffab01
);

$successMap: (
    success-50: #eeffef,
    success-100: #d3ffd7,
    success-200: #a9f6af,
    success-300: #6fef7a,
    success-400: #29e539,
    success-500: #13c545,
    success-600: #0ea01a,
    success-700: #01830c,
    success-800: #075a0e,
    success-900: #053709
);

$dangerMap: (
    danger-50: #ffeaed,
    danger-100: #ffccce,
    danger-200: #ee9894,
    danger-300: #e3716a,
    danger-400: #ec5145,
    danger-500: #ef4227,
    danger-600: #e13727,
    danger-700: #cf2d22,
    danger-800: #c2261b,
    danger-900: #b3190d
);

$dataVizComparativeMap: (
    dataVizComparative-50: #403420,
    dataVizComparative-100: #f3a300,
    dataVizComparative-200: #bcb4a2,
    dataVizComparative-300: #ffbd04,
    dataVizComparative-400: #efeee6,
    dataVizComparative-500: #ffe582,
    dataVizComparative-600: #4f432b,
    dataVizComparative-700: #ffab01,
    dataVizComparative-800: #eaeaea,
    dataVizComparative-900: #5c5c5c
);

$dataVizSequential1Map: (
    dataVizSequential1-50: #403420,
    dataVizSequential1-100: #4f432b,
    dataVizSequential1-200: #5b5034,
    dataVizSequential1-300: #695e3e,
    dataVizSequential1-400: #695e3e,
    dataVizSequential1-500: #736845,
    dataVizSequential1-600: #9f967e,
    dataVizSequential1-700: #bcb4a2,
    dataVizSequential1-800: #d7d2c5,
    dataVizSequential1-900: #efeee6
);

$dataVizSequential2Map: (
    dataVizSequential2-50: #f3a300,
    dataVizSequential2-100: #ffab01,
    dataVizSequential2-200: #ffb703,
    dataVizSequential2-300: #ffbd04,
    dataVizSequential2-400: #ffca05,
    dataVizSequential2-500: #ffca05,
    dataVizSequential2-600: #ffd22b,
    dataVizSequential2-700: #ffe582,
    dataVizSequential2-800: #ffefb4,
    dataVizSequential2-900: #fff9e1
);
@include mixins.colorRamp($primaryMap);
@include mixins.colorRamp($secondaryMap);
@include mixins.colorRamp($successMap);
@include mixins.colorRamp($dangerMap);
@include mixins.colorRamp($dataVizComparativeMap);
@include mixins.colorRamp($dataVizSequential1Map);
@include mixins.colorRamp($dataVizSequential2Map);

//////////////////
/// GRADIENTS ///
/////////////////

$gradient-colors: (
    'primary-to-bottom': $lmnt-theme-primary,
    'primary-dark-to-bottom': map.get($primaryMap, 'primary-900'),
    'primary-darker-to-bottom': darken(map.get($primaryMap, 'primary-900'), 10),
    'secondary-to-bottom': $lmnt-theme-secondary,
    'secondary-dark-to-bottom': map.get($secondaryMap, 'secondary-900'),
    'secondary-darker-to-bottom': darken(map.get($secondaryMap, 'secondary-900'), 10),
    'primary-to-top': $lmnt-theme-primary,
    'primary-dark-to-top': map.get($primaryMap, 'primary-900'),
    'primary-darker-to-top': darken(map.get($primaryMap, 'primary-900'), 10),
    'secondary-to-top': $lmnt-theme-secondary,
    'secondary-dark-to-top': map.get($secondaryMap, 'secondary-900'),
    'secondary-darker-to-top': darken(map.get($secondaryMap, 'secondary-900'), 10),
    'black-to-bottom': element.$black,
    'black-to-top': element.$black,
    'white-to-bottom': element.$white,
    'white-to-top': element.$white
);

@include mixins.gradientRamp($gradient-colors);

///////////////////////////
//////  Font Stacks  //////
///////////////////////////

$Gotham: "'HCo Gotham SSm', 'Helvetica Neue', Helvetica, Arial, sans-serif";
$DIN: "'FF DIN', 'Arial Black', 'Arial Bold', gadget, sans-serif";

/////////////////////
//////  Theme  //////
/////////////////////

// NOTE: $cod-gray replaces typical $black in `on-color` contexts for Dekalb
$onClassesMap: map.merge(
    element.$onClassesMap,
    (
        on-background: functions.color-contrast-value-check(element.$white, $cod-gray),
        on-surface: functions.color-contrast-value-check(element.$white, $cod-gray),
        primary-on-surface: $lmnt-theme-primary,
        on-secondary:
            functions.color-contrast-value-check($lmnt-theme-secondary, $cod-gray),
        on-secondary-variant:
            functions.color-contrast-value-check($lmnt-theme-secondary-variant, $cod-gray),
        secondary-on-surface: #9b6001
    )
);

$onSurfaceMap: (
    on-surface-active:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-high-black),
    on-surface-inactive:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-inactive),
    on-surface-disabled:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-disabled),
    on-surface-stroke:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-stroke),
    on-surface-base: rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-high)
);

$onSecondaryMap: (
    on-secondary-active:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-high-black),
    on-secondary-inactive:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-inactive),
    on-secondary-disabled:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-disabled),
    on-secondary-stroke:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-stroke),
    on-secondary-base:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-high)
);

@each $color, $value in $onClassesMap {
    @include mixins.onBackgroundColorClasses($color: $color, $value: $value);
}

@each $color, $value in $onSurfaceMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

@each $color, $value in $onSecondaryMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

:root,
.lmnt,
.lmnt-theme-dekalb {
    // Element Theme Defaults - Surface
    --lmnt-theme-on-background: #{map.get($onClassesMap, 'on-background')};
    --lmnt-theme-on-surface: #{map.get($onClassesMap, 'on-surface')};
    --lmnt-theme-primary-font: #{$Gotham};
    // Element Theme Defaults - Surface
    --lmnt-theme-surface: #{#fff};
}

.lmnt,
.lmnt-theme-dekalb {
    //////////////////////////////////
    ////// BASE LEVEL OVERRIDES //////
    //////////////////////////////////

    // Element Theme Defaults - Fonts
    --lmnt-theme-primary-font: #{$Gotham};
    --lmnt-theme-secondary-font: #{$DIN};

    // Element Theme Defaults - Background
    --lmnt-theme-on-background: #{map.get($onClassesMap, 'on-surface')};

    --lmnt-theme-on-surface: #{map.get($onClassesMap, 'on-surface')};

    // Element Theme Defaults - Primary
    --lmnt-theme-primary: #{$lmnt-theme-primary};
    --lmnt-theme-primary-variant: #{$lmnt-theme-primary-variant};

    --lmnt-theme-primary-on-surface: #{map.get($onClassesMap, 'primary-on-surface')};
    $lmnt-primary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'primary-on-surface')
    );

    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};

    // Element Theme Defaults - Secondary
    --lmnt-theme-secondary: #{$lmnt-theme-secondary};
    --lmnt-theme-on-secondary: #{map.get($onClassesMap, 'on-secondary')};
    --lmnt-theme-secondary-variant: #{$lmnt-theme-secondary-variant};
    --lmnt-theme-secondary-on-surface: #{map.get($onClassesMap, 'secondary-on-surface')};
    --lmnt-theme-on-secondary-variant: #{map.get($onClassesMap, 'on-secondary-variant')};

    // On surface rgb
    $lmnt-primary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'primary-on-surface')
    );
    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};

    $lmnt-secondary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'secondary-on-surface')
    );
    --lmnt-secondary-on-surface-rgb: #{$lmnt-secondary-on-surface-rgb};

    $lmnt-danger-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'danger-on-surface')
    );
    --lmnt-danger-on-surface-rgb: #{$lmnt-danger-on-surface-rgb};

    $lmnt-success-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'danger-on-surface')
    );
    --lmnt-success-on-surface-rgb: #{$lmnt-success-on-surface-rgb};

    // On color rgb
    $lmnt-on-primary-rgb: rgb.toValues(map.get($onClassesMap, 'on-primary'));
    --lmnt-on-primary-rgb: #{$lmnt-on-primary-rgb};

    $lmnt-on-secondary-rgb: rgb.toValues(map.get($onClassesMap, 'on-secondary'));
    --lmnt-on-secondary-rgb: #{$lmnt-on-secondary-rgb};

    $lmnt-on-danger-rgb: rgb.toValues(map.get($onClassesMap, 'on-danger'));
    --lmnt-on-danger-rgb: #{$lmnt-on-danger-rgb};

    $lmnt-on-success-rgb: rgb.toValues(map.get($onClassesMap, 'on-success'));
    --lmnt-on-success-rgb: #{$lmnt-on-success-rgb};

    // Element Primary Color Ramp
    @each $name, $color in $primaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Secondary Color Ramp
    @each $name, $color in $secondaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Sequential 1 Color Ramp
    @each $name, $color in $dataVizSequential1Map {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Sequential 2 Color Ramp
    @each $name, $color in $dataVizSequential2Map {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Comparative Color Ramp
    @each $name, $color in $dataVizComparativeMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Success Color Ramp
    @each $name, $color in $successMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Danger Color Ramp
    @each $name, $color in $dangerMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element on Colors

    // Element On Surface Color Ramp
    @each $name, $color in $onSurfaceMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element On Secondary Color Ramp
    @each $name, $color in $onSecondaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    ///////////////////////////////////////
    ////// COMPONENT LEVEL OVERRIDES //////
    ///////////////////////////////////////

    // Button
    --lmnt-button-shape-radius: 0;

    // Button - On Primary BG
    // TODO: deprecate styling based on `.lmnt-theme-primary-bg` in favor of variant styling
    --lmnt-button-outlined-border-color--on-primary: var(--lmnt-theme-secondary);
    --lmnt-button-outlined-text-color--on-primary: var(--lmnt-theme-secondary);
    --lmnt-button-text-color--on-primary: var(--lmnt-theme-secondary);

    // Typography

    --lmnt-typography-link-color: #{$lmnt-theme-primary-variant};

    // Display 1
    --mdc-typography-headline1-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline1-font-weight: 400;
    --mdc-typography-headline1-letter-spacing: -0.016em; // -1.5px or -0.016em
    --mdc-typography-headline1-line-height: 1; // 96px or 1
    --mdc-typography-headline1-text-transform: uppercase;

    // Display 2
    --mdc-typography-headline2-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline2-font-weight: 400;
    --mdc-typography-headline2-letter-spacing: -0.007em; // -0.4px or -0.007em
    --mdc-typography-headline2-line-height: 1; // 60px or 1
    --mdc-typography-headline2-text-transform: uppercase;

    // Display 3
    --mdc-typography-headline3-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline3-letter-spacing: 0.002em; // 0.1px or 0.002em
    --mdc-typography-headline3-line-height: 1; // 48px or 1
    --mdc-typography-headline3-text-transform: uppercase;

    // Display 4
    --mdc-typography-headline4-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline4-letter-spacing: 0.009em; // 0.3px or 0.009em
    --mdc-typography-headline4-line-height: #{math.div(36px, 34px)}; // 36px
    --mdc-typography-headline4-text-transform: uppercase;

    // Display 5
    --mdc-typography-headline5-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline5-letter-spacing: 0.008em; // 0.2px or 0.008em
    --mdc-typography-headline5-line-height: #{math.div(28px, 24px)}; // 28px
    --mdc-typography-headline5-text-transform: uppercase;

    // Display 6
    --mdc-typography-headline6-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline6-font-weight: 400;
    --mdc-typography-headline6-letter-spacing: 0.02em; // 0.4px or 0.020em
    --mdc-typography-headline6-line-height: #{math.div(24px, 20px)}; // 24px
    --mdc-typography-headline6-text-transform: uppercase;

    // Subtitle 1
    --mdc-typography-subtitle1-font-weight: 500;
    --mdc-typography-subtitle1-letter-spacing: 0;
    --mdc-typography-subtitle1-line-height: #{math.div(20px, 16px)}; // 20px

    // Subtitle 2
    --mdc-typography-subtitle2-letter-spacing: 0;
    --mdc-typography-subtitle2-line-height: #{math.div(20px, 14px)}; // 20px

    // Body 1
    --mdc-typography-body1-font-weight: 300;
    --mdc-typography-body1-letter-spacing: 0.006em; // 0.1px or 0.006em
    --mdc-typography-body1-line-height: #{math.div(28px, 16px)}; // 28px

    // Body 2
    --mdc-typography-body2-font-weight: 300;
    --mdc-typography-body2-letter-spacing: 0;
    --mdc-typography-body2-line-height: #{math.div(20px, 14px)}; // 20px

    // Caption
    --mdc-typography-caption-font-weight: 300;
    --mdc-typography-caption-letter-spacing: 0.008em; // 0.1px or 0.008em
    --mdc-typography-caption-line-height: #{math.div(16px, 12px)}; // 16px

    // Button
    --mdc-typography-button-font-weight: 700;
    --mdc-typography-button-letter-spacing: 0.107em; // 1.5px or 0.107em
    --mdc-typography-button-line-height: #{math.div(16px, 14px)}; // 16px

    // Overline
    --mdc-typography-overline-font-size: 0.875em; // 14px
    --mdc-typography-overline-letter-spacing: 0.018em; // 0.25px or 0.018em
    --mdc-typography-overline-line-height: #{math.div(16px, 14px)}; // 16px
}

/////////////////////////
////////  FONTS  ////////
/////////////////////////
$assetsPath: '..' !default;
/* stylelint-disable scale-unlimited/declaration-strict-value, font-weight-notation, indentation */

// Gotham - light, book, medium, bold
@font-face {
    font-display: swap;
    font-family: 'HCo Gotham SSm';
    font-style: normal;
    font-weight: 300;
    src: url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff2/GothamSSm-Light_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff/GothamSSm-Light_Web.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'HCo Gotham SSm';
    font-style: italic;
    font-weight: 300;
    src: url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff2/GothamSSm-LightItalic_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff/GothamSSm-LightItalic_Web.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'HCo Gotham SSm';
    font-style: normal;
    font-weight: 400;
    src: url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff2/GothamSSm-Book_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff/GothamSSm-Book_Web.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'HCo Gotham SSm';
    font-style: italic;
    font-weight: 400;
    src: url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff2/GothamSSm-BookItalic_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff/GothamSSm-BookItalic_Web.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'HCo Gotham SSm';
    font-style: normal;
    font-weight: 500;
    src: url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff2/GothamSSm-Medium_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff/GothamSSm-Medium_Web.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'HCo Gotham SSm';
    font-style: italic;
    font-weight: 500;
    src: url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff2/GothamSSm-MediumItalic_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff/GothamSSm-MediumItalic_Web.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'HCo Gotham SSm';
    font-style: normal;
    font-weight: 700;
    src: url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff2/GothamSSm-Bold_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff/GothamSSm-Bold_Web.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'HCo Gotham SSm';
    font-style: italic;
    font-weight: 700;
    src: url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff2/GothamSSm-BoldItalic_Web.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/HCo_GothamSSm_Web/hco_fonts/woff/GothamSSm-BoldItalic_Web.woff')
            format('woff');
}

// DIN - black+italic
@font-face {
    font-display: swap;
    font-family: 'FF DIN';
    font-style: italic;
    font-weight: 700;
    src: url('#{$assetsPath}/assets/fonts/FF_DIN/33866E_1_unhinted_0.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/FF_DIN/33866E_1_unhinted_0.woff') format('woff'),
        url('#{$assetsPath}/assets/fonts/FF_DIN/33866E_1_unhinted_0.ttf')
            format('truetype');
}

/* stylelint-enable scale-unlimited/declaration-strict-value, font-weight-notation, indentation */
