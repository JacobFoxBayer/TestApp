// NOTE: Color Ramps only require SCSS color values for contrast calculations
@use 'sass:map';
@use 'sass-hex-rgb' as rgb;
@use '../common/mixins' as mixins;
@use '../common/element.core' as element;
@use '../common/functions' as functions;

////////////////////////
//////  Colors   ///////
////////////////////////

$lmnt-theme-primary: #10384f;
$lmnt-theme-primary-variant: #006f9b;
$lmnt-theme-secondary: #dfe3e7;
$lmnt-theme-secondary-variant: #4c4d4f;

$primaryMap: (
    primary-50: #7abed9,
    primary-100: #5baac9,
    primary-200: #3d96ba,
    primary-300: #1e82aa,
    primary-400: #006f9b,
    primary-500: #03648b,
    primary-600: #06597c,
    primary-700: #094e6d,
    primary-800: #0c435e,
    primary-900: #10384f
);

$secondaryMap: (
    secondary-50: #dfe3e7,
    secondary-100: #cacdd1,
    secondary-200: #b5b8bb,
    secondary-300: #a0a3a6,
    secondary-400: #8b8d90,
    secondary-500: #76787a,
    secondary-600: #616365,
    secondary-700: #4c4d4f,
    secondary-800: #373839,
    secondary-900: #222324
);

$successMap: (
    success-50: #5ec266,
    success-100: #4bb554,
    success-200: #38a842,
    success-300: #269c30,
    success-400: #138f1e,
    success-500: #01830c,
    success-600: #006a09,
    success-700: #005107,
    success-800: #003805,
    success-900: #002003
);

$dangerMap: (
    danger-50: #ffeaed,
    danger-100: #ffccce,
    danger-200: #ee9894,
    danger-300: #e3716a,
    danger-400: #ec5145,
    danger-500: #ef4227,
    danger-600: #e13727,
    danger-700: #cf2d22,
    danger-800: #c2261b,
    danger-900: #b3190d
);

$dataVizComparativeMap: (
    dataVizComparative-50: #0c435e,
    dataVizComparative-100: #4c4d4f,
    dataVizComparative-200: #3d96ba,
    dataVizComparative-300: #cacdd1,
    dataVizComparative-400: #094e6d,
    dataVizComparative-500: #616365,
    dataVizComparative-600: #5baac9,
    dataVizComparative-700: #a0a3a6,
    dataVizComparative-800: #1e82aa,
    dataVizComparative-900: #dfe3e7
);

$dataVizSequential1Map: (
    dataVizSequential1-50: #10384f,
    dataVizSequential1-100: #0c435e,
    dataVizSequential1-200: #094e6d,
    dataVizSequential1-300: #06597c,
    dataVizSequential1-400: #03648b,
    dataVizSequential1-500: #006f9b,
    dataVizSequential1-600: #1e82aa,
    dataVizSequential1-700: #3d96ba,
    dataVizSequential1-800: #5baac9,
    dataVizSequential1-900: #7abed9
);

$dataVizSequential2Map: (
    dataVizSequential2-50: #222324,
    dataVizSequential2-100: #373839,
    dataVizSequential2-200: #4c4d4f,
    dataVizSequential2-300: #616365,
    dataVizSequential2-400: #76787a,
    dataVizSequential2-500: #8b8d90,
    dataVizSequential2-600: #a0a3a6,
    dataVizSequential2-700: #b5b8bb,
    dataVizSequential2-800: #cacdd1,
    dataVizSequential2-900: #dfe3e7
);

@include mixins.colorRamp($primaryMap);
@include mixins.colorRamp($secondaryMap);
@include mixins.colorRamp($successMap);
@include mixins.colorRamp($dataVizComparativeMap);
@include mixins.colorRamp($dataVizSequential1Map);
@include mixins.colorRamp($dataVizSequential2Map);
@include mixins.colorRamp($dangerMap);

///////////////////////////
//////  Font Stacks  //////
///////////////////////////

$Roboto: "'Roboto', 'Arial Narrow', helvetica, arial, sans-serif";

/////////////////////
//////  Theme  //////
/////////////////////

$onClassesMap: map.merge(
    element.$onClassesMap,
    (
        primary-on-surface: $lmnt-theme-primary,
        on-secondary: functions.color-contrast-value-check($lmnt-theme-secondary),
        on-secondary-variant:
            functions.color-contrast-value-check($lmnt-theme-secondary-variant),
        secondary-on-surface: #222324
    )
);

$onSurfaceMap: (
    on-surface-active:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-high-black),
    on-surface-inactive:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-inactive),
    on-surface-disabled:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-disabled),
    on-surface-stroke:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-stroke),
    on-surface-base: rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-high)
);

$onPrimaryMap: (
    on-primary-active:
        rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-high-black),
    on-primary-inactive:
        rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-inactive),
    on-primary-disabled:
        rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-disabled),
    on-primary-stroke:
        rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-stroke),
    on-primary-base: rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-high)
);

$onSecondaryMap: (
    on-secondary-active:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-high-black),
    on-secondary-inactive:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-inactive),
    on-secondary-disabled:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-disabled),
    on-secondary-stroke:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-stroke),
    on-secondary-base:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-high)
);

$onSuccessMap: (
    on-success-active:
        rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-high-black),
    on-success-inactive:
        rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-inactive),
    on-success-disabled:
        rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-disabled),
    on-success-stroke:
        rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-stroke),
    on-success-base: rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-high)
);

$onDangerMap: (
    on-danger-active:
        rgba(map.get($onClassesMap, 'on-danger'), element.$emphasis-high-black),
    on-danger-inactive:
        rgba(map.get($onClassesMap, 'on-danger'), element.$emphasis-inactive),
    on-danger-disabled:
        rgba(map.get($onClassesMap, 'on-danger'), element.$emphasis-disabled),
    on-danger-stroke: rgba(map.get($onClassesMap, 'on-danger'), element.$emphasis-stroke),
    on-danger-base: rgba(map.get($onClassesMap, 'on-danger'), element.$emphasis-high)
);

@each $color, $value in $onClassesMap {
    @include mixins.onBackgroundColorClasses($color: $color, $value: $value);
}

@each $color, $value in $onPrimaryMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

@each $color, $value in $onSecondaryMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

@each $color, $value in $onSuccessMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

@each $color, $value in $onSurfaceMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

//////////////////
/// GRADIENTS ///
/////////////////

$gradient-colors: (
    'primary-to-bottom': $lmnt-theme-primary,
    'primary-dark-to-bottom': map.get($primaryMap, 'primary-900'),
    'primary-darker-to-bottom': darken(map.get($primaryMap, 'primary-900'), 10),
    'secondary-to-bottom': $lmnt-theme-secondary,
    'secondary-dark-to-bottom': map.get($secondaryMap, 'secondary-900'),
    'secondary-darker-to-bottom': darken(map.get($secondaryMap, 'secondary-900'), 10),
    'primary-to-top': $lmnt-theme-primary,
    'primary-dark-to-top': map.get($primaryMap, 'primary-900'),
    'primary-darker-to-top': darken(map.get($primaryMap, 'primary-900'), 10),
    'secondary-to-top': $lmnt-theme-secondary,
    'secondary-dark-to-top': map.get($secondaryMap, 'secondary-900'),
    'secondary-darker-to-top': darken(map.get($secondaryMap, 'secondary-900'), 10),
    'black-to-bottom': element.$black,
    'black-to-top': element.$black,
    'white-to-bottom': element.$white,
    'white-to-top': element.$white
);

@include mixins.gradientRamp($gradient-colors);

:root,
.lmnt,
.lmnt-theme-climateportal {
    // Element Theme Defaults - Surface
    --lmnt-theme-on-background: #{map.get($onClassesMap, 'on-background')};
    --lmnt-theme-on-surface: #{map.get($onClassesMap, 'on-surface')};
    --lmnt-theme-primary-font: #{$Roboto};
}

.lmnt,
.lmnt-theme-climateportal {
    //////////////////////////////////
    ////// BASE LEVEL OVERRIDES //////
    //////////////////////////////////

    // Element Theme Defaults - Fonts
    --lmnt-theme-primary-font: #{$Roboto};

    // Element Theme Defaults - Background
    --lmnt-theme-on-background: #{map.get($onClassesMap, 'on-surface')};

    // Element Theme Defaults - Surface
    --lmnt-theme-on-surface: #{map.get($onClassesMap, 'on-surface')};

    // Element Theme Defaults - Primary
    --lmnt-theme-primary: #{$lmnt-theme-primary};
    --lmnt-theme-primary-variant: #{$lmnt-theme-primary-variant};

    --lmnt-theme-primary-on-surface: #{map.get($onClassesMap, 'primary-on-surface')};
    $lmnt-primary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'primary-on-surface')
    );

    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};

    // Element Theme Defaults - Secondary
    --lmnt-theme-secondary: #{$lmnt-theme-secondary};
    --lmnt-theme-on-secondary: #{map.get($onClassesMap, 'on-secondary')};
    --lmnt-theme-secondary-variant: #{$lmnt-theme-secondary-variant};
    --lmnt-theme-on-secondary-variant: #{map.get($onClassesMap, 'on-secondary-variant')};
    --lmnt-theme-secondary-on-surface: #{map.get($onClassesMap, 'secondary-on-surface')};

    // On surface rgb
    $lmnt-primary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'primary-on-surface')
    );
    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};

    $lmnt-secondary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'secondary-on-surface')
    );
    --lmnt-secondary-on-surface-rgb: #{$lmnt-secondary-on-surface-rgb};

    $lmnt-danger-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'danger-on-surface')
    );
    --lmnt-danger-on-surface-rgb: #{$lmnt-danger-on-surface-rgb};

    $lmnt-success-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'danger-on-surface')
    );
    --lmnt-success-on-surface-rgb: #{$lmnt-success-on-surface-rgb};

    // On color rgb
    $lmnt-on-primary-rgb: rgb.toValues(map.get($onClassesMap, 'on-primary'));
    --lmnt-on-primary-rgb: #{$lmnt-on-primary-rgb};

    $lmnt-on-secondary-rgb: rgb.toValues(map.get($onClassesMap, 'on-secondary'));
    --lmnt-on-secondary-rgb: #{$lmnt-on-secondary-rgb};

    $lmnt-on-danger-rgb: rgb.toValues(map.get($onClassesMap, 'on-danger'));
    --lmnt-on-danger-rgb: #{$lmnt-on-danger-rgb};

    $lmnt-on-success-rgb: rgb.toValues(map.get($onClassesMap, 'on-success'));
    --lmnt-on-success-rgb: #{$lmnt-on-success-rgb};

    // Element Primary Color Ramp
    @each $name, $color in $primaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Secondary Color Ramp
    @each $name, $color in $secondaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Sequential 1 Color Ramp
    @each $name, $color in $dataVizSequential1Map {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Sequential 2 Color Ramp
    @each $name, $color in $dataVizSequential2Map {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Comparative Color Ramp
    @each $name, $color in $dataVizComparativeMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Success Color Ramp
    @each $name, $color in $successMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Danger Color Ramp
    @each $name, $color in $dangerMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element on Colors

    // Element On Surface Color Ramp
    @each $name, $color in $onSurfaceMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element On Primary Color Ramp
    @each $name, $color in $onPrimaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element On Secondary Color Ramp
    @each $name, $color in $onSecondaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element On Success Color Ramp
    @each $name, $color in $onSuccessMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element On Danger Color Ramp
    @each $name, $color in $onDangerMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    ///////////////////////////////////////
    ////// COMPONENT LEVEL OVERRIDES //////
    ///////////////////////////////////////

    // Typography
    --lmnt-typography-link-color: #{$lmnt-theme-primary};

    // Display 1
    --mdc-typography-headline1-font-weight: 300;
    --mdc-typography-headline1-letter-spacing: -0.002em; // -0.2px
    --mdc-typography-headline1-line-height: 1; // 96px or 1

    // Display 2
    --mdc-typography-headline2-font-weight: 300;
    --mdc-typography-headline2-line-height: 1.0667;

    // Display 3
    --mdc-typography-headline3-font-weight: 400;
    --mdc-typography-headline3-letter-spacing: 0.031em; // 1.5px
    --mdc-typography-headline3-line-height: 1.0833;

    // Display 4
    --mdc-typography-headline4-font-weight: 400;
    --mdc-typography-headline4-letter-spacing: 0.007em; // 0.25px
    --mdc-typography-headline4-line-height: 1.0588;

    // Display 5
    --mdc-typography-headline5-font-weight: 400;
    --mdc-typography-headline5-letter-spacing: 0.017em; // 0.4px
    --mdc-typography-headline5-line-height: 1; // 24px

    // Display 6
    --mdc-typography-headline6-font-weight: 500;
    --mdc-typography-headline6-letter-spacing: 0.017em; // 0.35px
    --mdc-typography-headline6-line-height: 1.2;

    // Subtitle 1
    --mdc-typography-subtitle1-font-weight: 400;
    --mdc-typography-subtitle1-line-height: 1.5; // 24px

    // Subtitle 2
    --mdc-typography-subtitle2-line-height: 1.4285;

    // Body 1
    --mdc-typography-body1-font-weight: 400;
    --mdc-typography-body1-letter-spacing: 0;
    --mdc-typography-body1-line-height: 1.75;

    // Body 2
    --mdc-typography-body2-font-weight: 400;
    --mdc-typography-body2-line-height: 1.429;

    // Caption
    --mdc-typography-caption-font-weight: 400;
    --mdc-typography-caption-line-height: 1.333;
    --lmnt-typography--caption-bold-font-weight: 500;

    // Button
    --mdc-typography-button-font-weight: 500;
    --mdc-typography-button-letter-spacing: 0.108em; // 1.25px
    --mdc-typography-button-line-height: 1.333;

    // Overline
    --mdc-typography-overline-font-weight: 500;
    --mdc-typography-button-letter-spacing: 0.108em; // 1.29px
    --mdc-typography-overline-line-height: 1.333;
}

/////////////////////////
////////  FONTS  ////////
/////////////////////////
$assetsPath: '..' !default;
