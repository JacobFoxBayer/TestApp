// NOTE: Color Ramps only require SCSS color values for contrast calculations
@use 'sass:map';
@use 'sass-hex-rgb' as rgb;
@use '../common/mixins' as mixins;
@use '../common/element.core' as element;
@use '../common/functions' as functions;

//////////////////////
//////  Colors  //////
//////////////////////

$lmnt-theme-background: element.$white;
$lmnt-theme-surface: #f9f4eb;
$lmnt-theme-primary: #28724f;
$lmnt-theme-primary-variant: #2bc55b;
$lmnt-theme-secondary: #e4002b;
$lmnt-theme-secondary-variant: #a11b28;
$lmnt-theme-danger: #bf470e;
$lmnt-theme-danger-variant: #ee6820;

$white-linen: #f9f4eb;

$primaryMap: (
    primary-50: #d6f2d7,
    primary-100: #a4eeab,
    primary-200: #73eb85,
    primary-300: #2ce251,
    primary-400: #26d653,
    primary-500: #2bc55b,
    primary-600: #2e945b,
    primary-700: #28724f,
    primary-800: #135030,
    primary-900: #052816
);

$secondaryMap: (
    secondary-50: #ffcacb,
    secondary-100: #ffaeb3,
    secondary-200: #ff8291,
    secondary-300: #fc6177,
    secondary-400: #f22849,
    secondary-500: #e4002b,
    secondary-600: #c50e29,
    secondary-700: #a11b28,
    secondary-800: #7a2126,
    secondary-900: #521f1f
);

$successMap: (
    success-50: #eeffef,
    success-100: #d3ffd7,
    success-200: #a9f6af,
    success-300: #6fef7a,
    success-400: #29e539,
    success-500: #13c545,
    success-600: #0ea01a,
    success-700: #01830c,
    success-800: #075a0e,
    success-900: #053709
);

$dangerMap: (
    danger-50: #ffc26a,
    danger-100: #ffa528,
    danger-200: #fd9327,
    danger-300: #fc8026,
    danger-400: #ee6820,
    danger-500: #e35e1b,
    danger-600: #d35415,
    danger-700: #bf470e,
    danger-800: #862b00,
    danger-900: #642000
);

$dataVizComparativeMap: (
    dataVizComparative-50: #052816,
    dataVizComparative-100: #f22849,
    dataVizComparative-200: #28724f,
    dataVizComparative-300: #c50e29,
    dataVizComparative-400: #2bc55b,
    dataVizComparative-500: #a11b28,
    dataVizComparative-600: #2ce251,
    dataVizComparative-700: #521f1f,
    dataVizComparative-800: #a4eeab,
    dataVizComparative-900: #a8a8a8
);

$dataVizSequential1Map: (
    dataVizSequential1-50: #01140a,
    dataVizSequential1-100: #135030,
    dataVizSequential1-200: #28724f,
    dataVizSequential1-300: #2e945b,
    dataVizSequential1-400: #22bf53,
    dataVizSequential1-500: #26d653,
    dataVizSequential1-600: #2ce251,
    dataVizSequential1-700: #73eb85,
    dataVizSequential1-800: #a4eeab,
    dataVizSequential1-900: #d6f2d7
);

$dataVizSequential2Map: (
    dataVizSequential2-50: #350c0c,
    dataVizSequential2-100: #521f1f,
    dataVizSequential2-200: #7a2126,
    dataVizSequential2-300: #a11b28,
    dataVizSequential2-400: #c50e29,
    dataVizSequential2-500: #e4002b,
    dataVizSequential2-600: #f22849,
    dataVizSequential2-700: #fc6177,
    dataVizSequential2-800: #ff8291,
    dataVizSequential2-900: #ffaeb3
);

@include mixins.colorRamp($primaryMap);
@include mixins.colorRamp($secondaryMap);
@include mixins.colorRamp($dangerMap);
@include mixins.colorRamp($successMap);
@include mixins.colorRamp($dataVizComparativeMap);
@include mixins.colorRamp($dataVizSequential1Map);
@include mixins.colorRamp($dataVizSequential2Map);

///////////////////////////
//////  Font Stacks  //////
///////////////////////////

$Assistant: "'Assistant', 'Helvetica Neue', Helvetica, Arial, sans-serif";
$Heebo: "'Heebo', 'Segoe UI', Frutiger, 'Frutiger Linotype', 'Dejavu Sans', 'Helvetica Neue', Arial, sans-serif";

/////////////////////
//////  Theme  //////
/////////////////////

$onClassesMap: map.merge(
    element.$onClassesMap,
    (
        on-background: $lmnt-theme-primary,
        on-surface: $lmnt-theme-primary,
        on-primary: functions.color-contrast-value-check($lmnt-theme-primary),
        on-primary-variant:
            functions.color-contrast-value-check($lmnt-theme-primary-variant),
        primary-on-surface: $lmnt-theme-primary,
        on-secondary: functions.color-contrast-value-check($lmnt-theme-secondary),
        on-secondary-variant:
            functions.color-contrast-value-check($lmnt-theme-secondary-variant),
        secondary-on-surface: #7a2126,
        on-danger: functions.color-contrast-value-check($lmnt-theme-danger),
        on-danger-alt: $lmnt-theme-danger,
        on-danger-variant:
            functions.color-contrast-value-check($lmnt-theme-danger-variant),
        danger-on-surface: $lmnt-theme-danger
    )
);

$onSurfaceMap: (
    on-surface-active:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-high-black),
    on-surface-inactive:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-inactive),
    on-surface-disabled:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-disabled),
    on-surface-stroke:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-stroke),
    on-surface-base: rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-high)
);

@each $color, $value in $onClassesMap {
    @include mixins.onBackgroundColorClasses($color: $color, $value: $value);
}

@each $color, $value in $onSurfaceMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

//////////////////
/// GRADIENTS ///
/////////////////

$gradient-colors: (
    'primary-to-bottom': $lmnt-theme-primary,
    'primary-dark-to-bottom': map.get($primaryMap, 'primary-900'),
    'primary-darker-to-bottom': darken(map.get($primaryMap, 'primary-900'), 10),
    'secondary-to-bottom': $lmnt-theme-secondary,
    'secondary-dark-to-bottom': map.get($secondaryMap, 'secondary-900'),
    'secondary-darker-to-bottom': darken(map.get($secondaryMap, 'secondary-900'), 10),
    'primary-to-top': $lmnt-theme-primary,
    'primary-dark-to-top': map.get($primaryMap, 'primary-900'),
    'primary-darker-to-top': darken(map.get($primaryMap, 'primary-900'), 10),
    'secondary-to-top': $lmnt-theme-secondary,
    'secondary-dark-to-top': map.get($secondaryMap, 'secondary-900'),
    'secondary-darker-to-top': darken(map.get($secondaryMap, 'secondary-900'), 10),
    'black-to-bottom': element.$black,
    'black-to-top': element.$black,
    'white-to-bottom': element.$white,
    'white-to-top': element.$white
);

@include mixins.gradientRamp($gradient-colors);

:root,
.lmnt,
.lmnt-theme-jungseedgenetics {
    --lmnt-theme-on-background: #{map.get($onClassesMap, 'on-background')};
    --lmnt-theme-on-surface: #{map.get($onClassesMap, 'on-surface')};
    --lmnt-theme-primary-font: #{$Assistant};

    // Element Theme Defaults - Surface
    --lmnt-theme-surface: #{#f9f4eb};
}

.lmnt,
.lmnt-theme-jungseedgenetics {
    //////////////////////////////////
    ////// BASE LEVEL OVERRIDES //////
    //////////////////////////////////

    // Element Theme Defaults - Fonts
    --lmnt-theme-primary-font: #{$Assistant};
    --lmnt-theme-secondary-font: #{$Heebo};

    // Element Theme Defaults - Primary
    --lmnt-theme-primary: #{$lmnt-theme-primary};
    --lmnt-theme-primary-variant: #{$lmnt-theme-primary-variant};

    --lmnt-theme-primary-on-surface: #{map.get($onClassesMap, 'primary-on-surface')};
    $lmnt-primary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'primary-on-surface')
    );

    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};

    // Element Theme Defaults - Secondary
    --lmnt-theme-secondary: #{$lmnt-theme-secondary};
    --lmnt-theme-on-secondary: #{map.get($onClassesMap, 'on-secondary')};
    --lmnt-theme-secondary-variant: #{$lmnt-theme-secondary-variant};
    --lmnt-theme-secondary-on-surface: #{map.get($onClassesMap, 'secondary-on-surface')};
    --lmnt-theme-on-secondary-variant: #{map.get($onClassesMap, 'on-secondary-variant')};

    // Element Theme Defaults - Danger
    --lmnt-theme-danger: #{$lmnt-theme-danger};
    --lmnt-theme-danger-variant: #{$lmnt-theme-danger-variant};
    --lmnt-theme-danger-on-surface: #{map.get($onClassesMap, 'danger-on-surface')};

    // On surface rgb
    $lmnt-primary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'primary-on-surface')
    );
    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};

    $lmnt-secondary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'secondary-on-surface')
    );
    --lmnt-secondary-on-surface-rgb: #{$lmnt-secondary-on-surface-rgb};

    $lmnt-danger-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'danger-on-surface')
    );
    --lmnt-danger-on-surface-rgb: #{$lmnt-danger-on-surface-rgb};

    $lmnt-success-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'danger-on-surface')
    );
    --lmnt-success-on-surface-rgb: #{$lmnt-success-on-surface-rgb};

    // On color rgb
    $lmnt-on-primary-rgb: rgb.toValues(map.get($onClassesMap, 'on-primary'));
    --lmnt-on-primary-rgb: #{$lmnt-on-primary-rgb};

    $lmnt-on-secondary-rgb: rgb.toValues(map.get($onClassesMap, 'on-secondary'));
    --lmnt-on-secondary-rgb: #{$lmnt-on-secondary-rgb};

    $lmnt-on-danger-rgb: rgb.toValues(map.get($onClassesMap, 'on-danger'));
    --lmnt-on-danger-rgb: #{$lmnt-on-danger-rgb};

    $lmnt-on-success-rgb: rgb.toValues(map.get($onClassesMap, 'on-success'));
    --lmnt-on-success-rgb: #{$lmnt-on-success-rgb};

    // Element Primary Color Ramp
    @each $name, $color in $primaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Secondary Color Ramp
    @each $name, $color in $secondaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Success Color Ramp
    @each $name, $color in $successMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Danger Color Ramp
    @each $name, $color in $dangerMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element on Colors

    // Element On Surface Color Ramp
    @each $name, $color in $onSurfaceMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    ///////////////////////////////////////
    ////// COMPONENT LEVEL OVERRIDES //////
    ///////////////////////////////////////

    // Button
    --lmnt-button-shape-radius: 0;

    // TODO: deprecate styling based on `.lmnt-theme-secondary-bg` in favor of variant styling
    // Button: On Secondary
    --lmnt-button-filled-bg--on-secondary: var(--lmnt-theme-primary--100);
    --lmnt-button-filled-text--on-secondary: #{rgba(element.$black, 0.87)};

    // Snackbar
    --lmnt-theme-on-snackbar: map.get($primaryMap, 'primary-200');
    --lmnt-theme-on-snackbar-variant: map.get($secondaryMap, 'secondary-200');

    // Typography
    --lmnt-typography-link-color: #{$lmnt-theme-primary};

    // Display 1
    --mdc-typography-headline1-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline1-font-weight: 500;
    --mdc-typography-headline1-letter-spacing: -0.016em; // -1.5px
    --mdc-typography-headline1-line-height: 1.2083333;

    // Display 2
    --mdc-typography-headline2-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline2-font-weight: 700;
    --mdc-typography-headline2-line-height: 1.2;

    // Display 3
    --mdc-typography-headline3-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline3-font-weight: 700;
    --mdc-typography-headline3-line-height: 1.166666667;

    // Display 4
    --mdc-typography-headline4-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline4-font-weight: 700;
    --mdc-typography-headline4-letter-spacing: 0.007em; // 0.25px
    --mdc-typography-headline4-line-height: 1.17647058;

    // Display 5
    --mdc-typography-headline5-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline5-font-weight: 700;
    --mdc-typography-headline5-line-height: 1.166666667;

    // Display 6
    --mdc-typography-headline6-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-headline6-font-weight: 700;
    --mdc-typography-headline6-line-height: 1.2;

    // Subtitle 1
    --mdc-typography-subtitle1-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-subtitle1-line-height: 1.5;

    // Subtitle 2
    --mdc-typography-subtitle2-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-subtitle2-line-height: 1.428572;

    // Body 1
    --mdc-typography-body1-line-height: 1.75;

    // Body 2
    --mdc-typography-body2-line-height: 1.428572;

    // Caption
    --mdc-typography-caption-line-height: 1.3333333;

    // Button
    --mdc-typography-button-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-button-line-height: 1.142857;

    // Overline
    --mdc-typography-overline-font-family: var(--lmnt-theme-secondary-font);
    --mdc-typography-overline-line-height: 1.3333333;
}

//////////////////////////
//////  Utility   ////////
//////////////////////////

.mdc-typography--headline1,
.mdc-typography--headline2,
.mdc-typography--headline3,
.mdc-typography--headline4,
.mdc-typography--headline5,
.mdc-typography--headline6,
.mdc-typography--subtitle1,
.mdc-typography--subtitle2,
.mdc-typography--button,
.mdc-typography--overline {
    color: var(--lmnt-theme-primary);
}

// primary-colored headlines should inherit text color
// when inside a theme background-color block
.lmnt-theme-primary-bg,
.lmnt-theme-secondary-bg {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    .lmnt-theme-editor-content,
    .mdc-typography--headline1,
    .mdc-typography--headline2,
    .mdc-typography--headline3,
    .mdc-typography--headline4,
    .mdc-typography--headline5,
    .mdc-typography--headline6,
    .mdc-typography--subtitle1,
    .mdc-typography--subtitle2,
    .mdc-typography--button,
    .mdc-typography--overline {
        color: inherit;
    }
}

/////////////////////////
////////  FONTS  ////////
/////////////////////////
$assetsPath: '..' !default;

/* stylelint-disable scale-unlimited/declaration-strict-value, font-weight-notation, indentation, font-family-name-quotes */

// Assistant: regular and bold
@font-face {
    font-display: swap;
    font-family: 'Assistant';
    font-style: normal;
    font-weight: 400;
    src: url('#{$assetsPath}/assets/fonts/Assistant/Assistant-Regular.ttf')
        format('truetype');
}

@font-face {
    font-display: swap;
    font-family: 'Assistant';
    font-style: normal;
    font-weight: 700;
    src: url('#{$assetsPath}/assets/fonts/Assistant/Assistant-Bold.ttf')
        format('truetype');
}

// Heebo: medium, regular, and bold
@font-face {
    font-display: swap;
    font-family: 'Heebo';
    font-style: normal;
    font-weight: 300;
    src: url('#{$assetsPath}/assets/fonts/Heebo/Heebo-Medium.ttf') format('truetype');
}

@font-face {
    font-display: swap;
    font-family: 'Heebo';
    font-style: italic;
    font-weight: 400;
    src: url('#{$assetsPath}/assets/fonts/Heebo/Heebo-Regular.ttf') format('truetype');
}

@font-face {
    font-display: swap;
    font-family: 'Heebo';
    font-style: italic;
    font-weight: 700;
    src: url('#{$assetsPath}/assets/fonts/Heebo/Heebo-Bold.ttf') format('truetype');
}

/* stylelint-enable scale-unlimited/declaration-strict-value, font-weight-notation, indentation, font-family-name-quotes */
