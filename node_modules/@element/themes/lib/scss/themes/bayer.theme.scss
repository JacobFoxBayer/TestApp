// NOTE: Color Ramps only require SCSS color values for contrast calculations
@use 'sass:math';
@use 'sass:map';
@use 'sass-hex-rgb' as rgb;
@use '@material/elevation' as elevation;
@use '../common/mixins' as mixins;
@use '../common/element.core' as element;
@use '../common/functions' as functions;

// @import must be at top of file, otherwise CSS will not work
@import url('https://fast.fonts.net/lt/1.css?apiType=css&c=46e1c2c8-fa81-4bbf-872d-5e416435414e&fontids=5664067,5664070,5664077,5664081,5664085,5664089,5664093,5664098,5664103,5664107,5664111,5664115,5664119,5664121,5664128,5664150');

$assetsPath: '..' !default;

//////////////////////
//////  Colors  //////
//////////////////////

$lmnt-theme-primary: #de0043;
$lmnt-theme-primary-variant: #443247;
$lmnt-theme-secondary: #10384f;
$lmnt-theme-secondary-variant: #00bcff;
$lmnt-theme-danger: #b85302;
$lmnt-theme-danger-variant: #f9780d;
$lmnt-theme-success: #0ea01a;
$lmnt-theme-success-variant: #13c545;

$primaryMap: (
    primary-50: #ffdce4,
    primary-100: #ffbece,
    primary-200: #ff7596,
    primary-300: #ff3162,
    primary-400: #de0043,
    primary-500: #bf124b,
    primary-600: #a02453,
    primary-700: #81365b,
    primary-800: #624963,
    primary-900: #443247
);

$secondaryMap: (
    secondary-50: #e7f8ff,
    secondary-100: #cdf1ff,
    secondary-200: #a4e7ff,
    secondary-300: #3eccff,
    secondary-400: #00bcff,
    secondary-500: #0091df,
    secondary-600: #007cb8,
    secondary-700: #006f9b,
    secondary-800: #00617f,
    secondary-900: #10384f
);

$dangerMap: (
    danger-50: #ffe4cd,
    danger-100: #ffc18d,
    danger-200: #fea55b,
    danger-300: #fd8d30,
    danger-400: #f9780d,
    danger-500: #e56f0f,
    danger-600: #ce630b,
    danger-700: #b85302,
    danger-800: #974401,
    danger-900: #652d01
);

$successMap: (
    success-50: #eeffef,
    success-100: #d3ffd7,
    success-200: #a9f6af,
    success-300: #6fef7a,
    success-400: #29e539,
    success-500: #13c545,
    success-600: #0ea01a,
    success-700: #01830c,
    success-800: #075a0e,
    success-900: #053709
);

$dataVizComparativeMap: (
    dataVizComparative-50: #1e5474,
    dataVizComparative-100: #00bcff,
    dataVizComparative-200: #0d683b,
    dataVizComparative-300: #89d329,
    dataVizComparative-400: #6a4c72,
    dataVizComparative-500: #cba0d7,
    dataVizComparative-600: #980733,
    dataVizComparative-700: #de0043,
    dataVizComparative-800: #eaeaea,
    dataVizComparative-900: #5c5c5c
);

$dataVizSequential1Map: (
    dataVizSequential1-50: #092b3e,
    dataVizSequential1-100: #10384f,
    dataVizSequential1-200: #00617f,
    dataVizSequential1-300: #0075a6,
    dataVizSequential1-400: #0091df,
    dataVizSequential1-500: #00bcff,
    dataVizSequential1-600: #4fd1ff,
    dataVizSequential1-700: #a2e6ff,
    dataVizSequential1-800: #c7f0ff,
    dataVizSequential1-900: #e8f9ff
);

$dataVizSequential2Map: (
    dataVizSequential2-50: #2f1533,
    dataVizSequential2-100: #443247,
    dataVizSequential2-200: #5a3663,
    dataVizSequential2-300: #6a4c72,
    dataVizSequential2-400: #8c6397,
    dataVizSequential2-500: #b087bb,
    dataVizSequential2-600: #cba0d7,
    dataVizSequential2-700: #e5bfef,
    dataVizSequential2-800: #f7dcfe,
    dataVizSequential2-900: #fbebff
);

$ancillaryMap: (
    ancillary-100: #89d329,
    ancillary-200: #00bcff,
    ancillary-300: #624963,
    ancillary-400: #ff3162
);

@include mixins.colorRamp($primaryMap);
@include mixins.colorRamp($secondaryMap);
@include mixins.colorRamp($dangerMap);
@include mixins.colorRamp($successMap);
@include mixins.colorRamp($ancillaryMap);
@include mixins.colorRamp($dataVizComparativeMap);
@include mixins.colorRamp($dataVizSequential1Map);
@include mixins.colorRamp($dataVizSequential2Map);

///////////////////////////
//////  Font Stacks  //////
///////////////////////////

$HelveticaNeue: "'Helvetica Neue', Helvetica, Arial, sans-serif";

/////////////////////
//////  Theme  //////
/////////////////////

// $onClassesMap: map.merge(
//     element.$onClassesMap,
//     (
//         on-background: $lmnt-theme-secondary,
//         on-surface: $lmnt-theme-secondary,
//         on-primary: functions.color-contrast-value-check($lmnt-theme-primary),
//         on-primary-variant:
//             functions.color-contrast-value-check($lmnt-theme-primary-variant),
//         primary-on-surface: #de0043,
//         on-secondary: functions.color-contrast-value-check($lmnt-theme-secondary),
//         on-secondary-variant:
//             functions.color-contrast-value-check($lmnt-theme-secondary-variant),
//         secondary-on-surface: #006f9b,
//         on-danger: functions.color-contrast-value-check($lmnt-theme-danger),
//         on-danger-variant:
//             functions.color-contrast-value-check($lmnt-theme-danger-variant),
//         danger-on-surface: $lmnt-theme-danger,
//         success-on-surface: #01830c
//     )
// );
$onClassesMap: (
    on-success: functions.color-contrast-value-check($lmnt-theme-success),
    on-background: $lmnt-theme-secondary,
    on-surface: $lmnt-theme-secondary,
    on-primary: functions.color-contrast-value-check($lmnt-theme-primary),
    on-primary-variant: functions.color-contrast-value-check($lmnt-theme-primary-variant),
    primary-on-surface: #de0043,
    on-secondary: functions.color-contrast-value-check($lmnt-theme-secondary),
    on-secondary-variant:
        functions.color-contrast-value-check($lmnt-theme-secondary-variant),
    secondary-on-surface: #006f9b,
    on-danger: functions.color-contrast-value-check($lmnt-theme-danger),
    on-danger-variant: functions.color-contrast-value-check($lmnt-theme-danger-variant),
    danger-on-surface: $lmnt-theme-danger,
    success-on-surface: #01830c
) !default;

$onSurfaceMap: (
    on-surface-active:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-high-black),
    on-surface-inactive:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-inactive),
    on-surface-disabled:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-disabled),
    on-surface-stroke:
        rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-stroke),
    on-surface-base: rgba(map.get($onClassesMap, 'on-surface'), element.$emphasis-high)
);

$onPrimaryMap: (
    on-primary-active:
        rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-high-black),
    on-primary-inactive:
        rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-inactive),
    on-primary-disabled:
        rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-disabled),
    on-primary-stroke:
        rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-stroke),
    on-primary-base: rgba(map.get($onClassesMap, 'on-primary'), element.$emphasis-high)
);

$onSecondaryMap: (
    on-secondary-active:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-high-black),
    on-secondary-inactive:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-inactive),
    on-secondary-disabled:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-disabled),
    on-secondary-stroke:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-stroke),
    on-secondary-base:
        rgba(map.get($onClassesMap, 'on-secondary'), element.$emphasis-high)
);

$onSuccessMap: (
    on-success-active:
        rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-high-black),
    on-success-inactive:
        rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-inactive),
    on-success-disabled:
        rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-disabled),
    on-success-stroke:
        rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-stroke),
    on-success-base: rgba(map.get($onClassesMap, 'on-success'), element.$emphasis-high)
);

$onDangerMap: (
    on-danger-active:
        rgba(map.get($onClassesMap, 'on-danger'), element.$emphasis-high-black),
    on-danger-inactive:
        rgba(map.get($onClassesMap, 'on-danger'), element.$emphasis-inactive),
    on-danger-disabled:
        rgba(map.get($onClassesMap, 'on-danger'), element.$emphasis-disabled),
    on-danger-stroke: rgba(map.get($onClassesMap, 'on-danger'), element.$emphasis-stroke),
    on-danger-base: rgba(map.get($onClassesMap, 'on-danger'), element.$emphasis-high)
);

@each $color, $value in $onClassesMap {
    @include mixins.onBackgroundColorClasses($color: $color, $value: $value);
}

@each $color, $value in $onPrimaryMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

@each $color, $value in $onSecondaryMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

@each $color, $value in $onSuccessMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

@each $color, $value in $onSurfaceMap {
    @include mixins.onClasses($color: $color, $value: $value);
}

//////////////////
/// GRADIENTS ///
/////////////////

$gradient-colors: (
    'primary-to-bottom': $lmnt-theme-primary,
    'primary-dark-to-bottom': map.get($primaryMap, 'primary-900'),
    'primary-darker-to-bottom': darken(map.get($primaryMap, 'primary-900'), 10),
    'secondary-to-bottom': $lmnt-theme-secondary,
    'secondary-dark-to-bottom': map.get($secondaryMap, 'secondary-900'),
    'secondary-darker-to-bottom': darken(map.get($secondaryMap, 'secondary-900'), 10),
    'primary-to-top': $lmnt-theme-primary,
    'primary-dark-to-top': map.get($primaryMap, 'primary-900'),
    'primary-darker-to-top': darken(map.get($primaryMap, 'primary-900'), 10),
    'secondary-to-top': $lmnt-theme-secondary,
    'secondary-dark-to-top': map.get($secondaryMap, 'secondary-900'),
    'secondary-darker-to-top': darken(map.get($secondaryMap, 'secondary-900'), 10),
    'black-to-bottom': element.$black,
    'black-to-top': element.$black,
    'white-to-bottom': element.$white,
    'white-to-top': element.$white
);

@include mixins.gradientRamp($gradient-colors);

:root,
.lmnt,
.lmnt-theme-bayer {
    // Element Theme Defaults - Surface
    --lmnt-theme-on-background: #{map.get($onClassesMap, 'on-background')};
    --lmnt-theme-on-surface: #{map.get($onClassesMap, 'on-surface')};
    --lmnt-theme-primary-font: #{$HelveticaNeue};
}

.lmnt,
.lmnt-theme-bayer {
    //////////////////////////////////
    ////// BASE LEVEL OVERRIDES //////
    //////////////////////////////////

    // Element Theme Defaults - Fonts
    --lmnt-theme-secondary-font: #{$HelveticaNeue};

    // Element Theme Defaults - Primary
    --lmnt-theme-primary: #{$lmnt-theme-primary};
    --lmnt-theme-on-primary: #{map.get($onClassesMap, 'on-primary')};
    --lmnt-theme-primary-variant: #{$lmnt-theme-primary-variant};

    --lmnt-theme-primary-on-surface: #{map.get($onClassesMap, 'primary-on-surface')};
    $lmnt-primary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'primary-on-surface')
    );

    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};

    // Element Theme Defaults - Secondary
    --lmnt-theme-secondary: #{$lmnt-theme-secondary};
    --lmnt-theme-on-secondary: #{map.get($onClassesMap, 'on-secondary')};
    --lmnt-theme-secondary-variant: #{$lmnt-theme-secondary-variant};
    --lmnt-theme-on-secondary-variant: #{map.get($onClassesMap, 'on-secondary-variant')};
    --lmnt-theme-secondary-on-surface: #{map.get($onClassesMap, 'secondary-on-surface')};

    // Element Theme Defaults - Danger
    --lmnt-theme-danger: #{$lmnt-theme-danger};
    --lmnt-theme-on-danger: #{map.get($onClassesMap, 'on-danger')};
    --lmnt-theme-danger-variant: #{$lmnt-theme-danger-variant};
    --lmnt-theme-danger-on-surface: #{map.get($onClassesMap, 'danger-on-surface')};

    // Element Theme Defaults - Background
    --lmnt-theme-on-background: #{map.get($onClassesMap, 'on-background')};

    // On surface rgb
    $lmnt-primary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'primary-on-surface')
    );
    --lmnt-primary-on-surface-rgb: #{$lmnt-primary-on-surface-rgb};

    $lmnt-secondary-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'secondary-on-surface')
    );
    --lmnt-secondary-on-surface-rgb: #{$lmnt-secondary-on-surface-rgb};

    $lmnt-danger-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'danger-on-surface')
    );
    --lmnt-danger-on-surface-rgb: #{$lmnt-danger-on-surface-rgb};

    $lmnt-success-on-surface-rgb: rgb.toValues(
        map.get($onClassesMap, 'danger-on-surface')
    );
    --lmnt-success-on-surface-rgb: #{$lmnt-success-on-surface-rgb};

    // On color rgb
    $lmnt-on-primary-rgb: rgb.toValues(map.get($onClassesMap, 'on-primary'));
    --lmnt-on-primary-rgb: #{$lmnt-on-primary-rgb};

    $lmnt-on-secondary-rgb: rgb.toValues(map.get($onClassesMap, 'on-secondary'));
    --lmnt-on-secondary-rgb: #{$lmnt-on-secondary-rgb};

    $lmnt-on-danger-rgb: rgb.toValues(map.get($onClassesMap, 'on-danger'));
    --lmnt-on-danger-rgb: #{$lmnt-on-danger-rgb};

    $lmnt-on-success-rgb: rgb.toValues(map.get($onClassesMap, 'on-success'));
    --lmnt-on-success-rgb: #{$lmnt-on-success-rgb};

    // Element Primary Color Ramp
    @each $name, $color in $primaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Secondary Color Ramp
    @each $name, $color in $secondaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Ancillary Color Ramp
    @each $name, $color in $ancillaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Sequential 1 Color Ramp
    @each $name, $color in $dataVizSequential1Map {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Sequential 2 Color Ramp
    @each $name, $color in $dataVizSequential2Map {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Data Viz Comparative Color Ramp
    @each $name, $color in $dataVizComparativeMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Success Color Ramp
    @each $name, $color in $successMap {
        --lmnt-theme-#{$name}: #{$color};
    }
    // Element Danger Color Ramp
    @each $name, $color in $dangerMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element on Colors

    // Element On Surface Color Ramp
    @each $name, $color in $onSurfaceMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element On Primary Color Ramp
    @each $name, $color in $onPrimaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element On Secondary Color Ramp
    @each $name, $color in $onSecondaryMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element On Success Color Ramp
    @each $name, $color in $onSuccessMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    // Element On Danger Color Ramp
    @each $name, $color in $onDangerMap {
        --lmnt-theme-#{$name}: #{$color};
    }

    ///////////////////////////////////////
    ////// COMPONENT LEVEL OVERRIDES //////
    ///////////////////////////////////////

    // Button
    --lmnt-button-shape-radius: 0;
    --lmnt-button-font-style: italic;
    --lmnt-button-box-shadow: #{elevation.elevation-box-shadow(0)};

    // Modal
    --lmnt-modal-shape-radius: 0;

    // Textfield
    --lmnt-text-field-shape-radius: 0;

    // Dialog
    --lmnt-dialog-shape-radius: 0;
    // Select
    --lmnt-select-shape-radius: 0;

    // Menu
    --lmnt-menu-shape-radius: 0;

    // Card
    --lmnt-card-shape-radius: 0;
    --lmnt-card-box-shadow: none;
    --lmnt-card-border-color: #e0e0e0;
    --lmnt-card-border-style: solid;
    --lmnt-card-border-width: 1px;

    // Chips
    --lmnt-chip-shape-radius: 4px;
    --lmnt-chip-ripple-before-after-shape-radius: 4px;
    --lmnt-chip-ripple-shape-radius: 4px;

    // Snackbar
    --lmnt-theme-on-snackbar: #ff7596;
    --lmnt-theme-on-snackbar-variant: #a4e7ff;

    // Typography
    // Display 1
    --mdc-typography-headline1-letter-spacing: 0.01302em; // 1.25px
    --mdc-typography-headline1-line-height: #{math.div(116px, 96px)}; // 1.20833

    // Display 2
    --mdc-typography-headline2-font-weight: 300;
    --mdc-typography-headline2-letter-spacing: 0.04688em; // 0.75px
    --mdc-typography-headline2-line-height: #{math.div(72px, 60px)}; // 1.2

    // Display 3
    --mdc-typography-headline3-font-weight: 300;
    --mdc-typography-headline3-letter-spacing: 0.02083em; // 1px
    --mdc-typography-headline3-line-height: #{math.div(56px, 48px)}; // 1.16667

    // Display 4
    --mdc-typography-headline4-font-weight: 300;
    --mdc-typography-headline4-letter-spacing: 0.01471em; // 0.5px
    --mdc-typography-headline4-line-height: #{math.div(40px, 34px)}; // 1.17647

    // Display 5
    --mdc-typography-headline5-letter-spacing: 0.02083em; // 0.5px
    --mdc-typography-headline5-line-height: #{math.div(28px, 24px)}; // 1.16667
    --mdc-typography-headline5-font-weight: 500;

    // Display 6
    --mdc-typography-headline6-font-weight: 600;
    --mdc-typography-headline6-letter-spacing: #{functions.toRem(0.25)};
    --mdc-typography-headline6-line-height: #{math.div(24px, 20px)}; // 1.2

    // Subtitle 1
    --mdc-typography-subtitle1-font-weight: 500;
    --mdc-typography-subtitle1-line-height: #{math.div(24px, 16px)}; // 1.5
    --mdc-typography-subtitle1-letter-spacing: #{functions.toRem(0.15)};

    // Subtitle 2
    --mdc-typography-subtitle2-font-weight: 500;
    --mdc-typography-subtitle2-letter-spacing: 0.01786em; // 0.25px
    --mdc-typography-subtitle2-line-height: #{math.div(20px, 14px)}; // 1.42857

    // Body 1
    --mdc-typography-body1-line-height: #{math.div(28px, 16px)}; // 1.75
    --mdc-typography-body1-letter-spacing: #{functions.toRem(0.5)};

    // Body 2
    --mdc-typography-body2-letter-spacing: #{functions.toRem(0.25)};
    --mdc-typography-body2-line-height: #{math.div(20px, 14px)}; // 1.42857

    // Caption
    --mdc-typography-caption-letter-spacing: 0.02083em; // 0.25px
    --mdc-typography-caption-line-height: #{math.div(16px, 12px)}; // 1.33333
    --lmnt-typography--caption-bold-font-weight: 700;

    // Button
    --mdc-typography-button-font-weight: 700;
    --mdc-typography-button-letter-spacing: 0.05357em; // 0.75px
    --mdc-typography-button-line-height: #{math.div(16px, 14px)}; // 1.14286

    // Overline
    --mdc-typography-overline-font-weight: 500;
    --mdc-typography-overline-letter-spacing: 0.14583em; // 1.75px
    --mdc-typography-overline-line-height: #{math.div(16px, 12px)}; // 1.33333

    // Typography Link Color
    --lmnt-typography-link-color: var(--lmnt-theme-primary-on-surface);
}

/////////////////////////
////////  FONTS  ////////
/////////////////////////

/* stylelint-disable scale-unlimited/declaration-strict-value, font-weight-notation, indentation */
// Helvetica Neue extra light, light, normal, medium, semi bold, bold, extra bold, black
// extra light (ultra light)
@font-face {
    font-display: swap;
    font-family: 'Helvetica Neue';
    font-style: normal;
    font-weight: 200;
    src: url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664070/ec6281a0-c9c4-4477-a360-156acd53093f.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664070/11066b40-10f7-4123-ba58-d9cbf5e89ceb.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'Helvetica Neue';
    font-style: italic;
    font-weight: 200;
    src: url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664077/2707a251-2d32-4bb6-a3c4-87114ba2365f.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664077/40f50724-486b-4e7b-9366-237e06eabfc8.woff')
            format('woff');
}

// light
@font-face {
    font-display: swap;
    font-family: 'Helvetica Neue';
    font-style: normal;
    font-weight: 300;
    src: url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664081/7d63ccf8-e0ae-4dee-ad4d-bbc798aa5803.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664081/b2c1327f-ab3d-4230-93d7-eee8596e1498.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'Helvetica Neue';
    font-style: italic;
    font-weight: 300;
    src: url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664067/2a7e8f89-c0b2-4334-9c34-7a2078d2b959.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664067/32aad9d8-5fec-4b9d-ad53-4cf7a5b53698.woff')
            format('woff');
}

// normal
@font-face {
    font-display: swap;
    font-family: 'Helvetica Neue';
    font-style: normal;
    font-weight: 400;
    src: url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664085/f9c5199e-a996-4c08-9042-1eb845bb7495.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664085/2a34f1f8-d701-4949-b12d-133c1c2636eb.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'Helvetica Neue';
    font-style: italic;
    font-weight: 400;
    src: url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664089/5e4f385b-17ff-4d27-a63a-9ee28546c9a8.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664089/116cde47-4a07-44a5-9fac-cbdcc1f14f79.woff')
            format('woff');
}

// medium
@font-face {
    font-display: swap;
    font-family: 'Helvetica Neue';
    font-style: normal;
    font-weight: 500;
    src: url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664093/08b57253-2e0d-4c12-9c57-107f6c67bc49.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664093/08edde9d-c27b-4731-a27f-d6cd9b01cd06.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'Helvetica Neue';
    font-style: italic;
    font-weight: 500;
    src: url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664098/4bd56f95-e7ab-4a32-91fd-b8704cbd38bc.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664098/4fe1c328-1f21-434a-8f0d-5e0cf6c70dfb.woff')
            format('woff');
}

// semi bold (demi bold)
@font-face {
    font-display: swap;
    font-family: 'Helvetica Neue';
    font-style: normal;
    font-weight: 600;
    src: url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664103/240c57a0-fdce-440d-9ce3-85e0cb56f470.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664103/7802e576-2ffa-4f22-a409-534355fbea79.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'Helvetica Neue';
    font-style: italic;
    font-weight: 600;
    src: url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664107/de68be2a-5d0e-4b8d-b3eb-940f75503e2a.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664107/31029e78-79a0-4940-b82d-2e3c238e1355.woff')
            format('woff');
}

// bold
@font-face {
    font-display: swap;
    font-family: 'Helvetica Neue';
    font-style: normal;
    font-weight: 700;
    src: url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664150/800da3b0-675f-465f-892d-d76cecbdd5b1.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664150/7b415a05-784a-4a4c-8c94-67e9288312f5.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'Helvetica Neue';
    font-style: italic;
    font-weight: 700;
    src: url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664111/13ab58b4-b5ba-4c95-afde-ab2608fbbbd9.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664111/5018b5b5-c821-4653-bc74-d0b11d735f1a.woff')
            format('woff');
}

// extra bold (ultra bold)
@font-face {
    font-display: swap;
    font-family: 'Helvetica Neue';
    font-style: normal;
    font-weight: 800;
    src: url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664115/7e42a406-9133-48c0-a705-4264ac520b43.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664115/837750e9-3227-455d-a04e-dc76764aefcf.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'Helvetica Neue';
    font-style: italic;
    font-weight: 800;
    src: url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664119/0acba88f-0de4-4d43-81fd-920d7427f665.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664119/713c9c40-9cbd-4276-819e-d0efaf5d3923.woff')
            format('woff');
}

// black (heavy)
@font-face {
    font-display: swap;
    font-family: 'Helvetica Neue';
    font-style: normal;
    font-weight: 900;
    src: url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664121/fc4fb6ca-f981-4115-b882-c78e9f08be52.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664121/6ed03453-f512-45ba-84bf-fe4ea45d5e6a.woff')
            format('woff');
}

@font-face {
    font-display: swap;
    font-family: 'Helvetica Neue';
    font-style: italic;
    font-weight: 900;
    src: url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664128/995add04-59cc-41ea-abd2-4712eaddf2a8.woff2')
            format('woff2'),
        url('#{$assetsPath}/assets/fonts/Helvetica_Neue/5664128/7090e465-f6bf-4664-8b5a-d877a6915d87.woff')
            format('woff');
}

/* stylelint-enable scale-unlimited/declaration-strict-value, font-weight-notation, indentation */

//////////////////////////
//////  Typography  //////
//////////////////////////

// MIGRATION: font-style is no longer managed with SCSS variables
// MIGRATION: ensure that Button type styles are hooked up correctly with CSS custom properties

// NOTE: Bayer is the only theme with `font-style` overrides
.mdc-typography--headline1,
.mdc-typography--headline3,
.mdc-typography--button {
    font-style: italic;
}

// primary-colored headlines should inherit text color
// when inside a theme background-color block
.lmnt-theme-primary-bg,
.lmnt-theme-secondary-bg {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    .lmnt-theme-editor-content,
    .mdc-typography--headline1,
    .mdc-typography--headline2,
    .mdc-typography--headline3,
    .mdc-typography--headline4,
    .mdc-typography--headline5,
    .mdc-typography--headline6,
    .mdc-typography--subtitle1,
    .mdc-typography--subtitle2,
    .mdc-typography--body1,
    .mdc-typography--body2,
    .mdc-typography--button,
    .mdc-typography--caption,
    .mdc-typography--overline {
        color: inherit;
    }
}
