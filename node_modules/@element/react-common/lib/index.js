'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var warning = require('warning');
var nanoid = require('nanoid');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefault(React);
var warning__default = /*#__PURE__*/_interopDefault(warning);
var nanoid__default = /*#__PURE__*/_interopDefault(nanoid);

/**
 * React HOC to conditional wrap children based on condition
 */
const ConditionalWrapper = _ref => {
  let {
    condition,
    wrapper,
    children
  } = _ref;
  return condition ? wrapper(children) : children;
};

// Notify components that have popups or overlays they need to hoist automatically
const HoistedContext = /*#__PURE__*/React.createContext({});
const hoistingEnabled = {
  enabled: true
};

/**
 * Generates warning if element is not found in the DOM
 * @param  {String} selector Selector not found
 * @return {String}          Generated not found message
 */
const getElementNotFoundWarning = selector => `${selector} element was not found in the DOM.`;

/**
 * Generates warning if selector is not valid
 * @param  {String} selector Selector not found
 * @return {String}          Generated invalid selector message
 */
const getInvalidSelectorWarning = selector => `${selector} is not a valid selector.`;
const warned$2 = {};

/**
 * Consoles warning
 * Example borrowed from https://reactjs.org/warnings/dont-call-proptypes.html#fixing-the-false-positive-in-third-party-proptypes
 * @param {String} message Message to be logged
 */
const edsWarning = message => {
  if (!warned$2[message]) {
    warning__default["default"](false, message);
    warned$2[message] = true;
  }
};

/**
 * Checks if a given selector is a valid query.  Errors if selector is invalid.  Use in a try/catch
 * @param  {String} selector Selector to check
 */
const queryCheck = selector => document.createDocumentFragment().querySelector(selector);

/**
 * Checks if a given selector is a valid query.
 * @param  {String} selector Selector to check
 * @return {Boolean}         Returns true if selector is valid, false if invalid
 */
const isSelectorValid = selector => {
  try {
    queryCheck(selector);
  } catch {
    return false;
  }
  return true;
};

/**
 * Select query from document.  Uses `document.querySelector`
 * @param  {String} selector Selector to find
 * @return {Boolean}         Returns found element, false if invalid selector
 */
const edsQuerySelector = selector => {
  if (isSelectorValid(selector)) {
    return document.querySelector(selector) || edsWarning(getElementNotFoundWarning(selector));
  }
  edsWarning(getInvalidSelectorWarning(selector));
  return false;
};

/**
 * Adds prop to component
 * @param  {Array}  children Array of children to add the props to
 * @param  {Object|Function} props    Props to be added to children, or a function to handle adding the props
 * @return {Node}            New component with props added
 */
const addProps = (children, props) => {
  if (!children) return null;
  return React__default["default"].Children.map(children, (child, index) => {
    let propsActual;
    if (typeof props === 'function') {
      propsActual = props(child, index);
    } else {
      propsActual = {};
      Object.keys(props).forEach(key => {
        propsActual[key] = props[key];
      });
    }
    if (! /*#__PURE__*/React__default["default"].isValidElement(child)) {
      return /*#__PURE__*/React__default["default"].createElement('div', propsActual, child);
    }
    return /*#__PURE__*/React__default["default"].cloneElement(child, propsActual);
  });
};

/**
 * Adds className to component and returns the new component
 * @param  {Array} children  Array of children to add the className to
 * @param  {Sting} className Class to be added to children
 * @return {Node}            New component with class added
 */
const addClass = (children, className) => addProps(children, {
  className
});

/**
 * Adds unit to a value
 * @param  {Number}   val              Array of children to add the className to
 * @param  {String}   [defaultUnit=px] Unit to add, if omm
 * @return {String}                    Formatted value with unit
 */
const formatUnit = (val, defaultUnit) => {
  if (typeof val === 'number') {
    return val + (defaultUnit || 'px');
  }
  return val;
};

/**
 * Sets focus to element if found bu the given selector
 * @param  {String} returnFocusSelector Query to find element
 */
const returnFocusAfterClosing = returnFocusSelector => {
  setTimeout(() => {
    const domElement = edsQuerySelector(returnFocusSelector);
    domElement && domElement.focus();
  }, 0);
};

const warned$1 = {};

/**
 * Consoles warning if a deprecated component is used
 * Example borrowed from https://reactjs.org/warnings/dont-call-proptypes.html#fixing-the-false-positive-in-third-party-proptypes
 * @param {Node}   component   Component that is deprecated
 * @param {String} explanation Explanation of why component is deprecated and alternatives to use
 */
const deprecatedComponent = (component, explanation) => {
  const message = `"${component}" has been deprecated.\n${explanation}`;
  if (!warned$1[message]) {
    warning__default["default"](false, message);
    warned$1[message] = true;
  }
};

const warned = {};

/**
 * Consoles warning if a deprecated prop is used
 * Example borrowed from https://reactjs.org/warnings/dont-call-proptypes.html#fixing-the-false-positive-in-third-party-proptypes
 * @param  {Function} propType      React propType, ie. PropTypes.bool
 * @param  {String}   componentName Name of the component the prop is in
 * @param  {String}   explanation   Explanation of why prop is deprecated and alternatives to use
 * @return {Function}               Validation function to display warning only if prop is used
 */
const deprecatedProp = (propType, componentName, explanation) => function validate(props, propName) {
  // Note ...rest here
  if (props[propName] != null) {
    const message = `"${propName}" property of "${componentName}" has been deprecated.\n${explanation}`;
    if (!warned[message]) {
      warning__default["default"](false, message);
      warned[message] = true;
    }
  }
  for (var _len = arguments.length, rest = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    rest[_key - 2] = arguments[_key];
  }
  return propType(props, propName, ...rest); // and here
};

/**
 * Consoles warning if a deprecated accepted value prop is used
 * Example borrowed from https://reactjs.org/warnings/dont-call-proptypes.html#fixing-the-false-positive-in-third-party-proptypes
 * @param  {Function} propType       React propType, ie. PropTypes.bool
 * @param  {String[]} deprecatedList Lis of accepted values
 * @param  {String}   componentName  Name of the component the prop is in
 * @param  {String}   explanation    Explanation of why prop is deprecated and alternatives to use
 * @return {Function}                Validation function to display warning only if prop is used
 */
const deprecatedOneOf = (propType, deprecatedList, componentName, explanation) => function validate(props, propName) {
  if (deprecatedList.some(x => x === props[propName])) {
    const message = `Some "${propName}" options have been deprecated in "${componentName}".\n${explanation}`;
    if (!warned[message]) {
      warning__default["default"](false, message);
      warned[message] = true;
    }
  }
  for (var _len2 = arguments.length, rest = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
    rest[_key2 - 2] = arguments[_key2];
  }
  return propType(props, propName, ...rest);
};

/**
 * Generates an element specific random ID
 * @param  {String} [name] Name to add in generated ID
 * @return {String}        Generated id
 */
const edsRandomId = name => {
  if (name) return `eds-${`${name}-`}${nanoid__default["default"](5)}`;
  return `eds-${nanoid__default["default"](5)}`;
};

const iconList = {
  // action: 'action',
  '3d_rotation': '3d_rotation',
  accessibility: 'accessibility',
  accessibility_new: 'accessibility_new',
  accessible: 'accessible',
  accessible_forward: 'accessible_forward',
  account_balance: 'account_balance',
  account_balance_wallet: 'account_balance_wallet',
  account_box: 'account_box',
  account_circle: 'account_circle',
  add_shopping_cart: 'add_shopping_cart',
  add_task: 'add_task',
  addchart: 'addchart',
  admin_panel_settings: 'admin_panel_settings',
  alarm: 'alarm',
  alarm_add: 'alarm_add',
  alarm_off: 'alarm_off',
  alarm_on: 'alarm_on',
  all_inbox: 'all_inbox',
  all_out: 'all_out',
  analytics: 'analytics',
  anchor: 'anchor',
  android: 'android',
  announcement: 'announcement',
  api: 'api',
  app_blocking: 'app_blocking',
  arrow_circle_down: 'arrow_circle_down',
  arrow_circle_up: 'arrow_circle_up',
  arrow_right_alt: 'arrow_right_alt',
  article: 'article',
  aspect_ratio: 'aspect_ratio',
  assessment: 'assessment',
  assignment: 'assignment',
  assignment_ind: 'assignment_ind',
  assignment_late: 'assignment_late',
  assignment_return: 'assignment_return',
  assignment_returned: 'assignment_returned',
  assignment_turned_in: 'assignment_turned_in',
  autorenew: 'autorenew',
  backup: 'backup',
  backup_table: 'backup_table',
  batch_prediction: 'batch_prediction',
  book: 'book',
  book_online: 'book_online',
  bookmark: 'bookmark',
  bookmark_border: 'bookmark_border',
  bookmarks: 'bookmarks',
  bug_report: 'bug_report',
  build: 'build',
  build_circle: 'build_circle',
  cached: 'cached',
  calendar_today: 'calendar_today',
  calendar_view_day: 'calendar_view_day',
  camera_enhance: 'camera_enhance',
  cancel_schedule_send: 'cancel_schedule_send',
  card_giftcard: 'card_giftcard',
  card_membership: 'card_membership',
  card_travel: 'card_travel',
  change_history: 'change_history',
  check_circle: 'check_circle',
  check_circle_outline: 'check_circle_outline',
  chrome_reader_mode: 'chrome_reader_mode',
  class: 'class',
  close_fullscreen: 'close_fullscreen',
  code: 'code',
  comment_bank: 'comment_bank',
  commute: 'commute',
  compare_arrows: 'compare_arrows',
  contact_page: 'contact_page',
  contact_support: 'contact_support',
  contactless: 'contactless',
  copyright: 'copyright',
  credit_card: 'credit_card',
  dashboard: 'dashboard',
  date_range: 'date_range',
  delete: 'delete',
  delete_forever: 'delete_forever',
  delete_outline: 'delete_outline',
  description: 'description',
  disabled_by_default: 'disabled_by_default',
  dns: 'dns',
  done: 'done',
  done_all: 'done_all',
  done_outline: 'done_outline',
  donut_large: 'donut_large',
  donut_small: 'donut_small',
  drag_indicator: 'drag_indicator',
  dynamic_form: 'dynamic_form',
  eco: 'eco',
  eject: 'eject',
  euro_symbol: 'euro_symbol',
  event: 'event',
  event_seat: 'event_seat',
  exit_to_app: 'exit_to_app',
  explore: 'explore',
  explore_off: 'explore_off',
  extension: 'extension',
  face: 'face',
  fact_check: 'fact_check',
  favorite: 'favorite',
  favorite_border: 'favorite_border',
  feedback: 'feedback',
  filter_alt: 'filter_alt',
  find_in_page: 'find_in_page',
  find_replace: 'find_replace',
  fingerprint: 'fingerprint',
  flaky: 'flaky',
  flight_land: 'flight_land',
  flight_takeoff: 'flight_takeoff',
  flip_to_back: 'flip_to_back',
  flip_to_front: 'flip_to_front',
  g_translate: 'g_translate',
  gavel: 'gavel',
  get_app: 'get_app',
  gif: 'gif',
  grade: 'grade',
  grading: 'grading',
  group_work: 'group_work',
  help: 'help',
  help_center: 'help_center',
  help_outline: 'help_outline',
  highlight_alt: 'highlight_alt',
  highlight_off: 'highlight_off',
  history: 'history',
  history_toggle_off: 'history_toggle_off',
  home: 'home',
  horizontal_split: 'horizontal_split',
  hourglass_disabled: 'hourglass_disabled',
  hourglass_empty: 'hourglass_empty',
  hourglass_full: 'hourglass_full',
  http: 'http',
  https: 'https',
  important_devices: 'important_devices',
  info: 'info',
  input: 'input',
  integration_instructions: 'integration_instructions',
  invert_colors: 'invert_colors',
  label: 'label',
  label_important: 'label_important',
  label_off: 'label_off',
  language: 'language',
  launch: 'launch',
  leaderboard: 'leaderboard',
  line_style: 'line_style',
  line_weight: 'line_weight',
  list: 'list',
  lock: 'lock',
  lock_open: 'lock_open',
  login: 'login',
  loyalty: 'loyalty',
  markunread_mailbox: 'markunread_mailbox',
  maximize: 'maximize',
  mediation: 'mediation',
  minimize: 'minimize',
  model_training: 'model_training',
  next_plan: 'next_plan',
  not_accessible: 'not_accessible',
  not_started: 'not_started',
  note_add: 'note_add',
  offline_bolt: 'offline_bolt',
  offline_pin: 'offline_pin',
  online_prediction: 'online_prediction',
  opacity: 'opacity',
  open_in_browser: 'open_in_browser',
  open_in_full: 'open_in_full',
  open_in_new: 'open_in_new',
  open_with: 'open_with',
  outbond: 'outbond',
  outlet: 'outlet',
  pageview: 'pageview',
  pan_tool: 'pan_tool',
  payment: 'payment',
  pending: 'pending',
  pending_actions: 'pending_actions',
  perm_camera_mic: 'perm_camera_mic',
  perm_contact_calendar: 'perm_contact_calendar',
  perm_data_setting: 'perm_data_setting',
  perm_device_information: 'perm_device_information',
  perm_identity: 'perm_identity',
  perm_media: 'perm_media',
  perm_phone_msg: 'perm_phone_msg',
  perm_scan_wifi: 'perm_scan_wifi',
  pets: 'pets',
  picture_in_picture: 'picture_in_picture',
  picture_in_picture_alt: 'picture_in_picture_alt',
  plagiarism: 'plagiarism',
  play_for_work: 'play_for_work',
  polymer: 'polymer',
  power_settings_new: 'power_settings_new',
  pregnant_woman: 'pregnant_woman',
  preview: 'preview',
  print: 'print',
  privacy_tip: 'privacy_tip',
  published_with_changes: 'published_with_changes',
  query_builder: 'query_builder',
  question_answer: 'question_answer',
  quickreply: 'quickreply',
  receipt: 'receipt',
  record_voice_over: 'record_voice_over',
  redeem: 'redeem',
  remove_shopping_cart: 'remove_shopping_cart',
  reorder: 'reorder',
  report_problem: 'report_problem',
  request_page: 'request_page',
  restore: 'restore',
  restore_from_trash: 'restore_from_trash',
  restore_page: 'restore_page',
  room: 'room',
  rounded_corner: 'rounded_corner',
  rowing: 'rowing',
  rule: 'rule',
  schedule: 'schedule',
  search: 'search',
  search_off: 'search_off',
  settings: 'settings',
  settings_applications: 'settings_applications',
  settings_backup_restore: 'settings_backup_restore',
  settings_bluetooth: 'settings_bluetooth',
  settings_brightness: 'settings_brightness',
  settings_cell: 'settings_cell',
  settings_ethernet: 'settings_ethernet',
  settings_input_antenna: 'settings_input_antenna',
  settings_input_component: 'settings_input_component',
  settings_input_composite: 'settings_input_composite',
  settings_input_hdmi: 'settings_input_hdmi',
  settings_input_svideo: 'settings_input_svideo',
  settings_overscan: 'settings_overscan',
  settings_phone: 'settings_phone',
  settings_power: 'settings_power',
  settings_remote: 'settings_remote',
  settings_voice: 'settings_voice',
  shop: 'shop',
  shop_two: 'shop_two',
  shopping_bag: 'shopping_bag',
  shopping_basket: 'shopping_basket',
  shopping_cart: 'shopping_cart',
  smart_button: 'smart_button',
  source: 'source',
  speaker_notes: 'speaker_notes',
  speaker_notes_off: 'speaker_notes_off',
  spellcheck: 'spellcheck',
  star_rate: 'star_rate',
  stars: 'stars',
  sticky_note_2: 'sticky_note_2',
  store: 'store',
  subject: 'subject',
  subtitles_off: 'subtitles_off',
  supervised_user_circle: 'supervised_user_circle',
  supervisor_account: 'supervisor_account',
  support: 'support',
  swap_horiz: 'swap_horiz',
  swap_horizontal_circle: 'swap_horizontal_circle',
  swap_vert: 'swap_vert',
  swap_vertical_circle: 'swap_vertical_circle',
  sync_alt: 'sync_alt',
  system_update_alt: 'system_update_alt',
  tab: 'tab',
  tab_unselected: 'tab_unselected',
  table_view: 'table_view',
  text_rotate_up: 'text_rotate_up',
  text_rotate_vertical: 'text_rotate_vertical',
  text_rotation_angledown: 'text_rotation_angledown',
  text_rotation_angleup: 'text_rotation_angleup',
  text_rotation_down: 'text_rotation_down',
  text_rotation_none: 'text_rotation_none',
  theaters: 'theaters',
  thumb_down: 'thumb_down',
  thumb_up: 'thumb_up',
  thumbs_up_down: 'thumbs_up_down',
  timeline: 'timeline',
  toc: 'toc',
  today: 'today',
  toll: 'toll',
  touch_app: 'touch_app',
  tour: 'tour',
  track_changes: 'track_changes',
  translate: 'translate',
  trending_down: 'trending_down',
  trending_flat: 'trending_flat',
  trending_up: 'trending_up',
  turned_in: 'turned_in',
  turned_in_not: 'turned_in_not',
  unpublished: 'unpublished',
  update: 'update',
  update_disabled: 'update_disabled',
  upgrade: 'upgrade',
  verified: 'verified',
  verified_user: 'verified_user',
  vertical_split: 'vertical_split',
  view_agenda: 'view_agenda',
  view_array: 'view_array',
  view_carousel: 'view_carousel',
  view_column: 'view_column',
  view_day: 'view_day',
  view_headline: 'view_headline',
  view_list: 'view_list',
  view_module: 'view_module',
  view_quilt: 'view_quilt',
  view_sidebar: 'view_sidebar',
  view_stream: 'view_stream',
  view_week: 'view_week',
  visibility: 'visibility',
  visibility_off: 'visibility_off',
  voice_over_off: 'voice_over_off',
  watch_later: 'watch_later',
  wifi_protected_setup: 'wifi_protected_setup',
  work: 'work',
  work_off: 'work_off',
  work_outline: 'work_outline',
  wysiwyg: 'wysiwyg',
  youtube_searched_for: 'youtube_searched_for',
  zoom_in: 'zoom_in',
  zoom_out: 'zoom_out',
  // alert: 'alert',
  add_alert: 'add_alert',
  auto_delete: 'auto_delete',
  error: 'error',
  error_outline: 'error_outline',
  notification_important: 'notification_important',
  warning: 'warning',
  // av: 'av',
  '4k': '4k',
  '5g': '5g',
  add_to_queue: 'add_to_queue',
  airplay: 'airplay',
  album: 'album',
  art_track: 'art_track',
  av_timer: 'av_timer',
  branding_watermark: 'branding_watermark',
  call_to_action: 'call_to_action',
  closed_caption: 'closed_caption',
  closed_caption_disabled: 'closed_caption_disabled',
  control_camera: 'control_camera',
  equalizer: 'equalizer',
  explicit: 'explicit',
  fast_forward: 'fast_forward',
  fast_rewind: 'fast_rewind',
  featured_play_list: 'featured_play_list',
  featured_video: 'featured_video',
  fiber_dvr: 'fiber_dvr',
  fiber_manual_record: 'fiber_manual_record',
  fiber_new: 'fiber_new',
  fiber_pin: 'fiber_pin',
  fiber_smart_record: 'fiber_smart_record',
  forward_10: 'forward_10',
  forward_30: 'forward_30',
  forward_5: 'forward_5',
  games: 'games',
  hd: 'hd',
  hearing: 'hearing',
  hearing_disabled: 'hearing_disabled',
  high_quality: 'high_quality',
  library_add: 'library_add',
  library_add_check: 'library_add_check',
  library_books: 'library_books',
  library_music: 'library_music',
  loop: 'loop',
  mic: 'mic',
  mic_none: 'mic_none',
  mic_off: 'mic_off',
  missed_video_call: 'missed_video_call',
  movie: 'movie',
  music_video: 'music_video',
  new_releases: 'new_releases',
  not_interested: 'not_interested',
  note: 'note',
  pause: 'pause',
  pause_circle_filled: 'pause_circle_filled',
  pause_circle_outline: 'pause_circle_outline',
  play_arrow: 'play_arrow',
  play_circle_filled: 'play_circle_filled',
  play_circle_outline: 'play_circle_outline',
  playlist_add: 'playlist_add',
  playlist_add_check: 'playlist_add_check',
  playlist_play: 'playlist_play',
  queue: 'queue',
  queue_music: 'queue_music',
  queue_play_next: 'queue_play_next',
  radio: 'radio',
  recent_actors: 'recent_actors',
  remove_from_queue: 'remove_from_queue',
  repeat: 'repeat',
  repeat_one: 'repeat_one',
  replay: 'replay',
  replay_10: 'replay_10',
  replay_30: 'replay_30',
  replay_5: 'replay_5',
  shuffle: 'shuffle',
  skip_next: 'skip_next',
  skip_previous: 'skip_previous',
  slow_motion_video: 'slow_motion_video',
  snooze: 'snooze',
  sort_by_alpha: 'sort_by_alpha',
  speed: 'speed',
  stop: 'stop',
  stop_circle: 'stop_circle',
  subscriptions: 'subscriptions',
  subtitles: 'subtitles',
  surround_sound: 'surround_sound',
  video_call: 'video_call',
  video_label: 'video_label',
  video_library: 'video_library',
  video_settings: 'video_settings',
  videocam: 'videocam',
  videocam_off: 'videocam_off',
  volume_down: 'volume_down',
  volume_mute: 'volume_mute',
  volume_off: 'volume_off',
  volume_up: 'volume_up',
  web: 'web',
  web_asset: 'web_asset',
  // communication: 'communication',
  add_ic_call: 'add_ic_call',
  alternate_email: 'alternate_email',
  business: 'business',
  call: 'call',
  call_end: 'call_end',
  call_made: 'call_made',
  call_merge: 'call_merge',
  call_missed: 'call_missed',
  call_missed_outgoing: 'call_missed_outgoing',
  call_received: 'call_received',
  call_split: 'call_split',
  cancel_presentation: 'cancel_presentation',
  chat: 'chat',
  chat_bubble: 'chat_bubble',
  chat_bubble_outline: 'chat_bubble_outline',
  clear_all: 'clear_all',
  comment: 'comment',
  contact_mail: 'contact_mail',
  contact_phone: 'contact_phone',
  contacts: 'contacts',
  desktop_access_disabled: 'desktop_access_disabled',
  dialer_sip: 'dialer_sip',
  dialpad: 'dialpad',
  domain_disabled: 'domain_disabled',
  domain_verification: 'domain_verification',
  duo: 'duo',
  email: 'email',
  forum: 'forum',
  forward_to_inbox: 'forward_to_inbox',
  hourglass_bottom: 'hourglass_bottom',
  hourglass_top: 'hourglass_top',
  import_contacts: 'import_contacts',
  import_export: 'import_export',
  invert_colors_off: 'invert_colors_off',
  list_alt: 'list_alt',
  live_help: 'live_help',
  location_off: 'location_off',
  location_on: 'location_on',
  mail_outline: 'mail_outline',
  mark_chat_read: 'mark_chat_read',
  mark_chat_unread: 'mark_chat_unread',
  mark_email_read: 'mark_email_read',
  mark_email_unread: 'mark_email_unread',
  message: 'message',
  mobile_screen_share: 'mobile_screen_share',
  more_time: 'more_time',
  nat: 'nat',
  no_sim: 'no_sim',
  pause_presentation: 'pause_presentation',
  person_add_disabled: 'person_add_disabled',
  person_search: 'person_search',
  phone: 'phone',
  phone_disabled: 'phone_disabled',
  phone_enabled: 'phone_enabled',
  phonelink_erase: 'phonelink_erase',
  phonelink_lock: 'phonelink_lock',
  phonelink_ring: 'phonelink_ring',
  phonelink_setup: 'phonelink_setup',
  portable_wifi_off: 'portable_wifi_off',
  present_to_all: 'present_to_all',
  print_disabled: 'print_disabled',
  qr_code: 'qr_code',
  qr_code_2: 'qr_code_2',
  qr_code_scanner: 'qr_code_scanner',
  read_more: 'read_more',
  ring_volume: 'ring_volume',
  rss_feed: 'rss_feed',
  screen_share: 'screen_share',
  sentiment_satisfied_alt: 'sentiment_satisfied_alt',
  speaker_phone: 'speaker_phone',
  stay_current_landscape: 'stay_current_landscape',
  stay_current_portrait: 'stay_current_portrait',
  stay_primary_landscape: 'stay_primary_landscape',
  stay_primary_portrait: 'stay_primary_portrait',
  stop_screen_share: 'stop_screen_share',
  swap_calls: 'swap_calls',
  textsms: 'textsms',
  unsubscribe: 'unsubscribe',
  voicemail: 'voicemail',
  vpn_key: 'vpn_key',
  wifi_calling: 'wifi_calling',
  // content: 'content',
  add: 'add',
  add_box: 'add_box',
  add_circle: 'add_circle',
  add_circle_outline: 'add_circle_outline',
  amp_stories: 'amp_stories',
  archive: 'archive',
  backspace: 'backspace',
  ballot: 'ballot',
  biotech: 'biotech',
  block: 'block',
  calculate: 'calculate',
  clear: 'clear',
  content_copy: 'content_copy',
  content_cut: 'content_cut',
  content_paste: 'content_paste',
  create: 'create',
  delete_sweep: 'delete_sweep',
  drafts: 'drafts',
  dynamic_feed: 'dynamic_feed',
  file_copy: 'file_copy',
  filter_list: 'filter_list',
  flag: 'flag',
  font_download: 'font_download',
  forward: 'forward',
  gesture: 'gesture',
  how_to_reg: 'how_to_reg',
  how_to_vote: 'how_to_vote',
  inbox: 'inbox',
  insights: 'insights',
  link: 'link',
  link_off: 'link_off',
  low_priority: 'low_priority',
  mail: 'mail',
  markunread: 'markunread',
  move_to_inbox: 'move_to_inbox',
  next_week: 'next_week',
  outlined_flag: 'outlined_flag',
  policy: 'policy',
  push_pin: 'push_pin',
  redo: 'redo',
  remove: 'remove',
  remove_circle: 'remove_circle',
  remove_circle_outline: 'remove_circle_outline',
  reply: 'reply',
  reply_all: 'reply_all',
  report: 'report',
  report_off: 'report_off',
  save: 'save',
  save_alt: 'save_alt',
  select_all: 'select_all',
  send: 'send',
  sort: 'sort',
  square_foot: 'square_foot',
  text_format: 'text_format',
  unarchive: 'unarchive',
  undo: 'undo',
  waves: 'waves',
  weekend: 'weekend',
  where_to_vote: 'where_to_vote',
  // device: 'device',
  access_alarm: 'access_alarm',
  access_alarms: 'access_alarms',
  access_time: 'access_time',
  ad_units: 'ad_units',
  add_alarm: 'add_alarm',
  add_to_home_screen: 'add_to_home_screen',
  airplanemode_active: 'airplanemode_active',
  airplanemode_inactive: 'airplanemode_inactive',
  battery_alert: 'battery_alert',
  battery_charging_full: 'battery_charging_full',
  battery_full: 'battery_full',
  battery_std: 'battery_std',
  battery_unknown: 'battery_unknown',
  bluetooth: 'bluetooth',
  bluetooth_connected: 'bluetooth_connected',
  bluetooth_disabled: 'bluetooth_disabled',
  bluetooth_searching: 'bluetooth_searching',
  brightness_auto: 'brightness_auto',
  brightness_high: 'brightness_high',
  brightness_low: 'brightness_low',
  brightness_medium: 'brightness_medium',
  data_usage: 'data_usage',
  developer_mode: 'developer_mode',
  devices: 'devices',
  dvr: 'dvr',
  gps_fixed: 'gps_fixed',
  gps_not_fixed: 'gps_not_fixed',
  gps_off: 'gps_off',
  graphic_eq: 'graphic_eq',
  location_disabled: 'location_disabled',
  location_searching: 'location_searching',
  mobile_friendly: 'mobile_friendly',
  mobile_off: 'mobile_off',
  nfc: 'nfc',
  screen_lock_landscape: 'screen_lock_landscape',
  screen_lock_portrait: 'screen_lock_portrait',
  screen_lock_rotation: 'screen_lock_rotation',
  screen_rotation: 'screen_rotation',
  sd_storage: 'sd_storage',
  settings_system_daydream: 'settings_system_daydream',
  signal_cellular_4_bar: 'signal_cellular_4_bar',
  signal_cellular_alt: 'signal_cellular_alt',
  signal_cellular_connected_no_internet_4_bar: 'signal_cellular_connected_no_internet_4_bar',
  signal_cellular_no_sim: 'signal_cellular_no_sim',
  signal_cellular_null: 'signal_cellular_null',
  signal_cellular_off: 'signal_cellular_off',
  signal_wifi_4_bar: 'signal_wifi_4_bar',
  signal_wifi_4_bar_lock: 'signal_wifi_4_bar_lock',
  signal_wifi_off: 'signal_wifi_off',
  storage: 'storage',
  usb: 'usb',
  wallpaper: 'wallpaper',
  widgets: 'widgets',
  wifi_lock: 'wifi_lock',
  wifi_tethering: 'wifi_tethering',
  // editor: 'editor',
  add_comment: 'add_comment',
  align_horizontal_center: 'align_horizontal_center',
  align_horizontal_left: 'align_horizontal_left',
  align_horizontal_right: 'align_horizontal_right',
  align_vertical_bottom: 'align_vertical_bottom',
  align_vertical_center: 'align_vertical_center',
  align_vertical_top: 'align_vertical_top',
  attach_file: 'attach_file',
  attach_money: 'attach_money',
  bar_chart: 'bar_chart',
  border_all: 'border_all',
  border_bottom: 'border_bottom',
  border_clear: 'border_clear',
  border_horizontal: 'border_horizontal',
  border_inner: 'border_inner',
  border_left: 'border_left',
  border_outer: 'border_outer',
  border_right: 'border_right',
  border_style: 'border_style',
  border_top: 'border_top',
  border_vertical: 'border_vertical',
  bubble_chart: 'bubble_chart',
  drag_handle: 'drag_handle',
  format_align_center: 'format_align_center',
  format_align_justify: 'format_align_justify',
  format_align_left: 'format_align_left',
  format_align_right: 'format_align_right',
  format_bold: 'format_bold',
  format_clear: 'format_clear',
  format_color_reset: 'format_color_reset',
  format_indent_decrease: 'format_indent_decrease',
  format_indent_increase: 'format_indent_increase',
  format_italic: 'format_italic',
  format_line_spacing: 'format_line_spacing',
  format_list_bulleted: 'format_list_bulleted',
  format_list_numbered: 'format_list_numbered',
  format_list_numbered_rtl: 'format_list_numbered_rtl',
  format_paint: 'format_paint',
  format_quote: 'format_quote',
  format_shapes: 'format_shapes',
  format_size: 'format_size',
  format_strikethrough: 'format_strikethrough',
  format_textdirection_l_to_r: 'format_textdirection_l_to_r',
  format_textdirection_r_to_l: 'format_textdirection_r_to_l',
  format_underlined: 'format_underlined',
  functions: 'functions',
  height: 'height',
  highlight: 'highlight',
  horizontal_distribute: 'horizontal_distribute',
  horizontal_rule: 'horizontal_rule',
  insert_chart: 'insert_chart',
  insert_chart_outlined: 'insert_chart_outlined',
  insert_comment: 'insert_comment',
  insert_drive_file: 'insert_drive_file',
  insert_emoticon: 'insert_emoticon',
  insert_invitation: 'insert_invitation',
  insert_link: 'insert_link',
  insert_photo: 'insert_photo',
  linear_scale: 'linear_scale',
  merge_type: 'merge_type',
  mode_comment: 'mode_comment',
  monetization_on: 'monetization_on',
  money_off: 'money_off',
  multiline_chart: 'multiline_chart',
  notes: 'notes',
  pie_chart: 'pie_chart',
  post_add: 'post_add',
  publish: 'publish',
  scatter_plot: 'scatter_plot',
  score: 'score',
  short_text: 'short_text',
  show_chart: 'show_chart',
  space_bar: 'space_bar',
  stacked_line_chart: 'stacked_line_chart',
  strikethrough_s: 'strikethrough_s',
  subscript: 'subscript',
  superscript: 'superscript',
  table_chart: 'table_chart',
  table_rows: 'table_rows',
  text_fields: 'text_fields',
  title: 'title',
  vertical_align_bottom: 'vertical_align_bottom',
  vertical_align_center: 'vertical_align_center',
  vertical_align_top: 'vertical_align_top',
  vertical_distribute: 'vertical_distribute',
  wrap_text: 'wrap_text',
  // file: 'file',
  attach_email: 'attach_email',
  attachment: 'attachment',
  cloud: 'cloud',
  cloud_circle: 'cloud_circle',
  cloud_done: 'cloud_done',
  cloud_download: 'cloud_download',
  cloud_off: 'cloud_off',
  cloud_queue: 'cloud_queue',
  cloud_upload: 'cloud_upload',
  create_new_folder: 'create_new_folder',
  folder: 'folder',
  folder_open: 'folder_open',
  folder_shared: 'folder_shared',
  request_quote: 'request_quote',
  rule_folder: 'rule_folder',
  snippet_folder: 'snippet_folder',
  text_snippet: 'text_snippet',
  topic: 'topic',
  hardware: 'hardware',
  browser_not_supported: 'browser_not_supported',
  cast: 'cast',
  cast_connected: 'cast_connected',
  cast_for_education: 'cast_for_education',
  computer: 'computer',
  desktop_mac: 'desktop_mac',
  desktop_windows: 'desktop_windows',
  developer_board: 'developer_board',
  device_hub: 'device_hub',
  device_unknown: 'device_unknown',
  devices_other: 'devices_other',
  dock: 'dock',
  gamepad: 'gamepad',
  headset: 'headset',
  headset_mic: 'headset_mic',
  keyboard: 'keyboard',
  keyboard_arrow_down: 'keyboard_arrow_down',
  keyboard_arrow_left: 'keyboard_arrow_left',
  keyboard_arrow_right: 'keyboard_arrow_right',
  keyboard_arrow_up: 'keyboard_arrow_up',
  keyboard_backspace: 'keyboard_backspace',
  keyboard_capslock: 'keyboard_capslock',
  keyboard_hide: 'keyboard_hide',
  keyboard_return: 'keyboard_return',
  keyboard_tab: 'keyboard_tab',
  keyboard_voice: 'keyboard_voice',
  laptop: 'laptop',
  laptop_chromebook: 'laptop_chromebook',
  laptop_mac: 'laptop_mac',
  laptop_windows: 'laptop_windows',
  memory: 'memory',
  mouse: 'mouse',
  phone_android: 'phone_android',
  phone_iphone: 'phone_iphone',
  phonelink: 'phonelink',
  phonelink_off: 'phonelink_off',
  point_of_sale: 'point_of_sale',
  power_input: 'power_input',
  router: 'router',
  scanner: 'scanner',
  security: 'security',
  sim_card: 'sim_card',
  smartphone: 'smartphone',
  speaker: 'speaker',
  speaker_group: 'speaker_group',
  tablet: 'tablet',
  tablet_android: 'tablet_android',
  tablet_mac: 'tablet_mac',
  toys: 'toys',
  tv: 'tv',
  videogame_asset: 'videogame_asset',
  watch: 'watch',
  sensor_door: 'sensor_door',
  sensor_window: 'sensor_window',
  image: 'image',
  add_a_photo: 'add_a_photo',
  add_photo_alternate: 'add_photo_alternate',
  add_to_photos: 'add_to_photos',
  adjust: 'adjust',
  assistant: 'assistant',
  assistant_photo: 'assistant_photo',
  audiotrack: 'audiotrack',
  bedtime: 'bedtime',
  blur_circular: 'blur_circular',
  blur_linear: 'blur_linear',
  blur_off: 'blur_off',
  blur_on: 'blur_on',
  brightness_1: 'brightness_1',
  brightness_2: 'brightness_2',
  brightness_3: 'brightness_3',
  brightness_4: 'brightness_4',
  brightness_5: 'brightness_5',
  brightness_6: 'brightness_6',
  brightness_7: 'brightness_7',
  broken_image: 'broken_image',
  brush: 'brush',
  burst_mode: 'burst_mode',
  camera: 'camera',
  camera_alt: 'camera_alt',
  camera_front: 'camera_front',
  camera_rear: 'camera_rear',
  camera_roll: 'camera_roll',
  center_focus_strong: 'center_focus_strong',
  center_focus_weak: 'center_focus_weak',
  collections: 'collections',
  collections_bookmark: 'collections_bookmark',
  color_lens: 'color_lens',
  colorize: 'colorize',
  compare: 'compare',
  control_point: 'control_point',
  control_point_duplicate: 'control_point_duplicate',
  crop: 'crop',
  crop_16_9: 'crop_16_9',
  crop_3_2: 'crop_3_2',
  crop_5_4: 'crop_5_4',
  crop_7_5: 'crop_7_5',
  crop_din: 'crop_din',
  crop_free: 'crop_free',
  crop_landscape: 'crop_landscape',
  crop_original: 'crop_original',
  crop_portrait: 'crop_portrait',
  crop_rotate: 'crop_rotate',
  crop_square: 'crop_square',
  dehaze: 'dehaze',
  details: 'details',
  edit: 'edit',
  euro: 'euro',
  exposure: 'exposure',
  exposure_neg_1: 'exposure_neg_1',
  exposure_neg_2: 'exposure_neg_2',
  exposure_plus_1: 'exposure_plus_1',
  exposure_plus_2: 'exposure_plus_2',
  exposure_zero: 'exposure_zero',
  filter: 'filter',
  filter_1: 'filter_1',
  filter_2: 'filter_2',
  filter_3: 'filter_3',
  filter_4: 'filter_4',
  filter_5: 'filter_5',
  filter_6: 'filter_6',
  filter_7: 'filter_7',
  filter_8: 'filter_8',
  filter_9: 'filter_9',
  filter_9_plus: 'filter_9_plus',
  filter_b_and_w: 'filter_b_and_w',
  filter_center_focus: 'filter_center_focus',
  filter_drama: 'filter_drama',
  filter_frames: 'filter_frames',
  filter_hdr: 'filter_hdr',
  filter_none: 'filter_none',
  filter_tilt_shift: 'filter_tilt_shift',
  filter_vintage: 'filter_vintage',
  flare: 'flare',
  flash_auto: 'flash_auto',
  flash_off: 'flash_off',
  flash_on: 'flash_on',
  flip: 'flip',
  flip_camera_android: 'flip_camera_android',
  flip_camera_ios: 'flip_camera_ios',
  gradient: 'gradient',
  grain: 'grain',
  grid_off: 'grid_off',
  grid_on: 'grid_on',
  hdr_off: 'hdr_off',
  hdr_on: 'hdr_on',
  hdr_strong: 'hdr_strong',
  hdr_weak: 'hdr_weak',
  healing: 'healing',
  image_aspect_ratio: 'image_aspect_ratio',
  image_not_supported: 'image_not_supported',
  image_search: 'image_search',
  iso: 'iso',
  landscape: 'landscape',
  leak_add: 'leak_add',
  leak_remove: 'leak_remove',
  lens: 'lens',
  linked_camera: 'linked_camera',
  looks: 'looks',
  looks_3: 'looks_3',
  looks_4: 'looks_4',
  looks_5: 'looks_5',
  looks_6: 'looks_6',
  looks_one: 'looks_one',
  looks_two: 'looks_two',
  loupe: 'loupe',
  monochrome_photos: 'monochrome_photos',
  motion_photos_on: 'motion_photos_on',
  motion_photos_pause: 'motion_photos_pause',
  motion_photos_paused: 'motion_photos_paused',
  movie_creation: 'movie_creation',
  movie_filter: 'movie_filter',
  music_note: 'music_note',
  music_off: 'music_off',
  nature: 'nature',
  nature_people: 'nature_people',
  navigate_before: 'navigate_before',
  navigate_next: 'navigate_next',
  palette: 'palette',
  panorama: 'panorama',
  panorama_fish_eye: 'panorama_fish_eye',
  panorama_horizontal: 'panorama_horizontal',
  panorama_vertical: 'panorama_vertical',
  panorama_wide_angle: 'panorama_wide_angle',
  photo: 'photo',
  photo_album: 'photo_album',
  photo_camera: 'photo_camera',
  photo_filter: 'photo_filter',
  photo_library: 'photo_library',
  photo_size_select_actual: 'photo_size_select_actual',
  photo_size_select_large: 'photo_size_select_large',
  photo_size_select_small: 'photo_size_select_small',
  picture_as_pdf: 'picture_as_pdf',
  portrait: 'portrait',
  receipt_long: 'receipt_long',
  remove_red_eye: 'remove_red_eye',
  rotate_90_degrees_ccw: 'rotate_90_degrees_ccw',
  rotate_left: 'rotate_left',
  rotate_right: 'rotate_right',
  shutter_speed: 'shutter_speed',
  slideshow: 'slideshow',
  straighten: 'straighten',
  style: 'style',
  switch_camera: 'switch_camera',
  switch_video: 'switch_video',
  tag_faces: 'tag_faces',
  texture: 'texture',
  timelapse: 'timelapse',
  timer: 'timer',
  timer_10: 'timer_10',
  timer_3: 'timer_3',
  timer_off: 'timer_off',
  tonality: 'tonality',
  transform: 'transform',
  tune: 'tune',
  view_comfy: 'view_comfy',
  view_compact: 'view_compact',
  vignette: 'vignette',
  wb_auto: 'wb_auto',
  wb_cloudy: 'wb_cloudy',
  wb_incandescent: 'wb_incandescent',
  wb_iridescent: 'wb_iridescent',
  wb_sunny: 'wb_sunny',
  maps: 'maps',
  360: '360',
  add_business: 'add_business',
  add_location: 'add_location',
  add_location_alt: 'add_location_alt',
  add_road: 'add_road',
  agriculture: 'agriculture',
  alt_route: 'alt_route',
  atm: 'atm',
  beenhere: 'beenhere',
  bike_scooter: 'bike_scooter',
  category: 'category',
  cleaning_services: 'cleaning_services',
  compass_calibration: 'compass_calibration',
  departure_board: 'departure_board',
  design_services: 'design_services',
  directions: 'directions',
  directions_bike: 'directions_bike',
  directions_boat: 'directions_boat',
  directions_bus: 'directions_bus',
  directions_car: 'directions_car',
  directions_railway: 'directions_railway',
  directions_run: 'directions_run',
  directions_subway: 'directions_subway',
  directions_transit: 'directions_transit',
  directions_walk: 'directions_walk',
  edit_attributes: 'edit_attributes',
  edit_location: 'edit_location',
  edit_road: 'edit_road',
  electric_bike: 'electric_bike',
  electric_car: 'electric_car',
  electric_moped: 'electric_moped',
  electric_scooter: 'electric_scooter',
  electrical_services: 'electrical_services',
  ev_station: 'ev_station',
  fastfood: 'fastfood',
  flight: 'flight',
  handyman: 'handyman',
  home_repair_service: 'home_repair_service',
  hotel: 'hotel',
  hvac: 'hvac',
  layers: 'layers',
  layers_clear: 'layers_clear',
  local_activity: 'local_activity',
  local_airport: 'local_airport',
  local_atm: 'local_atm',
  local_bar: 'local_bar',
  local_cafe: 'local_cafe',
  local_car_wash: 'local_car_wash',
  local_convenience_store: 'local_convenience_store',
  local_dining: 'local_dining',
  local_drink: 'local_drink',
  local_fire_department: 'local_fire_department',
  local_florist: 'local_florist',
  local_gas_station: 'local_gas_station',
  local_grocery_store: 'local_grocery_store',
  local_hospital: 'local_hospital',
  local_hotel: 'local_hotel',
  local_laundry_service: 'local_laundry_service',
  local_library: 'local_library',
  local_mall: 'local_mall',
  local_movies: 'local_movies',
  local_offer: 'local_offer',
  local_parking: 'local_parking',
  local_pharmacy: 'local_pharmacy',
  local_phone: 'local_phone',
  local_pizza: 'local_pizza',
  local_play: 'local_play',
  local_police: 'local_police',
  local_post_office: 'local_post_office',
  local_printshop: 'local_printshop',
  local_see: 'local_see',
  local_shipping: 'local_shipping',
  local_taxi: 'local_taxi',
  map: 'map',
  maps_ugc: 'maps_ugc',
  medical_services: 'medical_services',
  menu_book: 'menu_book',
  miscellaneous_services: 'miscellaneous_services',
  money: 'money',
  moped: 'moped',
  multiple_stop: 'multiple_stop',
  museum: 'museum',
  my_location: 'my_location',
  navigation: 'navigation',
  near_me: 'near_me',
  near_me_disabled: 'near_me_disabled',
  no_meals: 'no_meals',
  no_transfer: 'no_transfer',
  not_listed_location: 'not_listed_location',
  pedal_bike: 'pedal_bike',
  person_pin: 'person_pin',
  person_pin_circle: 'person_pin_circle',
  pest_control: 'pest_control',
  pest_control_rodent: 'pest_control_rodent',
  pin_drop: 'pin_drop',
  place: 'place',
  plumbing: 'plumbing',
  rate_review: 'rate_review',
  restaurant: 'restaurant',
  restaurant_menu: 'restaurant_menu',
  run_circle: 'run_circle',
  satellite: 'satellite',
  set_meal: 'set_meal',
  store_mall_directory: 'store_mall_directory',
  streetview: 'streetview',
  subway: 'subway',
  terrain: 'terrain',
  traffic: 'traffic',
  train: 'train',
  tram: 'tram',
  transfer_within_a_station: 'transfer_within_a_station',
  transit_enterexit: 'transit_enterexit',
  trip_origin: 'trip_origin',
  two_wheeler: 'two_wheeler',
  wine_bar: 'wine_bar',
  wrong_location: 'wrong_location',
  zoom_out_map: 'zoom_out_map',
  app_settings_alt: 'app_settings_alt',
  apps: 'apps',
  arrow_back: 'arrow_back',
  arrow_back_ios: 'arrow_back_ios',
  arrow_downward: 'arrow_downward',
  arrow_drop_down: 'arrow_drop_down',
  arrow_drop_down_circle: 'arrow_drop_down_circle',
  arrow_drop_up: 'arrow_drop_up',
  arrow_forward: 'arrow_forward',
  arrow_forward_ios: 'arrow_forward_ios',
  arrow_left: 'arrow_left',
  arrow_right: 'arrow_right',
  arrow_upward: 'arrow_upward',
  campaign: 'campaign',
  cancel: 'cancel',
  check: 'check',
  chevron_left: 'chevron_left',
  chevron_right: 'chevron_right',
  close: 'close',
  double_arrow: 'double_arrow',
  east: 'east',
  expand_less: 'expand_less',
  expand_more: 'expand_more',
  first_page: 'first_page',
  fullscreen: 'fullscreen',
  fullscreen_exit: 'fullscreen_exit',
  home_work: 'home_work',
  last_page: 'last_page',
  legend_toggle: 'legend_toggle',
  menu: 'menu',
  menu_open: 'menu_open',
  more_horiz: 'more_horiz',
  more_vert: 'more_vert',
  north: 'north',
  north_east: 'north_east',
  north_west: 'north_west',
  payments: 'payments',
  refresh: 'refresh',
  south: 'south',
  south_east: 'south_east',
  south_west: 'south_west',
  subdirectory_arrow_left: 'subdirectory_arrow_left',
  subdirectory_arrow_right: 'subdirectory_arrow_right',
  switch_left: 'switch_left',
  switch_right: 'switch_right',
  unfold_less: 'unfold_less',
  unfold_more: 'unfold_more',
  west: 'west',
  // notification: 'notification',
  account_tree: 'account_tree',
  adb: 'adb',
  airline_seat_flat: 'airline_seat_flat',
  airline_seat_flat_angled: 'airline_seat_flat_angled',
  airline_seat_individual_suite: 'airline_seat_individual_suite',
  airline_seat_legroom_extra: 'airline_seat_legroom_extra',
  airline_seat_legroom_normal: 'airline_seat_legroom_normal',
  airline_seat_legroom_reduced: 'airline_seat_legroom_reduced',
  airline_seat_recline_extra: 'airline_seat_recline_extra',
  airline_seat_recline_normal: 'airline_seat_recline_normal',
  bluetooth_audio: 'bluetooth_audio',
  confirmation_number: 'confirmation_number',
  directions_off: 'directions_off',
  disc_full: 'disc_full',
  drive_eta: 'drive_eta',
  enhanced_encryption: 'enhanced_encryption',
  event_available: 'event_available',
  event_busy: 'event_busy',
  event_note: 'event_note',
  folder_special: 'folder_special',
  live_tv: 'live_tv',
  mms: 'mms',
  more: 'more',
  network_check: 'network_check',
  network_locked: 'network_locked',
  no_encryption: 'no_encryption',
  ondemand_video: 'ondemand_video',
  personal_video: 'personal_video',
  phone_bluetooth_speaker: 'phone_bluetooth_speaker',
  phone_callback: 'phone_callback',
  phone_forwarded: 'phone_forwarded',
  phone_in_talk: 'phone_in_talk',
  phone_locked: 'phone_locked',
  phone_missed: 'phone_missed',
  phone_paused: 'phone_paused',
  power: 'power',
  power_off: 'power_off',
  priority_high: 'priority_high',
  sd_card: 'sd_card',
  sms: 'sms',
  sms_failed: 'sms_failed',
  support_agent: 'support_agent',
  sync: 'sync',
  sync_disabled: 'sync_disabled',
  sync_problem: 'sync_problem',
  system_update: 'system_update',
  tap_and_play: 'tap_and_play',
  time_to_leave: 'time_to_leave',
  tv_off: 'tv_off',
  vibration: 'vibration',
  voice_chat: 'voice_chat',
  vpn_lock: 'vpn_lock',
  wc: 'wc',
  wifi: 'wifi',
  wifi_off: 'wifi_off',
  places: 'places',
  ac_unit: 'ac_unit',
  airport_shuttle: 'airport_shuttle',
  all_inclusive: 'all_inclusive',
  apartment: 'apartment',
  baby_changing_station: 'baby_changing_station',
  backpack: 'backpack',
  bathtub: 'bathtub',
  beach_access: 'beach_access',
  bento: 'bento',
  business_center: 'business_center',
  carpenter: 'carpenter',
  casino: 'casino',
  charging_station: 'charging_station',
  checkroom: 'checkroom',
  child_care: 'child_care',
  child_friendly: 'child_friendly',
  corporate_fare: 'corporate_fare',
  countertops: 'countertops',
  do_not_step: 'do_not_step',
  do_not_touch: 'do_not_touch',
  dry: 'dry',
  elevator: 'elevator',
  escalator: 'escalator',
  escalator_warning: 'escalator_warning',
  family_restroom: 'family_restroom',
  fence: 'fence',
  fire_extinguisher: 'fire_extinguisher',
  fitness_center: 'fitness_center',
  food_bank: 'food_bank',
  foundation: 'foundation',
  free_breakfast: 'free_breakfast',
  golf_course: 'golf_course',
  grass: 'grass',
  hot_tub: 'hot_tub',
  house: 'house',
  house_siding: 'house_siding',
  kitchen: 'kitchen',
  meeting_room: 'meeting_room',
  microwave: 'microwave',
  night_shelter: 'night_shelter',
  no_backpack: 'no_backpack',
  no_cell: 'no_cell',
  no_drinks: 'no_drinks',
  no_flash: 'no_flash',
  no_food: 'no_food',
  no_meeting_room: 'no_meeting_room',
  no_photography: 'no_photography',
  no_stroller: 'no_stroller',
  pool: 'pool',
  rice_bowl: 'rice_bowl',
  roofing: 'roofing',
  room_preferences: 'room_preferences',
  room_service: 'room_service',
  rv_hookup: 'rv_hookup',
  smoke_free: 'smoke_free',
  smoking_rooms: 'smoking_rooms',
  soap: 'soap',
  spa: 'spa',
  sports_bar: 'sports_bar',
  stairs: 'stairs',
  storefront: 'storefront',
  stroller: 'stroller',
  tapas: 'tapas',
  tty: 'tty',
  umbrella: 'umbrella',
  wash: 'wash',
  water_damage: 'water_damage',
  wheelchair_pickup: 'wheelchair_pickup',
  // social: 'social',
  '6_ft_apart': '6_ft_apart',
  architecture: 'architecture',
  cake: 'cake',
  clean_hands: 'clean_hands',
  connect_without_contact: 'connect_without_contact',
  construction: 'construction',
  coronavirus: 'coronavirus',
  deck: 'deck',
  domain: 'domain',
  elderly: 'elderly',
  emoji_emotions: 'emoji_emotions',
  emoji_events: 'emoji_events',
  emoji_flags: 'emoji_flags',
  emoji_food_beverage: 'emoji_food_beverage',
  emoji_nature: 'emoji_nature',
  emoji_objects: 'emoji_objects',
  emoji_people: 'emoji_people',
  emoji_symbols: 'emoji_symbols',
  emoji_transportation: 'emoji_transportation',
  engineering: 'engineering',
  facebook: 'facebook',
  fireplace: 'fireplace',
  follow_the_signs: 'follow_the_signs',
  group: 'group',
  group_add: 'group_add',
  groups: 'groups',
  history_edu: 'history_edu',
  king_bed: 'king_bed',
  location_city: 'location_city',
  luggage: 'luggage',
  masks: 'masks',
  military_tech: 'military_tech',
  mood: 'mood',
  mood_bad: 'mood_bad',
  nights_stay: 'nights_stay',
  no_luggage: 'no_luggage',
  notifications: 'notifications',
  notifications_active: 'notifications_active',
  notifications_none: 'notifications_none',
  notifications_off: 'notifications_off',
  notifications_paused: 'notifications_paused',
  outdoor_grill: 'outdoor_grill',
  pages: 'pages',
  party_mode: 'party_mode',
  people: 'people',
  people_alt: 'people_alt',
  people_outline: 'people_outline',
  person: 'person',
  person_add: 'person_add',
  person_add_alt_1: 'person_add_alt_1',
  person_outline: 'person_outline',
  person_remove: 'person_remove',
  person_remove_alt_1: 'person_remove_alt_1',
  plus_one: 'plus_one',
  poll: 'poll',
  psychology: 'psychology',
  public: 'public',
  public_off: 'public_off',
  reduce_capacity: 'reduce_capacity',
  sanitizer: 'sanitizer',
  school: 'school',
  science: 'science',
  self_improvement: 'self_improvement',
  sentiment_dissatisfied: 'sentiment_dissatisfied',
  sentiment_satisfied: 'sentiment_satisfied',
  sentiment_very_dissatisfied: 'sentiment_very_dissatisfied',
  sentiment_very_satisfied: 'sentiment_very_satisfied',
  share: 'share',
  sick: 'sick',
  single_bed: 'single_bed',
  sports: 'sports',
  sports_baseball: 'sports_baseball',
  sports_basketball: 'sports_basketball',
  sports_cricket: 'sports_cricket',
  sports_esports: 'sports_esports',
  sports_football: 'sports_football',
  sports_golf: 'sports_golf',
  sports_handball: 'sports_handball',
  sports_hockey: 'sports_hockey',
  sports_kabaddi: 'sports_kabaddi',
  sports_mma: 'sports_mma',
  sports_motorsports: 'sports_motorsports',
  sports_rugby: 'sports_rugby',
  sports_soccer: 'sports_soccer',
  sports_tennis: 'sports_tennis',
  sports_volleyball: 'sports_volleyball',
  thumb_down_alt: 'thumb_down_alt',
  thumb_up_alt: 'thumb_up_alt',
  whatshot: 'whatshot',
  // toggle: 'toggle',
  check_box: 'check_box',
  check_box_outline_blank: 'check_box_outline_blank',
  indeterminate_check_box: 'indeterminate_check_box',
  radio_button_checked: 'radio_button_checked',
  radio_button_unchecked: 'radio_button_unchecked',
  star: 'star',
  star_border: 'star_border',
  star_half: 'star_half',
  star_outline: 'star_outline',
  toggle_off: 'toggle_off',
  toggle_on: 'toggle_on'
};

/**
 * Use to display warning for required props if they are only required conditionally
 * Example borrowed from https://reactjs.org/warnings/dont-call-proptypes.html#fixing-the-false-positive-in-third-party-proptypes
 * @param  {Function} propType      React propType, ie. PropTypes.bool
 * @param  {String}   componentName Name of the component the prop is in
 * @param  {String}   requiredBy    Name of prop that has to be sent to be required
 * @return {Function}               Validation function to display warning only if the requiredBy prop is sent and the prop is not used
 */
const requiredIfPropType = (propType, componentName, requiredBy) => function validate(props, propName) {
  for (var _len = arguments.length, rest = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    rest[_key - 2] = arguments[_key];
  }
  const originalPropType = propType(props, propName, ...rest);
  if (props[requiredBy] && !props[propName]) {
    const message = `\`${componentName}\`: \`${requiredBy}\` requires \`${propName}\` to be set.`;
    return new Error(message);
  }
  return originalPropType;
};

const useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;

/**
 * Check previous value of state or prop
 * @param  {Any} value        Value that ref is changing to
 * @param  {Any} initialValue Initial value
 * @return {Any}              Pervious value
 */
const usePrevious = (value, initialValue) => {
  const ref = React.useRef(initialValue);
  React.useEffect(() => {
    ref.current = value;
  });
  return ref.current;
};

exports.ConditionalWrapper = ConditionalWrapper;
exports.HoistingContext = HoistedContext;
exports.addClass = addClass;
exports.addProps = addProps;
exports.deprecatedComponent = deprecatedComponent;
exports.deprecatedOneOf = deprecatedOneOf;
exports.deprecatedProp = deprecatedProp;
exports.edsQuerySelector = edsQuerySelector;
exports.edsRandomId = edsRandomId;
exports.edsWarning = edsWarning;
exports.formatUnit = formatUnit;
exports.getElementNotFoundWarning = getElementNotFoundWarning;
exports.getInvalidSelectorWarning = getInvalidSelectorWarning;
exports.hoistingEnabled = hoistingEnabled;
exports.iconList = iconList;
exports.isSelectorValid = isSelectorValid;
exports.queryCheck = queryCheck;
exports.requiredIfPropType = requiredIfPropType;
exports.returnFocusAfterClosing = returnFocusAfterClosing;
exports.useIsomorphicLayoutEffect = useIsomorphicLayoutEffect;
exports.usePrevious = usePrevious;
//# sourceMappingURL=index.js.map
