import React from 'react';


export interface SnackbarProps {
    /**
    * Optional action button label. If set, an action button will be shown.
    *
    * Defaults to **null**.
    */
    actionLabel?: string;
    /**
    * Most commonly a string, but will accept any valid components or markup. If `label` and `children` are both set, `label` will take priority.
    *
    * Defaults to **null**.
    */
    children?: React.ReactNode;
    /**
    * The css class name to be passed through to the component markup.
    *
    * Defaults to **undefined**.
    */
    className?: string;
    /**
    * Sets whether the Snackbar closes when it is focused and the user presses the ESC key.
    *
    * Defaults to **true**.
    */
    closeOnEscape?: boolean;
    /**
    * Optional dismiss button label. If set, an button button will be shown.
    *
    * Defaults to **null**.
    */
    dismissLabel?: string;
    /**
    * The snackbar text. If `label` and `children` are both set, `label` will take priority.
    *
    * Defaults to **null**.
    */
    label?: string;
    /**
    * Positions the Snackbar on the leading edge of the screen (left in LTR, right in RTL) instead of centered.
    *
    * Defaults to **false**.
    */
    leading?: boolean;
    /**
    * Indicates that the Snackbar is open and visible.
    *
    * Defaults to **false**.
    */
    open?: boolean;
    /**
    * Positions the action button/icon below the label instead of alongside it.
    *
    * Defaults to **false**.
    */
    stacked?: boolean;
    /**
    * The time the snackbar will remain visible. The value must be between `4000` and `10000` or set to `-1` to disable the timeout.
    *
    * Defaults to **5000**.
    */
    timeout?: number;
    /**
    * Fired when the Snackbar action button is clicked.
    */
    onClick?: Function;
    /**
    * Fired when the Snackbar finishes its closing animation.
    */
    onClose?: Function;
    /**
    * Fired when the Snackbar begins it's closing animation.
    */
    onClosing?: Function;
    /**
    * Fired when the Snackbar finishes its opening animation.
    */
    onOpen?: Function;
    /**
    * Fired when the Snackbar begins it's opening animation.
    */
    onOpening?: Function;
}

/**
* Snackbars provide brief messages about app processes at the bottom of the screen. Snackbar works differently than Modal, the user must press tab to navigate to the Snackbar to focus on it.
 * @prop {string} actionLabel - Optional action button label. If set, an action button will be shown. Defaults to _null_.
 * @prop {React.ReactNode} children - Most commonly a string, but will accept any valid components or markup. If `label` and `children` are both set, `label` will take priority. Defaults to _null_.
 * @prop {string} className - The css class name to be passed through to the component markup. Defaults to _undefined_.
 * @prop {boolean} closeOnEscape - Sets whether the Snackbar closes when it is focused and the user presses the ESC key. Defaults to _true_.
 * @prop {string} dismissLabel - Optional dismiss button label. If set, an button button will be shown. Defaults to _null_.
 * @prop {string} label - The snackbar text. If `label` and `children` are both set, `label` will take priority. Defaults to _null_.
 * @prop {boolean} leading - Positions the Snackbar on the leading edge of the screen (left in LTR, right in RTL) instead of centered. Defaults to _false_.
 * @prop {boolean} open - Indicates that the Snackbar is open and visible. Defaults to _false_.
 * @prop {boolean} stacked - Positions the action button/icon below the label instead of alongside it. Defaults to _false_.
 * @prop {number} timeout - The time the snackbar will remain visible. The value must be between `4000` and `10000` or set to `-1` to disable the timeout. Defaults to _5000_.
 *  @event onClick - Fired when the Snackbar action button is clicked.
 *  @event onClose - Fired when the Snackbar finishes its closing animation.
 *  @event onClosing - Fired when the Snackbar begins it's closing animation.
 *  @event onOpen - Fired when the Snackbar finishes its opening animation.
 *  @event onOpening - Fired when the Snackbar begins it's opening animation.
*/
export const Snackbar: React.FunctionComponent<SnackbarProps | React.HTMLProps<HTMLElement> | React.DOMAttributes<HTMLElement>>;
