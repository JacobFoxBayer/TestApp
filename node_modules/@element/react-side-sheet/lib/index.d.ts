import React from 'react';


export interface SideSheetProps {
    /**
    * Set to false to stop Side Sheet from closing when scrim is clicked when the variant is modal.
    *
    * Defaults to **true**.
    */
    allowOutsideClick?: boolean;
    /**
    * Add classes to body for when side-sheet-container is not present in DOM.
    *
    * Defaults to **true**.
    */
    attachContainerClassesToBody?: boolean;
    /**
    * Primary content. Accepts any valid markup.
    *
    * Defaults to **null**.
    */
    children?: React.ReactNode;
    /**
    * The css class name to be passed through to the component markup.
    *
    * Defaults to **undefined**.
    */
    className?: string;
    /**
    * The text to be displayed along side the dismiss button in SideSheet.
    *
    * Defaults to **null**.
    */
    headlineText?: string;
    /**
    * Make the SideSheet visible using the experience set in variant prop.
    *
    * Defaults to **false**.
    */
    open?: boolean;
    /**
    * Location of the side-sheet anchor point.
    *
    * Defaults to **'right'**.
    */
    position?: string;
    /**
    * DOM selector to provide a target to return focus. Accepts any valid _query_ (see mdn docs for Element.querySelector). If omitted focus will return to the last focused element upon closing.
    *
    * Defaults to **'.lmnt-side-sheet-trigger'**.
    */
    returnFocusSelector?: string;
    /**
    * The behavior styles available to side sheet: one of modal, floating, elevated, or coplanar.
    *
    * Defaults to **'modal'**.
    */
    variant?: string;
    /**
    * A provided function to fire when Side Sheet becomes hidden.
    */
    onClose?: Function;
    /**
    * A provided function to fire when Side Sheet becomes visible.
    */
    onOpen?: Function;
}

/**
* Side sheets are surfaces containing supplementary content that are anchored to the left or right edge of the screen.
 * @prop {boolean} allowOutsideClick - Set to false to stop Side Sheet from closing when scrim is clicked when the variant is modal. Defaults to _true_.
 * @prop {boolean} attachContainerClassesToBody - Add classes to body for when side-sheet-container is not present in DOM. Defaults to _true_.
 * @prop {React.ReactNode} children - Primary content. Accepts any valid markup. Defaults to _null_.
 * @prop {string} className - The css class name to be passed through to the component markup. Defaults to _undefined_.
 * @prop {string} headlineText - The text to be displayed along side the dismiss button in SideSheet. Defaults to _null_.
 * @prop {boolean} open - Make the SideSheet visible using the experience set in variant prop. Defaults to _false_.
 * @prop {string} position - Location of the side-sheet anchor point. Defaults to _'right'_.
 * @prop {string} returnFocusSelector - DOM selector to provide a target to return focus. Accepts any valid _query_ (see mdn docs for Element.querySelector). If omitted focus will return to the last focused element upon closing. Defaults to _'.lmnt-side-sheet-trigger'_.
 * @prop {string} variant - The behavior styles available to side sheet: one of modal, floating, elevated, or coplanar. Defaults to _'modal'_.
 *  @event onClose - A provided function to fire when Side Sheet becomes hidden.
 *  @event onOpen - A provided function to fire when Side Sheet becomes visible.
*/
export const SideSheet: React.FunctionComponent<SideSheetProps | React.HTMLProps<HTMLElement> | React.DOMAttributes<HTMLElement>>;


export interface SideSheetContainerProps {
    /**
    * Primary content. Accepts any valid markup.
    *
    * Defaults to **null**.
    */
    children?: React.ReactNode;
    /**
    * This prop is tied to the state of `SideSheet` and should be managed accordingly.
    *
    * Defaults to **false**.
    */
    isSideSheetVisible?: boolean;
    /**
    * The behavior styles available to side sheet: one of `modal` (with room to grow in the future).
    *
    * Defaults to **null**.
    */
    variant?: string;
}

/**
* SideSheetContainer is used to control SideSheet scrolling when `attachContainerClassesToBody` is set to false. It is intended to wrap the entire content of an application as the outer-most body tag.
 * @prop {React.ReactNode} children - Primary content. Accepts any valid markup. Defaults to _null_.
 * @prop {boolean} isSideSheetVisible - This prop is tied to the state of `SideSheet` and should be managed accordingly. Defaults to _false_.
 * @prop {string} variant - The behavior styles available to side sheet: one of `modal` (with room to grow in the future). Defaults to _null_.
*/
export const SideSheetContainer: React.FunctionComponent<SideSheetContainerProps | React.HTMLProps<HTMLElement> | React.DOMAttributes<HTMLElement>>;


export interface SideSheetWrapperProps {
    /**
    * Primary content. Accepts any valid markup.
    *
    * Defaults to **null**.
    */
    children?: React.ReactNode;
    /**
    * The behavior styles available to side sheet: one of `elevated`, or `coplanar`.
    *
    * Defaults to **null**.
    */
    variant?: string;
}

/**
* SideSheetWrapper is required SideSheet elevated and coplaner and variants to work correctly. Wrap it around the main application content.
 * @prop {React.ReactNode} children - Primary content. Accepts any valid markup. Defaults to _null_.
 * @prop {string} variant - The behavior styles available to side sheet: one of `elevated`, or `coplanar`. Defaults to _null_.
*/
export const SideSheetWrapper: React.FunctionComponent<SideSheetWrapperProps | React.HTMLProps<HTMLElement> | React.DOMAttributes<HTMLElement>>;
