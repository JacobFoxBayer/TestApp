'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _extends = require('@babel/runtime-corejs3/helpers/extends');
var clsx = require('clsx');
var React = require('react');
var PropTypes = require('prop-types');
var reactCommon = require('@element/react-common');
var shared = require('@element/shared');
var reactTypography = require('@element/react-typography');
var reactIcon = require('@element/react-icon');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _extends__default = /*#__PURE__*/_interopDefault(_extends);
var clsx__default = /*#__PURE__*/_interopDefault(clsx);
var React__default = /*#__PURE__*/_interopDefault(React);
var PropTypes__default = /*#__PURE__*/_interopDefault(PropTypes);

/**
 *
 * This file is automatically generated by the Element
 * documentation system. Any modifications to this file
 * will be overwritten!
 *
 */

const FooterPropTypes = {
  /**
   * The default container for Footer content
   *
   * Defaults to **null**.
   */
  children: PropTypes__default["default"].node,
  /**
   * The css class name to be passed through to the component markup.
   *
   * Defaults to **undefined**.
   */
  className: PropTypes__default["default"].string,
  /**
   * Color of the Footer.
   *
   * Defaults to **'surface'**.
   */
  themeColor: PropTypes__default["default"].oneOf(["transparent", "surface", "surface-variant", "primary", "primary-variant", "primary-50", "primary-100", "primary-200", "primary-300", "primary-400", "primary-500", "primary-600", "primary-700", "primary-800", "primary-900", "secondary", "secondary-variant", "secondary-50", "secondary-100", "secondary-200", "secondary-300", "secondary-400", "secondary-500", "secondary-600", "secondary-700", "secondary-800", "secondary-900", "danger", "danger-variant", "danger-50", "danger-100", "danger-200", "danger-300", "danger-400", "danger-500", "danger-600", "danger-700", "danger-800", "danger-900", "ancillary-100", "ancillary-200", "ancillary-300", "ancillary-400", "ancillary-500", "ancillary-600", "ancillary-700", "ancillary-800", "ancillary-900"]),
  /**
   * If true the footer's content will have a max width according to your theme's breakpoints.
   *
   * Defaults to **false**.
   */
  useContentMaxWidth: PropTypes__default["default"].bool
};
const FooterDefaultProps = {
  children: null,
  className: undefined,
  themeColor: "surface",
  useContentMaxWidth: false
};

/**
 *
 * This file is automatically generated by the Element
 * documentation system. Any modifications to this file
 * will be overwritten!
 *
 */

const FooterBottomPropTypes = {
  /**
   * The default container for Footer content
   *
   * Defaults to **null**.
   */
  children: PropTypes__default["default"].node,
  /**
   * The css class name to be passed through to the component markup.
   *
   * Defaults to **undefined**.
   */
  className: PropTypes__default["default"].string,
  /**
   * The center content of the FooterBottom component.
   *
   * Defaults to **null**.
   */
  copyrightContent: PropTypes__default["default"].node,
  /**
   * Expects one or more FooterIcons, will accept any valid components or markup.
   *
   * Defaults to **null**.
   */
  footerIcons: PropTypes__default["default"].node,
  /**
   * How many columns to create for the large breakpoint.
   *
   * Defaults to **'3'**.
   */
  lgCols: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].number]),
  /**
   * A container for common links.
   *
   * Defaults to **null**.
   */
  links: PropTypes__default["default"].node,
  /**
   * How many columns to create for the medium breakpoint.
   *
   * Defaults to **'1'**.
   */
  mdCols: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].number]),
  /**
   * How many columns to create for the small breakpoint.
   *
   * Defaults to **'1'**.
   */
  smCols: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].number]),
  /**
   * Color of the Footer Bottom.
   *
   * Defaults to **'surface'**.
   */
  themeColor: PropTypes__default["default"].oneOf(["transparent", "surface", "surface-variant", "primary", "primary-variant", "primary-50", "primary-100", "primary-200", "primary-300", "primary-400", "primary-500", "primary-600", "primary-700", "primary-800", "primary-900", "secondary", "secondary-variant", "secondary-50", "secondary-100", "secondary-200", "secondary-300", "secondary-400", "secondary-500", "secondary-600", "secondary-700", "secondary-800", "secondary-900", "danger", "danger-variant", "danger-50", "danger-100", "danger-200", "danger-300", "danger-400", "danger-500", "danger-600", "danger-700", "danger-800", "danger-900", "ancillary-100", "ancillary-200", "ancillary-300", "ancillary-400", "ancillary-500", "ancillary-600", "ancillary-700", "ancillary-800", "ancillary-900"])
};
const FooterBottomDefaultProps = {
  children: null,
  className: undefined,
  copyrightContent: null,
  footerIcons: null,
  lgCols: "3",
  links: null,
  mdCols: "1",
  smCols: "1",
  themeColor: "surface"
};

/**
 *
 * This file is automatically generated by the Element
 * documentation system. Any modifications to this file
 * will be overwritten!
 *
 */

const FooterBottomContentPropTypes = {
  /**
   * The default container for FooterBottom content.
   *
   * Defaults to **null**.
   */
  children: PropTypes__default["default"].node,
  /**
   * The css class name to be passed through to the component markup.
   *
   * Defaults to **undefined**.
   */
  className: PropTypes__default["default"].string
};
const FooterBottomContentDefaultProps = {
  children: null,
  className: undefined
};

/**
 *
 * This file is automatically generated by the Element
 * documentation system. Any modifications to this file
 * will be overwritten!
 *
 */

const FooterBottomGroupPropTypes = {
  /**
   * Content alignment.
   *
   * Defaults to **undefined**.
   */
  alignment: PropTypes__default["default"].oneOf(["start", "center", "end"]),
  /**
   * The default container for FooterBottom content.
   *
   * Defaults to **null**.
   */
  children: PropTypes__default["default"].node,
  /**
   * The css class name to be passed through to the component markup.
   *
   * Defaults to **undefined**.
   */
  className: PropTypes__default["default"].string,
  /**
   * The spacing between items.
   *
   * Defaults to **'standard'**.
   */
  gap: PropTypes__default["default"].oneOf(["none", "dense", "standard", "airy"]),
  /**
   * How many columns to span the large breakpoint when customizing Footer Bottom columns.
   *
   * Defaults to **'1'**.
   */
  lgColSpan: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].number]),
  /**
   * The top and bottom spacing around the group component.
   *
   * Defaults to **'standard'**.
   */
  margin: PropTypes__default["default"].oneOf(["none", "dense", "standard", "airy"]),
  /**
   * How many columns to span the medium breakpoint when customizing Footer Bottom columns.
   *
   * Defaults to **'1'**.
   */
  mdColSpan: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].number]),
  /**
   * How many columns to span the small breakpoint when customizing Footer Bottom columns.
   *
   * Defaults to **'1'**.
   */
  smColSpan: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].number]),
  /**
   * Passthrough style object.
   *
   * Defaults to **null**.
   */
  style: PropTypes__default["default"].object
};
const FooterBottomGroupDefaultProps = {
  alignment: undefined,
  children: null,
  className: undefined,
  gap: "standard",
  lgColSpan: "1",
  margin: "standard",
  mdColSpan: "1",
  smColSpan: "1",
  style: null
};

/**
 *
 * This file is automatically generated by the Element
 * documentation system. Any modifications to this file
 * will be overwritten!
 *
 */

const FooterBottomWrapperPropTypes = {
  /**
   * Content to be rendered inside the Footer Bottom. Accepts any valid markup.
   *
   * Defaults to **null**.
   */
  children: PropTypes__default["default"].node,
  /**
   * The css class name to be passed through to the component markup.
   *
   * Defaults to **undefined**.
   */
  className: PropTypes__default["default"].string,
  /**
   * Color of the Footer Bottom.
   *
   * Defaults to **'surface'**.
   */
  themeColor: PropTypes__default["default"].oneOf(["transparent", "surface", "surface-variant", "primary", "primary-variant", "primary-50", "primary-100", "primary-200", "primary-300", "primary-400", "primary-500", "primary-600", "primary-700", "primary-800", "primary-900", "secondary", "secondary-variant", "secondary-50", "secondary-100", "secondary-200", "secondary-300", "secondary-400", "secondary-500", "secondary-600", "secondary-700", "secondary-800", "secondary-900", "danger", "danger-variant", "danger-50", "danger-100", "danger-200", "danger-300", "danger-400", "danger-500", "danger-600", "danger-700", "danger-800", "danger-900", "ancillary-100", "ancillary-200", "ancillary-300", "ancillary-400", "ancillary-500", "ancillary-600", "ancillary-700", "ancillary-800", "ancillary-900"])
};
const FooterBottomWrapperDefaultProps = {
  children: null,
  className: undefined,
  themeColor: "surface"
};

/**
 *
 * This file is automatically generated by the Element
 * documentation system. Any modifications to this file
 * will be overwritten!
 *
 */

const FooterColPropTypes = {
  /**
   * The default container for FooterCol content
   *
   * Defaults to **null**.
   */
  children: PropTypes__default["default"].node,
  /**
   * The css class name to be passed through to the component markup.
   *
   * Defaults to **undefined**.
   */
  className: PropTypes__default["default"].string,
  /**
   * How many columns to span the large breakpoint when customizing Footer Bottom columns.
   *
   * Defaults to **'1'**.
   */
  lgColSpan: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].number]),
  /**
   * How many columns to span the medium breakpoint when customizing Footer Bottom columns.
   *
   * Defaults to **'1'**.
   */
  mdColSpan: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].number]),
  /**
   * How many columns to span the small breakpoint when customizing Footer Bottom columns.
   *
   * Defaults to **'1'**.
   */
  smColSpan: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].number]),
  /**
   * By default a div will be rendered, this allow another tag to be used instead. A block type component is suggested.
   *
   * Defaults to **'div'**.
   */
  tag: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].elementType]),
  /**
   * The header title of the content in footer.
   *
   * Defaults to **undefined**.
   */
  title: PropTypes__default["default"].string
};
const FooterColDefaultProps = {
  children: null,
  className: undefined,
  lgColSpan: "1",
  mdColSpan: "1",
  smColSpan: "1",
  tag: "div",
  title: undefined
};

/**
 *
 * This file is automatically generated by the Element
 * documentation system. Any modifications to this file
 * will be overwritten!
 *
 */

const FooterContentPropTypes = {
  /**
   * The default container for Footer content
   *
   * Defaults to **null**.
   */
  children: PropTypes__default["default"].node,
  /**
   * Gap between the columns and the pixels.  Must be a valid css gap declaration for css display grid
   *
   * Defaults to **'64px'**.
   */
  gap: PropTypes__default["default"].string,
  /**
   * How many columns to create for the large breakpoint.
   *
   * Defaults to **undefined**.
   */
  lgCols: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].number]),
  /**
   * How many columns to create for the medium breakpoint.
   *
   * Defaults to **undefined**.
   */
  mdCols: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].number]),
  /**
   * How many columns to create for the small breakpoint.
   *
   * Defaults to **'1'**.
   */
  smCols: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].number]),
  /**
   * Color of the Footer.
   *
   * Defaults to **null**.
   */
  themeColor: PropTypes__default["default"].oneOf(["transparent", "surface", "surface-variant", "primary", "primary-variant", "primary-50", "primary-100", "primary-200", "primary-300", "primary-400", "primary-500", "primary-600", "primary-700", "primary-800", "primary-900", "secondary", "secondary-variant", "secondary-50", "secondary-100", "secondary-200", "secondary-300", "secondary-400", "secondary-500", "secondary-600", "secondary-700", "secondary-800", "secondary-900", "danger", "danger-variant", "danger-50", "danger-100", "danger-200", "danger-300", "danger-400", "danger-500", "danger-600", "danger-700", "danger-800", "danger-900", "ancillary-100", "ancillary-200", "ancillary-300", "ancillary-400", "ancillary-500", "ancillary-600", "ancillary-700", "ancillary-800", "ancillary-900"])
};
const FooterContentDefaultProps = {
  children: null,
  gap: "64px",
  lgCols: undefined,
  mdCols: undefined,
  smCols: "1",
  themeColor: null
};

/**
 *
 * This file is automatically generated by the Element
 * documentation system. Any modifications to this file
 * will be overwritten!
 *
 */

({
  /**
   * The css class name to be passed through to the component markup.
   *
   * Defaults to **undefined**.
   */
  className: PropTypes__default["default"].string
});

/**
 *
 * This file is automatically generated by the Element
 * documentation system. Any modifications to this file
 * will be overwritten!
 *
 */

const FooterIconPropTypes = {
  /**
   * The css class name to be passed through to the component markup.
   *
   * Defaults to **undefined**.
   */
  className: PropTypes__default["default"].string,
  /**
   * For simple use-cases, this will automatically create the icon object.
   *
   * Defaults to **null**.
   */
  icon: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].node]),
  /**
   * Color variations. Variants prefixed with `filled-` will add a background color to the icon according to the theme. Variants prefixed with ` color-` will change the color of the icon according to the theme.
   *
   * Defaults to **'gray'**.
   */
  themeColor: PropTypes__default["default"].oneOf(["", "filled-danger-alt", "filled-danger", "filled-muted", "filled-primary", "filled-secondary", "color-primary", "color-secondary", "color-on-dark", "blue", "gray", "green", "orange", "purple", "red", "teal", "yellow"])
};
const FooterIconDefaultProps = {
  className: undefined,
  icon: null,
  themeColor: "gray"
};

/**
 *
 * This file is automatically generated by the Element
 * documentation system. Any modifications to this file
 * will be overwritten!
 *
 */

const FooterListPropTypes = {
  /**
   * The default container for FooterList content
   *
   * Defaults to **null**.
   */
  children: PropTypes__default["default"].node,
  /**
   * The css class name to be passed through to the component markup.
   *
   * Defaults to **undefined**.
   */
  className: PropTypes__default["default"].string,
  /**
   * How many columns to span the large breakpoint when customizing Footer Bottom columns.
   *
   * Defaults to **'1'**.
   */
  lgColSpan: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].number]),
  /**
   * How many columns to span the medium breakpoint when customizing Footer Bottom columns.
   *
   * Defaults to **'1'**.
   */
  mdColSpan: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].number]),
  /**
   * How many columns to span the small breakpoint when customizing Footer Bottom columns.
   *
   * Defaults to **'1'**.
   */
  smColSpan: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].number]),
  /**
   * The header title of the content in footer.
   *
   * Defaults to **undefined**.
   */
  title: PropTypes__default["default"].string
};
const FooterListDefaultProps = {
  children: null,
  className: undefined,
  lgColSpan: "1",
  mdColSpan: "1",
  smColSpan: "1",
  title: undefined
};

/**
 *
 * This file is automatically generated by the Element
 * documentation system. Any modifications to this file
 * will be overwritten!
 *
 */

const FooterListItemPropTypes = {
  /**
   * The default container for FooterBottom content.
   *
   * Defaults to **null**.
   */
  children: PropTypes__default["default"].node,
  /**
   * The css class name to be passed through to the component markup.
   *
   * Defaults to **undefined**.
   */
  className: PropTypes__default["default"].string
};
const FooterListItemDefaultProps = {
  children: null,
  className: undefined
};

/**
 *
 * This file is automatically generated by the Element
 * documentation system. Any modifications to this file
 * will be overwritten!
 *
 */

const FooterLogoPropTypes = {
  /**
   * The css class name to be passed through to the component markup.
   *
   * Defaults to **undefined**.
   */
  className: PropTypes__default["default"].string,
  /**
   * Optional logo. Expects an image but accepts any valid markup.
   *
   * Defaults to **null**.
   */
  logo: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].node])
};
const FooterLogoDefaultProps = {
  className: undefined,
  logo: null
};

/* eslint-disable react/jsx-no-constructed-context-values */
const RegisteredItemsContext = /*#__PURE__*/React.createContext();
function registeredItemsReducer(state, action) {
  switch (action.type) {
    case 'register':
      {
        const {
          items
        } = state;
        const {
          id,
          value,
          groupId
        } = action.payload;
        // don't re-add duplicates
        if (items.some(i => i.id === id)) return {
          items
        };
        items.push({
          id,
          value,
          groupId
        });
        return {
          items
        };
      }
    case 'unregister':
      {
        const {
          items
        } = state;
        return {
          items: items.filter(i => i.id !== action.payload)
        };
      }
    default:
      {
        throw new Error(`Unhandled action type: ${action.type}`);
      }
  }
}
const getItemsByGroup = (items, groupId) => items.filter(i => i.groupId === groupId);
const RegisteredItemsProvider = /*#__PURE__*/React.forwardRef((props, externalRef) => {
  const {
    children,
    useContentMaxWidth
  } = props;
  const [state, dispatch] = React.useReducer(registeredItemsReducer, {
    items: []
  });
  React.useImperativeHandle(externalRef, () => state, [state]);
  const contextValue = React.useMemo(() => ({
    items: state.items,
    getItemsByGroup,
    register: (id, value, groupId) => dispatch({
      type: 'register',
      payload: {
        id,
        value,
        groupId
      }
    }),
    unregister: id => dispatch({
      type: 'unregister',
      payload: {
        id
      }
    }),
    useContentMaxWidth
  }), [state.items, useContentMaxWidth]);
  return /*#__PURE__*/React__default["default"].createElement(RegisteredItemsContext.Provider, {
    value: contextValue
  }, children);
});
function useRegisteredItems() {
  // return an empty context if no context is found (ie
  // component is used outside of Footer)
  return React.useContext(RegisteredItemsContext) || {
    items: [],
    getItemsByGroup: () => [],
    register: () => {},
    unregister: () => {}
  };
}

const Footer = props => {
  const {
    children,
    className,
    useContentMaxWidth,
    themeColor,
    ...customProps
  } = props;
  const classes = clsx__default["default"]('lmnt lmnt-footer', themeColor && `lmnt-theme-${themeColor}-bg`, useContentMaxWidth && 'lmnt-footer-with-max-content-width', className);
  return /*#__PURE__*/React__default["default"].createElement(RegisteredItemsProvider, {
    useContentMaxWidth: useContentMaxWidth
  }, /*#__PURE__*/React__default["default"].createElement("div", _extends__default["default"]({
    className: classes
  }, customProps), children));
};
Footer.propTypes = FooterPropTypes;
Footer.defaultProps = FooterDefaultProps;
Footer.displayName = 'Footer';

const FooterBottomGroup = props => {
  // eslint-disable-next-line react/prop-types
  const {
    alignment,
    children,
    className,
    gap,
    id,
    lgColSpan,
    mdColSpan,
    smColSpan,
    margin,
    ...customProps
  } = props;
  const [idActual] = React.useState(id || shared.edsRandomId());
  const {
    register
  } = useRegisteredItems();
  React.useEffect(() => {
    // run this only once
    register(idActual, null, 'footer-bottom');
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  const classes = clsx__default["default"]('lmnt-footer__bottom-group', alignment === 'start' && 'lmnt-footer__bottom-group--start', alignment === 'end' && 'lmnt-footer__bottom-group--end', gap && `lmnt-footer__bottom-group--gap-${gap}`, smColSpan && `lmnt-footer__column--sm-span-${smColSpan}`, mdColSpan && `lmnt-footer__column--md-span-${mdColSpan}`, lgColSpan && `lmnt-footer__column--lg-span-${lgColSpan}`, margin && `lmnt-footer__bottom-group--margin-${margin}`, className);
  return /*#__PURE__*/React__default["default"].createElement("div", _extends__default["default"]({
    id: idActual,
    className: classes
  }, customProps), children);
};
FooterBottomGroup.displayName = 'FooterBottomGroup';
FooterBottomGroup.propTypes = FooterBottomGroupPropTypes;
FooterBottomGroup.defaultProps = FooterBottomGroupDefaultProps;

const FooterBottomWrapper = /*#__PURE__*/React.forwardRef((props, externalRef) => {
  const {
    children,
    themeColor,
    className,
    ...customProps
  } = props;
  const ref = React.useRef();
  React.useImperativeHandle(externalRef, () => ({
    current: ref.current
  }), []);
  return /*#__PURE__*/React__default["default"].createElement("div", _extends__default["default"]({
    ref: ref,
    className: clsx__default["default"](
    // TODO: remove typo `lmnt-footer_bottom-wrapper` in future version
    'lmnt-footer_bottom-wrapper', 'lmnt-footer__bottom-wrapper', themeColor && `lmnt-theme-${themeColor}-bg`, className)
  }, customProps), children);
});
FooterBottomWrapper.displayName = 'FooterBottomWrapper';
FooterBottomWrapper.propTypes = FooterBottomWrapperPropTypes;
FooterBottomWrapper.defaultProps = FooterBottomWrapperDefaultProps;

const createWrappedContent = (Wrapper, themeColor) => children => /*#__PURE__*/React__default["default"].createElement(Wrapper, {
  themeColor: themeColor
}, children);
const FooterBottom = props => {
  const {
    children,
    className,
    copyrightContent,
    footerIcons,
    lgCols,
    mdCols,
    smCols,
    links,
    style,
    themeColor,
    ...customProps
  } = props;
  const classes = clsx__default["default"]('lmnt-footer__bottom', themeColor && `lmnt-theme-${themeColor}-bg`, className);
  const {
    items,
    getItemsByGroup,
    useContentMaxWidth
  } = useRegisteredItems();
  const [customStyle, setCustomStyle] = React.useState({
    ...style
  });
  React.useEffect(() => {
    const count = getItemsByGroup(items, 'footer-bottom');
    setCustomStyle({
      ...style,
      '--lmnt-footer__bottom-cols-lg': lgCols || count,
      '--lmnt-footer__bottom-cols-md': mdCols || count,
      '--lmnt-footer__bottom-cols-sm': smCols || 1
    });
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [items.length, lgCols, mdCols, smCols, style]);
  return /*#__PURE__*/React__default["default"].createElement(reactCommon.ConditionalWrapper, {
    condition: useContentMaxWidth,
    wrapper: createWrappedContent(FooterBottomWrapper, themeColor)
  }, /*#__PURE__*/React__default["default"].createElement("footer", _extends__default["default"]({
    className: classes
  }, customProps, {
    style: customStyle
  }), links && /*#__PURE__*/React__default["default"].createElement(FooterBottomGroup, {
    alignment: "start"
  }, links), copyrightContent && /*#__PURE__*/React__default["default"].createElement(FooterBottomGroup, null, copyrightContent), footerIcons && /*#__PURE__*/React__default["default"].createElement(FooterBottomGroup, {
    alignment: "end",
    gap: "dense"
  }, footerIcons), children));
};
FooterBottom.propTypes = FooterBottomPropTypes;
FooterBottom.defaultProps = FooterBottomDefaultProps;
FooterBottom.displayName = 'FooterBottom';

const FooterBottomContent = props => {
  const {
    children,
    className,
    ...customProps
  } = props;
  const classes = clsx__default["default"]('lmnt', 'lmnt-footer__bottom-content', className);
  return /*#__PURE__*/React__default["default"].createElement(reactTypography.TypoSubtitle, _extends__default["default"]({
    className: classes,
    level: 1,
    tag: "p"
  }, customProps), children);
};
FooterBottomContent.propTypes = FooterBottomContentPropTypes;
FooterBottomContent.defaultProps = FooterBottomContentDefaultProps;
FooterBottomContent.displayName = 'FooterBottomContent';

const FooterCol = props => {
  const {
    children,
    className,
    id,
    lgColSpan,
    mdColSpan,
    smColSpan,
    title,
    groupId,
    titleSize,
    tag: Tag = 'div',
    ...customProps
  } = props;
  const [idActual] = React.useState(id || shared.edsRandomId());
  const {
    register
  } = useRegisteredItems();
  React.useEffect(() => {
    // run this only once
    register(idActual, null, 'footer-content');
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  return /*#__PURE__*/React__default["default"].createElement(Tag, _extends__default["default"]({}, customProps, {
    id: id,
    className: clsx__default["default"]('lmnt-footer__column', smColSpan && `lmnt-footer__column--sm-span-${smColSpan}`, mdColSpan && `lmnt-footer__column--md-span-${mdColSpan}`, lgColSpan && `lmnt-footer__column--lg-span-${lgColSpan}`, className)
  }), title && /*#__PURE__*/React__default["default"].createElement(reactTypography.TypoSubtitle, {
    tag: "dt",
    className: clsx__default["default"]('lmnt-footer__list-title', className),
    bold: true
  }, title), children);
};
FooterCol.displayName = 'FooterCol';
FooterCol.propTypes = FooterColPropTypes;
FooterCol.defaultProps = FooterColDefaultProps;

const FooterContent = props => {
  const {
    children,
    className,
    gap,
    themeColor,
    smCols,
    mdCols,
    lgCols,
    style,
    ...customProps
  } = props;
  const {
    items,
    getItemsByGroup
  } = useRegisteredItems();
  const [customStyle, setCustomStyle] = React.useState({
    ...style
  });
  React.useEffect(() => {
    const count = getItemsByGroup(items, 'footer-content').length;
    setCustomStyle({
      ...style,
      gap,
      '--lmnt-footer__cols-lg': lgCols || count,
      '--lmnt-footer__cols-md': mdCols || count,
      '--lmnt-footer__cols-sm': smCols || 1
    });
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [items.length, lgCols, mdCols, smCols, style]);
  return /*#__PURE__*/React__default["default"].createElement("div", {
    className: "lmnt-footer__content-wrapper"
  }, /*#__PURE__*/React__default["default"].createElement("div", _extends__default["default"]({
    className: clsx__default["default"]('lmnt-footer__content', themeColor && `lmnt-theme-${themeColor}-bg`, className)
  }, customProps, {
    style: customStyle
  }), children));
};
FooterContent.propTypes = FooterContentPropTypes;
FooterContent.defaultProps = FooterContentDefaultProps;
FooterContent.displayName = 'FooterContent';

const FooterIcon = props => {
  const {
    icon,
    className,
    themeColor,
    ...customProps
  } = props;
  const iconClasses = clsx__default["default"]('material-icons lmnt lmnt-icon--fill', className);
  return /*#__PURE__*/React__default["default"].createElement(reactIcon.Icon, _extends__default["default"]({}, customProps, {
    className: iconClasses,
    icon: icon,
    variant: themeColor || 'gray',
    iconType: "filled"
  }));
};
FooterIcon.propTypes = FooterIconPropTypes;
FooterIcon.defaultProps = FooterIconDefaultProps;
FooterIcon.displayName = 'FooterIcon';

const FooterList = props => {
  const {
    children,
    className,
    title,
    lgColSpan,
    mdColSpan,
    smColSpan,
    ...customProps
  } = props;
  return /*#__PURE__*/React__default["default"].createElement(FooterCol, _extends__default["default"]({
    tag: "dl",
    title: title,
    className: clsx__default["default"]('lmnt-footer__list', className)
  }, customProps), title && /*#__PURE__*/React__default["default"].createElement(reactTypography.TypoSubtitle, {
    tag: "dt",
    className: "lmnt-footer__list-title",
    smColSpan: smColSpan,
    mdColSpan: mdColSpan,
    lgColSpan: lgColSpan,
    bold: true
  }, title), children);
};
FooterList.propTypes = FooterListPropTypes;
FooterList.defaultProps = FooterListDefaultProps;
FooterList.displayName = 'FooterList';

const FooterListItem = props => {
  const {
    children,
    className,
    ...customProps
  } = props;
  return /*#__PURE__*/React__default["default"].createElement(reactTypography.TypoSubtitle, _extends__default["default"]({
    tag: "dd",
    level: 2
  }, customProps, {
    className: clsx__default["default"]('lmnt-footer__list-item', className)
  }), children);
};
FooterListItem.displayName = 'FooterListItem';
FooterListItem.propTypes = FooterListItemPropTypes;
FooterListItem.defaultProps = FooterListItemDefaultProps;

const FooterLogo = props => {
  const {
    logo,
    className,
    ...customProps
  } = props;
  const classes = clsx__default["default"]('lmnt', 'lmnt-footer__logo', className);
  return /*#__PURE__*/React__default["default"].createElement("div", _extends__default["default"]({
    className: classes
  }, customProps), /*#__PURE__*/React__default["default"].createElement(reactIcon.Icon, {
    icon: logo
  }));
};
FooterLogo.propTypes = FooterLogoPropTypes;
FooterLogo.defaultProps = FooterLogoDefaultProps;
FooterLogo.displayName = 'FooterLogo';

exports.Footer = Footer;
exports.FooterBottom = FooterBottom;
exports.FooterBottomContent = FooterBottomContent;
exports.FooterBottomGroup = FooterBottomGroup;
exports.FooterBottomWrapper = FooterBottomWrapper;
exports.FooterCol = FooterCol;
exports.FooterContent = FooterContent;
exports.FooterIcon = FooterIcon;
exports.FooterList = FooterList;
exports.FooterListItem = FooterListItem;
exports.FooterLogo = FooterLogo;
//# sourceMappingURL=index.js.map
