import _extends from '@babel/runtime-corejs3/helpers/extends';
import { MDCFloatingLabel } from '@material/floating-label';
import clsx from 'clsx';
import React, { forwardRef, useRef, useImperativeHandle, useEffect } from 'react';
import PropTypes from 'prop-types';

/**
 *
 * This file is automatically generated by the Element
 * documentation system. Any modifications to this file
 * will be overwritten!
 *
 */

const FloatingLabelPropTypes = {
  /**
   * Content to be rendered inside the label. Expects a string, though accepts any valid markup.
   *
   * Defaults to **null**.
   */
  children: PropTypes.node.isRequired,
  /**
   * The css class name to be passed through to the component markup.
   *
   * Defaults to **undefined**.
   */
  className: PropTypes.string,
  /**
   * The label will appear in the floating state.
   *
   * Defaults to **false**.
   */
  float: PropTypes.bool,
  /**
   * The id of the component to trigger on active
   *
   * Defaults to **empty string**.
   */
  htmlFor: PropTypes.string,
  /**
   * The label will shake briefly when set.
   *
   * Defaults to **false**.
   */
  shake: PropTypes.bool
};
const FloatingLabelDefaultProps = {
  children: null,
  className: undefined,
  float: false,
  htmlFor: "",
  shake: false
};

const FloatingLabel = /*#__PURE__*/forwardRef((props, externalRef) => {
  const {
    children,
    htmlFor = '',
    shake = false,
    float = false,
    className,
    style,
    ...customProps
  } = props;
  const mdcFloatingLabelRef = useRef();
  const content = children;
  const ref = useRef();
  useImperativeHandle(externalRef, () => ref.current, []);
  useEffect(() => {
    mdcFloatingLabelRef.current = MDCFloatingLabel.attachTo(ref.current);
    return () => {
      mdcFloatingLabelRef.current.destroy();
    };
  });
  useEffect(() => {
    mdcFloatingLabelRef.current.float(float);
  }, [float]);
  return /*#__PURE__*/React.createElement("label", _extends({
    ref: ref,
    htmlFor: htmlFor,
    className: clsx('lmnt', 'mdc-floating-label', float && 'mdc-floating-label--float-above', shake && 'mdc-floating-label--shake', className)
  }, customProps, {
    style: style
  }), content);
});
FloatingLabel.displayName = 'FloatingLabel';
FloatingLabel.propTypes = FloatingLabelPropTypes;
FloatingLabel.defaultProps = FloatingLabelDefaultProps;

export { FloatingLabel };
//# sourceMappingURL=index.es.js.map
