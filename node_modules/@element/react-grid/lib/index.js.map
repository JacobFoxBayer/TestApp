{"version":3,"file":"index.js","sources":["../GridContext.js","../generated/propTypes.js","../Grid.js","../GridCol.js","../GridRow.js"],"sourcesContent":["import { createContext } from 'react';\n\nconst GridContext = createContext({});\n\nexport default GridContext;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { deprecatedProp } from \"@element/react-common\";\n\n/**\n *\n * This file is automatically generated by the Element\n * documentation system. Any modifications to this file\n * will be overwritten!\n *\n */\n\nexport const GridPropTypes = {\n  /**\n   * @deprecated _Use `variant`='airy' instead._\n   *\n   * Applies extra padding to each column.\n   *\n   * Defaults to **undefined**.\n   */\n  airy: deprecatedProp(PropTypes.bool, \"Grid\", 'Use `variant`=\"airy\" instead.'),\n  /**\n   * Accepts GridCol or GridRow.\n   *\n   * Defaults to **null**.\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * The css class name to be passed through to the component markup.\n   *\n   * Defaults to **undefined**.\n   */\n  className: PropTypes.string,\n  /**\n   * Sets the column gap for the grid.\n   *\n   * Defaults to **'16px'**.\n   */\n  columnGap: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Applies 100% height to the grid and direct children rows. Useful when creating a page layout. Be aware all direct children rows will have a 100% height.\n   *\n   * Defaults to **null**.\n   */\n  fullHeight: PropTypes.bool,\n  /**\n   * Applies 100% width to the grid and direct children rows. Useful to maintain full width in a flex container.\n   *\n   * Defaults to **null**.\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Alignment of entire grid: left and right.\n   *\n   * Defaults to **'center'**.\n   */\n  gridAlign: PropTypes.oneOf([\"center\", \"left\", \"right\"]),\n  /**\n   * Sets the row gap for the grid.\n   *\n   * Defaults to **'16px'**.\n   */\n  rowGap: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Styles for the grid.\n   *\n   * Defaults to **undefined**.\n   */\n  style: PropTypes.object,\n  /**\n   * If true the grid will have a max width according to your theme's breakpoints.\n   *\n   * Defaults to **false**.\n   */\n  useMaxWidth: PropTypes.bool,\n  /**\n   * Select `airy` or `standard` padding.\n   *\n   * Defaults to **'standard'**.\n   */\n  variant: PropTypes.oneOf([\"standard\", \"airy\", \"none\"]),\n};\n\nexport const GridDefaultProps = {\n  airy: undefined,\n  children: null,\n  className: undefined,\n  columnGap: \"16px\",\n  fullHeight: null,\n  fullWidth: null,\n  gridAlign: \"center\",\n  rowGap: \"16px\",\n  style: undefined,\n  useMaxWidth: false,\n  variant: \"standard\",\n};\n\n/**\n *\n * This file is automatically generated by the Element\n * documentation system. Any modifications to this file\n * will be overwritten!\n *\n */\n\nexport const GridColPropTypes = {\n  /**\n   * Alignment of cell within the row: top, middle, bottom. If omitted the col will stretch to the height of the row.\n   *\n   * Defaults to **undefined**.\n   */\n  align: PropTypes.oneOf([\"\", \"top\", \"middle\", \"bottom\"]),\n  /**\n   * Content to be rendered inside the GridCol. Accepts any valid markup.\n   *\n   * Defaults to **null**.\n   */\n  children: PropTypes.node,\n  /**\n   * The css class name to be passed through to the component markup.\n   *\n   * Defaults to **undefined**.\n   */\n  className: PropTypes.string,\n  /**\n   * Specifies the number of columns the cell spans.\n   *\n   * Defaults to **null**.\n   */\n  desktopCol: PropTypes.number,\n  /**\n   * Specifies a grid item's start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. Set to any valid `grid-column-start`.\n   *\n   * Defaults to **null**.\n   */\n  gridColStart: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Horizontal alignment of the cell contents of cell content: top, middle, bottom.\n   *\n   * Defaults to **'left'**.\n   */\n  horizontalAlign: PropTypes.oneOf([\"left\", \"center\", \"right\"]),\n  /**\n   * Specifies the order of the cell.\n   *\n   * Defaults to **null**.\n   */\n  order: PropTypes.number,\n  /**\n   * Specifies the number of columns the cell spans on a phone.\n   *\n   * Defaults to **null**.\n   */\n  phoneCol: PropTypes.number,\n  /**\n   * Specifies the number of columns the cell spans on a tablet.\n   *\n   * Defaults to **null**.\n   */\n  tabletCol: PropTypes.number,\n  /**\n   * Vertical alignment of cell content: top, middle, bottom.\n   *\n   * Defaults to **'top'**.\n   */\n  verticalAlign: PropTypes.oneOf([\"top\", \"middle\", \"bottom\"]),\n};\n\nexport const GridColDefaultProps = {\n  align: undefined,\n  children: null,\n  className: undefined,\n  desktopCol: null,\n  gridColStart: null,\n  horizontalAlign: \"left\",\n  order: null,\n  phoneCol: null,\n  tabletCol: null,\n  verticalAlign: \"top\",\n};\n\n/**\n *\n * This file is automatically generated by the Element\n * documentation system. Any modifications to this file\n * will be overwritten!\n *\n */\n\nexport const GridRowPropTypes = {\n  /**\n   * Content to be rendered inside the GridRow. Accepts any valid markup.\n   *\n   * Defaults to **null**.\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * The css class name to be passed through to the component markup.\n   *\n   * Defaults to **undefined**.\n   */\n  className: PropTypes.string,\n};\n\nexport const GridRowDefaultProps = {\n  children: null,\n  className: undefined,\n};\n","import React, { useMemo, useRef, forwardRef, useImperativeHandle } from 'react';\nimport clsx from 'clsx';\nimport GridContext from './GridContext';\nimport { GridDefaultProps, GridPropTypes } from './generated/propTypes';\n\nconst Grid = forwardRef((props, externalRef) => {\n    const {\n        airy,\n        children,\n        className,\n        columnGap,\n        fullHeight,\n        fullWidth,\n        gridAlign,\n        rowGap,\n        style,\n        useMaxWidth,\n        variant,\n        ...customProps\n    } = props;\n\n    const currentVariant = airy ? 'airy' : variant;\n\n    const value = useMemo(\n        () => ({ fullHeight, rowGap, columnGap }),\n        [columnGap, fullHeight, rowGap]\n    );\n\n    const ref = useRef();\n    useImperativeHandle(externalRef, () => ref.current, []);\n\n    const classes = useMemo(\n        () =>\n            clsx(\n                'lmnt',\n                'mdc-layout-grid',\n                'lmnt-layout-grid',\n                `mdc-layout-grid mdc-layout-grid--align-${gridAlign}`,\n                (currentVariant === 'airy' || airy) &&\n                    'mdc-grid-cell-wrapper-airy-tablet mdc-grid-cell-wrapper-airy-desktop',\n                variant === 'none' &&\n                    'mdc-grid-cell-wrapper-none-tablet mdc-grid-cell-wrapper-none-desktop mdc-grid-cell-wrapper-none-phone ',\n                fullWidth && 'lmnt-layout-grid--full-width',\n                fullHeight && 'lmnt-layout-grid--full-height',\n                useMaxWidth && 'lmnt-layout-grid--with-max-width',\n                className\n            ),\n        [\n            airy,\n            className,\n            currentVariant,\n            fullHeight,\n            fullWidth,\n            gridAlign,\n            useMaxWidth,\n            variant\n        ]\n    );\n\n    return (\n        <GridContext.Provider value={value}>\n            <div ref={ref} className={classes} {...customProps}>\n                {children}\n            </div>\n        </GridContext.Provider>\n    );\n});\n\nGrid.displayName = 'Grid';\nGrid.propTypes = GridPropTypes;\nGrid.defaultProps = GridDefaultProps;\n\nexport default Grid;\n","import React, { forwardRef, useMemo } from 'react';\nimport clsx from 'clsx';\nimport { GridColDefaultProps, GridColPropTypes } from './generated/propTypes';\n\nconst GridCol = forwardRef((props, externalRef) => {\n    const {\n        align,\n        children,\n        className,\n        columns,\n        desktopCol,\n        gridColStart,\n        horizontalAlign,\n        order,\n        phoneCol,\n        style,\n        tabletCol,\n        verticalAlign,\n        ...customProps\n    } = props;\n\n    const styles = useMemo(\n        () => ({\n            ...style,\n            gridColumnStart: gridColStart\n        }),\n        [gridColStart, style]\n    );\n\n    return (\n        <div\n            ref={externalRef}\n            style={styles}\n            className={clsx(\n                'lmnt',\n                `lmnt-layout-grid__cell--vertical-align-${verticalAlign}`,\n                `lmnt-layout-grid__cell--horizontal-align-${horizontalAlign}`,\n                'mdc-layout-grid__cell',\n                !columns &&\n                    !phoneCol &&\n                    !tabletCol &&\n                    !desktopCol && [`mdc-layout-grid__cell`],\n                order && `mdc-layout-grid__cell--order-${order}`,\n                align && `mdc-layout-grid__cell--align-${align}`,\n                columns && [`mdc-layout-grid__cell--span-${columns}`],\n                phoneCol && [`mdc-layout-grid__cell--span-${phoneCol}-phone`],\n                tabletCol && [\n                    `mdc-layout-grid__cell--span-${tabletCol}-tablet`\n                ],\n                desktopCol && [\n                    `mdc-layout-grid__cell--span-${desktopCol}-desktop`\n                ],\n                'lmnt-layout-grid__cell',\n                className\n            )}\n            {...customProps}\n        >\n            {children}\n        </div>\n    );\n});\n\nGridCol.displayName = 'GridCol';\nGridCol.propTypes = GridColPropTypes;\nGridCol.defaultProps = GridColDefaultProps;\nexport default GridCol;\n","import React, { forwardRef, useContext, useMemo } from 'react';\nimport clsx from 'clsx';\nimport GridContext from './GridContext';\nimport { GridRowDefaultProps, GridRowPropTypes } from './generated/propTypes';\n\nconst GridRow = forwardRef((props, externalRef) => {\n    const { children, className, style, ...customProps } = props;\n    const { fullHeight, rowGap, columnGap } = useContext(GridContext);\n\n    const styles = useMemo(\n        () => ({\n            ...style,\n            height: fullHeight ? '100%' : '',\n            rowGap,\n            columnGap\n        }),\n        [style, fullHeight, rowGap, columnGap]\n    );\n\n    return (\n        <div\n            ref={externalRef}\n            className={clsx(\n                'lmnt',\n                'mdc-layout-grid__inner',\n                'lmnt-layout-grid__inner',\n                className\n            )}\n            style={styles}\n            {...customProps}\n        >\n            {children}\n        </div>\n    );\n});\n\nGridRow.displayName = 'GridRow';\nGridRow.propTypes = GridRowPropTypes;\nGridRow.defaultProps = GridRowDefaultProps;\n\nexport default GridRow;\n"],"names":["GridContext","createContext","GridPropTypes","airy","deprecatedProp","PropTypes","bool","children","node","isRequired","className","string","columnGap","oneOfType","number","fullHeight","fullWidth","gridAlign","oneOf","rowGap","style","object","useMaxWidth","variant","GridDefaultProps","undefined","GridColPropTypes","align","desktopCol","gridColStart","horizontalAlign","order","phoneCol","tabletCol","verticalAlign","GridColDefaultProps","GridRowPropTypes","GridRowDefaultProps","Grid","forwardRef","props","externalRef","customProps","currentVariant","value","useMemo","ref","useRef","useImperativeHandle","current","classes","clsx","React","createElement","Provider","_extends","displayName","propTypes","defaultProps","GridCol","columns","styles","gridColumnStart","GridRow","useContext","height"],"mappings":"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"}