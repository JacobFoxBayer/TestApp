{"version":3,"file":"index.js","sources":["../generated/propTypes.js","../Checkbox.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { deprecatedProp } from \"@element/react-common\";\n\n/**\n *\n * This file is automatically generated by the Element\n * documentation system. Any modifications to this file\n * will be overwritten!\n *\n */\n\nexport const CheckboxPropTypes = {\n  /**\n   * Aligns checkbox to the right of the label.\n   *\n   * Defaults to **false**.\n   */\n  alignEnd: PropTypes.bool,\n  /**\n   * The current state of the checkbox.\n   *\n   * Defaults to **null**.\n   */\n  checked: PropTypes.bool,\n  /**\n   * @deprecated _Use `label` instead._\n   *\n   * Alternative to `label`, if both `label` and `children` are set, `label` will take priority. Expects a string, but will accept any valid markup.\n   *\n   * Defaults to **undefined**.\n   */\n  children: deprecatedProp(PropTypes.node, \"Checkbox\", \"Use `label` instead.\"),\n  /**\n   * The css class name to be passed through to the component markup.\n   *\n   * Defaults to **undefined**.\n   */\n  className: PropTypes.string,\n  /**\n   * Prevent the user from interacting with the component.\n   *\n   * Defaults to **false**.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The label not be displayed, but will still be available to screen readers. This should only be used when the context of the checkbox is clear and understandable. An example use-case could be as a column in a table where the column header specifies the action.\n   *\n   * Defaults to **false**.\n   */\n  hideLabel: PropTypes.bool,\n  /**\n   * Randomly generated id. May be overwritten.\n   *\n   * Defaults to **undefined**.\n   */\n  id: PropTypes.string,\n  /**\n   * The checkbox will show an indicator if no value (true or false) is set.\n   *\n   * Defaults to **false**.\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * Display label. The `label` should always be set even when using `hideLabel` - it will be used by screen readers.\n   *\n   * Defaults to **null**.\n   */\n  label: PropTypes.string,\n  /**\n   * Fired when checkbox value is changed\n   *\n   * Defaults to **null**.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Override the default (`primary`) color with the `secondary` color. Most commonly used when the control is placed on a darker surface.\n   *\n   * Defaults to **'primary'**.\n   */\n  themeColor: PropTypes.oneOf([\"primary\", \"secondary\"]),\n  /**\n   * Any additional value information to be included with the event.\n   *\n   * Defaults to **null**.\n   */\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.object,\n  ]),\n};\n\nexport const CheckboxDefaultProps = {\n  alignEnd: false,\n  checked: null,\n  children: undefined,\n  className: undefined,\n  disabled: false,\n  hideLabel: false,\n  id: undefined,\n  indeterminate: false,\n  label: null,\n  themeColor: \"primary\",\n  value: null,\n};\n","import { FormField } from '@element/react-form-field';\nimport { InputLabel } from '@element/react-input-label';\nimport React, {\n    useRef,\n    useEffect,\n    useCallback,\n    useState,\n    forwardRef,\n    useImperativeHandle\n} from 'react';\nimport clsx from 'clsx';\nimport { MDCCheckbox } from '@material/checkbox';\nimport { edsRandomId } from '@element/shared';\nimport { CheckboxPropTypes, CheckboxDefaultProps } from './generated/propTypes';\n\nconst Checkbox = forwardRef((props, externalRef) => {\n    const {\n        alignEnd,\n        checked,\n        children,\n        className,\n        disabled,\n        hideLabel,\n        id,\n        indeterminate,\n        label,\n        onChange,\n        themeColor,\n        value,\n        ...customProps\n    } = props;\n\n    const [idActual] = useState(() => id || edsRandomId());\n    const checkboxRef = useRef();\n    const mdcCheckbox = useRef();\n    const content = label || children;\n\n    useImperativeHandle(externalRef, () => checkboxRef.current, []);\n\n    // HACK: This is an intentionally temporary variable to track\n    // if we have already called handleChange to update checked\n    // to the latest value.\n    let handleChangeCalled = false;\n    let currentChecked = checked;\n\n    const handleChange = useCallback(\n        event => {\n            const newChecked = event.target.checked;\n            // HACK: Since we potentially have 2 events calling\n            // `handleChange` (see note below), we need to make\n            // sure we only run it once.\n            if (handleChangeCalled && newChecked === currentChecked) return;\n\n            // Dear eslint, I know what I'm doing and it's on purpose.\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            handleChangeCalled = true;\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            currentChecked = newChecked;\n\n            onChange?.(currentChecked, event, value);\n        },\n        [onChange]\n    );\n\n    useEffect(() => {\n        mdcCheckbox.current = new MDCCheckbox(checkboxRef.current);\n        return () => {\n            mdcCheckbox.current.destroy();\n        };\n    }, []);\n\n    useEffect(() => {\n        // HACK: We need to make sure we only update when\n        // necessary. See notes above and below for more\n        // details.\n        if (mdcCheckbox.current.checked === checked) return;\n        mdcCheckbox.current.checked = checked;\n    }, [checked]);\n\n    useEffect(() => {\n        if (indeterminate && checked === null) {\n            mdcCheckbox.current.indeterminate = true;\n        } else {\n            mdcCheckbox.current.indeterminate = false;\n        }\n    }, [checked, indeterminate]);\n\n    const optionalProps = {};\n    if (value !== null && value !== undefined) {\n        optionalProps.value = value;\n    }\n\n    return (\n        <FormField\n            alignEnd={alignEnd}\n            input={mdcCheckbox}\n            className='lmnt mdc-touch-target-wrapper'\n        >\n            <div\n                // onClick={handleChange}\n                ref={checkboxRef}\n                className={clsx(\n                    'lmnt mdc-checkbox lmnt-checkbox mdc-checkbox--touch',\n                    disabled && 'mdc-checkbox--disabled',\n                    themeColor && `lmnt-checkbox--${themeColor}`,\n                    className\n                )}\n            >\n                <input\n                    id={idActual}\n                    disabled={disabled}\n                    type='checkbox'\n                    className='mdc-checkbox__native-control'\n                    onChange={handleChange}\n                    // HACK: I know what you're thinking: having `onChange` and `onClick` is\n                    // silly and redundant. However, this is working around a frustrating\n                    // issue where mdcCheckbox does not fire `onChange` on the first click\n                    // after being updated programmatically. On the other hand `onClick`\n                    // always fires.\n                    //\n                    // Why not just use `onClick`? Glad you asked. Accessibility. The `onChange`\n                    // event is fired in more circumstances than just the user clicking on something.\n                    // Think keyboard navigation, etc. We can just ignore on change, so we use\n                    // `onClick` as a fallback and add logic to handleChange to avoid a double-fire.\n                    onClick={handleChange}\n                    defaultChecked={checked}\n                    {...optionalProps}\n                    {...customProps}\n                />\n                <div className='mdc-checkbox__background'>\n                    <svg\n                        className='mdc-checkbox__checkmark'\n                        viewBox='0 0 24 24'\n                    >\n                        <path\n                            className='mdc-checkbox__checkmark-path'\n                            fill='none'\n                            stroke='white'\n                            d='M1.73,12.91 8.1,19.28 22.79,4.59'\n                        />\n                    </svg>\n                    <div className='mdc-checkbox__mixedmark' />\n                </div>\n                <div className='mdc-checkbox__ripple' />\n            </div>\n            <InputLabel\n                hideLabel={hideLabel}\n                targetId={idActual}\n                className={clsx(disabled && 'lmnt-theme-on-surface-disabled')}\n                disabled={disabled}\n            >\n                {content}\n            </InputLabel>\n        </FormField>\n    );\n});\n\nCheckbox.displayName = 'Checkbox';\nCheckbox.propTypes = CheckboxPropTypes;\nCheckbox.defaultProps = CheckboxDefaultProps;\n\nexport default Checkbox;\n"],"names":["CheckboxPropTypes","alignEnd","PropTypes","bool","checked","children","deprecatedProp","node","className","string","disabled","hideLabel","id","indeterminate","label","onChange","func","themeColor","oneOf","value","oneOfType","number","object","CheckboxDefaultProps","undefined","Checkbox","forwardRef","props","externalRef","customProps","idActual","useState","edsRandomId","checkboxRef","useRef","mdcCheckbox","content","useImperativeHandle","current","handleChangeCalled","currentChecked","handleChange","useCallback","event","newChecked","target","useEffect","MDCCheckbox","destroy","optionalProps","React","createElement","FormField","input","ref","clsx","_extends","type","onClick","defaultChecked","viewBox","fill","stroke","d","InputLabel","targetId","displayName","propTypes","defaultProps"],"mappings":"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"}