'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('react');
var ripple = require('@material/ripple');
var PropTypes = require('prop-types');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var PropTypes__default = /*#__PURE__*/_interopDefault(PropTypes);

/**
 *
 * This file is automatically generated by the Element
 * documentation system. Any modifications to this file
 * will be overwritten!
 *
 */

const RipplePropTypes = {
  /**
   * Content to be rendered inside the component.
   *
   * Defaults to **null**.
   */
  children: PropTypes__default["default"].node,
  /**
   * A reference to the component to apply the ripple to.
   *
   * Defaults to **undefined**.
   */
  componentRef: PropTypes__default["default"].object,
  /**
   * Allows the ripple to extend beyond the component boundaries.
   *
   * Defaults to **undefined**.
   */
  unbounded: PropTypes__default["default"].bool
};
const RippleDefaultProps = {
  children: null,
  componentRef: undefined,
  unbounded: undefined
};

/* eslint-disable react/forbid-prop-types */
const Ripple = /*#__PURE__*/react.forwardRef((props, externalRef) => {
  const {
    componentRef,
    unbounded,
    children
  } = props;
  const mdcRippleRef = react.useRef();
  react.useImperativeHandle(externalRef, () => mdcRippleRef.current, []);
  react.useEffect(() => {
    const ref = componentRef.current;
    if (ref) {
      mdcRippleRef.current = ripple.MDCRipple.attachTo(componentRef.current);
      if (unbounded) {
        mdcRippleRef.current.unbounded = true;
      }
    }
    return () => {
      if (ref) {
        mdcRippleRef.current.destroy();
      }
    };
  }, [componentRef, unbounded]);
  return children;
});
Ripple.displayName = 'Ripple';
Ripple.propTypes = RipplePropTypes;
Ripple.defaultProps = RippleDefaultProps;

exports.Ripple = Ripple;
//# sourceMappingURL=index.js.map
