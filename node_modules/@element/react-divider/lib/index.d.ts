import React from 'react';


export interface DividerProps {
    /**
    * The css class name to be passed through to the component markup.
    *
    * Defaults to **undefined**.
    */
    className?: string;
    /**
    * @deprecated _Use `themeColor` instead._
    *
    * The name of the desired Element color like 'primary'
    *
    * Defaults to **undefined**.
    */
    dividerColor?: string;
    /**
    * @deprecated _Use `themeColorImportant` instead._
    *
    * If the border-color should be set with !important
    *
    * Defaults to **undefined**.
    */
    dividerColorImportant?: boolean;
    /**
    * @deprecated _Use `variant` instead._
    *
    * Choose between dense and tall variants.
    *
    * Defaults to **undefined**.
    */
    dividerHeight?: string;
    /**
    * Set the border-style with default browser styles. In general, avoid using.
    *
    * Defaults to **empty string**.
    */
    dividerStyle?: string;
    /**
    * The name of the desired Element color like 'primary'
    *
    * Defaults to **'on-surface-stroke'**.
    */
    themeColor?: string;
    /**
    * @deprecated _No longer needed._
    *
    * In some cases `themeColor` may be inadvertently overridden by another style, this will ensure the selected color is applied.
    *
    * Defaults to **undefined**.
    */
    themeColorImportant?: boolean;
    /**
    * Choose between dense and tall variants.
    *
    * Defaults to **'dense'**.
    */
    variant?: string;
    /**
    * Adds top and bottom margin.
    *
    * Defaults to **undefined**.
    */
    verticalMargin?: string;
}

/**
* Dividers are horizontal lines. Add them to divide sections of content and splash in some color.
 * @prop {string} className - The css class name to be passed through to the component markup. Defaults to _undefined_.
 * @prop {string} dividerColor - Deprecated: Use `themeColor` instead. The name of the desired Element color like 'primary' Defaults to _undefined_.
 * @prop {boolean} dividerColorImportant - Deprecated: Use `themeColorImportant` instead. If the border-color should be set with !important Defaults to _undefined_.
 * @prop {string} dividerHeight - Deprecated: Use `variant` instead. Choose between dense and tall variants. Defaults to _undefined_.
 * @prop {string} dividerStyle - Set the border-style with default browser styles. In general, avoid using. Defaults to _empty string_.
 * @prop {string} themeColor - The name of the desired Element color like 'primary' Defaults to _'on-surface-stroke'_.
 * @prop {boolean} themeColorImportant - Deprecated: No longer needed. In some cases `themeColor` may be inadvertently overridden by another style, this will ensure the selected color is applied. Defaults to _undefined_.
 * @prop {string} variant - Choose between dense and tall variants. Defaults to _'dense'_.
 * @prop {string} verticalMargin - Adds top and bottom margin. Defaults to _undefined_.
*/
export const Divider: React.FunctionComponent<DividerProps | React.HTMLProps<HTMLElement> | React.DOMAttributes<HTMLElement>>;
