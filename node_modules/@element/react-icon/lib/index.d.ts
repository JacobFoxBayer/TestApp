import React from 'react';


export interface IconProps {
    /**
    * Sets the `aria-hidden` attribute for the icon. If set to true, the icon will not be read by screen readers. Should be used if icon is purely decorative (such as when used in a button or textfield) or labeled by rendered text using `aria-labelledBy` or `aria-label`.
    *
    * Defaults to **null**.
    */
    ariaHidden?: boolean;
    /**
    * Accessibility label for assistive technologies.
    *
    * Defaults to **null**.
    */
    ariaLabel?: string;
    /**
    * Id of the component being labeled for assistive technologies.
    *
    * Defaults to **null**.
    */
    ariaLabelledBy?: string;
    /**
    * The custom icon notification badge to be rendered. The icon notification badge component prevents `xsmall` and `small` icon size
    *
    * Defaults to **undefined**.
    */
    badge?: React.ReactNode;
    /**
    * The placement of the notification badge on the icon to start.  It will flip to the opposite side if there is no room.
    *
    * Defaults to **'right-start'**.
    */
    badgePlacement?: string;
    /**
    * The css class name to be passed through to the component markup.
    *
    * Defaults to **undefined**.
    */
    className?: string;
    /**
    * Mostly commonly a string but accepts any valid markup or components. If a custom icon is used styles like color and size will need be handled with custom CSS.
    *
    * Defaults to **null**.
    */
    icon?: string | React.ReactNode;
    /**
    * One of 'xsmall', 'small', 'medium', 'large', and 'xlarge' will change the size of the icon. Defaults to medium.
    *
    * Defaults to **'medium'**.
    */
    iconSize?: string;
    /**
    * The icon type to be rendered. Not all icons have every type. To see which icons are available for different types see [Material Icons docs](https://material.io/tools/icons)
    *
    * Defaults to **'filled'**.
    */
    iconType?: string;
    /**
    * Add pointer icon style
    *
    * Defaults to **false**.
    */
    pointer?: boolean;
    /**
    * @deprecated _Renamed, see iconSize instead._
    *
    * One of 'xsmall', 'small', 'medium', 'large', and 'xlarge' will change the size of the icon. Defaults to medium.
    *
    * Defaults to **undefined**.
    */
    size?: string;
    /**
    * Color variations. Variants prefixed with `filled-` will add a background color to the icon according to the theme. Variants prefixed with ` color-` will change the color of the icon according to the theme.
    *
    * Defaults to **empty string**.
    */
    variant?: string;
}

/**
* Icons are small representative images that can be combined with other components such as buttons.
 * @prop {boolean} ariaHidden - Sets the `aria-hidden` attribute for the icon. If set to true, the icon will not be read by screen readers. Should be used if icon is purely decorative (such as when used in a button or textfield) or labeled by rendered text using `aria-labelledBy` or `aria-label`. Defaults to _null_.
 * @prop {string} ariaLabel - Accessibility label for assistive technologies. Defaults to _null_.
 * @prop {string} ariaLabelledBy - Id of the component being labeled for assistive technologies. Defaults to _null_.
 * @prop {React.ReactNode} badge - The custom icon notification badge to be rendered. The icon notification badge component prevents `xsmall` and `small` icon size Defaults to _undefined_.
 * @prop {string} badgePlacement - The placement of the notification badge on the icon to start.  It will flip to the opposite side if there is no room. Defaults to _'right-start'_.
 * @prop {string} className - The css class name to be passed through to the component markup. Defaults to _undefined_.
 * @prop {string|React.ReactNode} icon - Mostly commonly a string but accepts any valid markup or components. If a custom icon is used styles like color and size will need be handled with custom CSS. Defaults to _null_.
 * @prop {string} iconSize - One of 'xsmall', 'small', 'medium', 'large', and 'xlarge' will change the size of the icon. Defaults to medium. Defaults to _'medium'_.
 * @prop {string} iconType - The icon type to be rendered. Not all icons have every type. To see which icons are available for different types see [Material Icons docs](https://material.io/tools/icons) Defaults to _'filled'_.
 * @prop {boolean} pointer - Add pointer icon style Defaults to _false_.
 * @prop {string} size - Deprecated: Renamed, see iconSize instead. One of 'xsmall', 'small', 'medium', 'large', and 'xlarge' will change the size of the icon. Defaults to medium. Defaults to _undefined_.
 * @prop {string} variant - Color variations. Variants prefixed with `filled-` will add a background color to the icon according to the theme. Variants prefixed with ` color-` will change the color of the icon according to the theme. Defaults to _empty string_.
*/
export const Icon: React.FunctionComponent<IconProps | React.HTMLProps<HTMLElement> | React.DOMAttributes<HTMLElement>>;
