{"version":3,"file":"index.js","sources":["../generated/propTypes.js","../TabIndicator.js","../TabsContext.js","../Tab.js","../TabScroller.js","../TabBar.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { deprecatedProp } from \"@element/react-common\";\n\n/**\n *\n * This file is automatically generated by the Element\n * documentation system. Any modifications to this file\n * will be overwritten!\n *\n */\n\nexport const TabBarPropTypes = {\n  /**\n   * Index of the currently active tab.\n   *\n   * Defaults to **0**.\n   */\n  activeTabIndex: PropTypes.number,\n  /**\n   * Accepts one or more Tab components.\n   *\n   * Defaults to **null**.\n   */\n  children: PropTypes.node,\n  /**\n   * The css class name to be passed through to the component markup.\n   *\n   * Defaults to **undefined**.\n   */\n  className: PropTypes.string,\n  /**\n   * Clustered tabs can be aligned to 'start', 'center', or 'end'. Requires one or more tabs to have clustered set to true.\n   *\n   * Defaults to **'start'**.\n   */\n  clusterAlign: PropTypes.oneOf([\"start\", \"center\", \"end\"]),\n  /**\n   * Indicates that tabs should shrink in size to be as narrow as possible without causing text to wrap.\n   *\n   * Defaults to **false**.\n   */\n  clustered: PropTypes.bool,\n  /**\n   * Apply elevated styles to raise the tab-bar above standard content.\n   *\n   * Defaults to **false**.\n   */\n  elevated: PropTypes.bool,\n  /**\n   * Fires when switching to a different tab.\n   *\n   * Defaults to **null**.\n   */\n  onTabActivated: PropTypes.func,\n  /**\n   * @deprecated _Please use elevated instead._\n   *\n   *  Apply a raised style.\n   *\n   * Defaults to **undefined**.\n   */\n  raised: deprecatedProp(\n    PropTypes.bool,\n    \"TabBar\",\n    \"Please use elevated instead.\"\n  ),\n  /**\n   * @deprecated _Deprecated, containers will scroll when necessary._\n   *\n   * Create a fixed height scrollable container.\n   *\n   * Defaults to **undefined**.\n   */\n  scrollable: deprecatedProp(\n    PropTypes.bool,\n    \"TabBar\",\n    \"Deprecated, containers will scroll when necessary.\"\n  ),\n  /**\n   * Indicates that the tab icon and label should flow vertically instead of horizontally.\n   *\n   * Defaults to **false**.\n   */\n  stacked: PropTypes.bool,\n  /**\n   * Background theme color. Accepts one of 'primary', 'secondary', or 'surface'.\n   *\n   * Defaults to **'surface'**.\n   */\n  variant: PropTypes.oneOf([\"primary\", \"secondary\", \"surface\"]),\n};\n\nexport const TabBarDefaultProps = {\n  activeTabIndex: 0,\n  children: null,\n  className: undefined,\n  clusterAlign: \"start\",\n  clustered: false,\n  elevated: false,\n  raised: undefined,\n  scrollable: undefined,\n  stacked: false,\n  variant: \"surface\",\n};\n\n/**\n *\n * This file is automatically generated by the Element\n * documentation system. Any modifications to this file\n * will be overwritten!\n *\n */\n\nexport const TabPropTypes = {\n  /**\n   * Indicates that the tab is active.\n   *\n   * Defaults to **undefined**.\n   */\n  active: PropTypes.bool,\n  /**\n   * The custom tab notification badge to be rendered.\n   *\n   * Defaults to **undefined**.\n   */\n  badge: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.node,\n  ]),\n  /**\n   * The displayed content. Expects a valid string, though will accept any valid components or markup. If label and `children` are both set, `label` will take priority.\n   *\n   * Defaults to **null**.\n   */\n  children: PropTypes.node,\n  /**\n   * The css class name to be passed through to the component markup.\n   *\n   * Defaults to **undefined**.\n   */\n  className: PropTypes.string,\n  /**\n   * Indicates that the tab should shrink in size to be as narrow as possible without causing text to wrap.\n   *\n   * Defaults to **false**.\n   */\n  clustered: PropTypes.bool,\n  /**\n   * Add a leading icon to the tab.\n   *\n   * Defaults to **undefined**.\n   */\n  icon: PropTypes.node,\n  /**\n   * An icon to be used as the tab indicator. Accepts the name of any valid material icon (see Icon component documentation for a list of valid icons). If no icon is provided the tab-indicator will use an underline.\n   *\n   * Defaults to **null**.\n   */\n  indicatorIcon: PropTypes.string,\n  /**\n   * The tab-indicator will span the entire tab with 'full' or only the content of the tab with 'content'.\n   *\n   * Defaults to **'full'**.\n   */\n  indicatorSize: PropTypes.oneOf([\"full\", \"content\"]),\n  /**\n   * The tab-indicator will use a 'slide' or 'fade' transition between tabs.\n   *\n   * Defaults to **'slide'**.\n   */\n  indicatorTransition: PropTypes.oneOf([\"slide\", \"fade\"]),\n  /**\n   * The displayed text. Expects a valid string. If label and `children` are both set, `label` will take priority.\n   *\n   * Defaults to **null**.\n   */\n  label: PropTypes.node,\n  /**\n   * Indicates that the tab icon and label should flow vertically instead of horizontally. If stacked is true the tab will not show a badge.  You can place the badge on the leading icon.\n   *\n   * Defaults to **false**.\n   */\n  stacked: PropTypes.bool,\n};\n\nexport const TabDefaultProps = {\n  active: undefined,\n  badge: undefined,\n  children: null,\n  className: undefined,\n  clustered: false,\n  icon: undefined,\n  indicatorIcon: null,\n  indicatorSize: \"full\",\n  indicatorTransition: \"slide\",\n  label: null,\n  stacked: false,\n};\n\n/**\n *\n * This file is automatically generated by the Element\n * documentation system. Any modifications to this file\n * will be overwritten!\n *\n */\n\nexport const TabIndicatorPropTypes = {\n  /**\n   * Visually activates the indicator.\n   *\n   * Defaults to **false**.\n   */\n  active: PropTypes.bool,\n  /**\n   * The tab-indicator will use an underline if no icon is provided.\n   *\n   * Defaults to **null**.\n   */\n  icon: PropTypes.string,\n  /**\n   * The Tab Indicator will use a 'slide' or 'fade' transition between tabs.\n   *\n   * Defaults to **'slide'**.\n   */\n  transition: PropTypes.string,\n};\n\nexport const TabIndicatorDefaultProps = {\n  active: false,\n  icon: null,\n  transition: \"slide\",\n};\n\n/**\n *\n * This file is automatically generated by the Element\n * documentation system. Any modifications to this file\n * will be overwritten!\n *\n */\n\nexport const TabScrollerPropTypes = {\n  /**\n   * Clustered tabs can be aligned to 'start', 'center', or 'end'.\n   *\n   * Defaults to **'start'**.\n   */\n  align: PropTypes.oneOf([\"start\", \"center\", \"end\"]),\n  /**\n   * Accepts Tab components.\n   *\n   * Defaults to **null**.\n   */\n  children: PropTypes.node,\n};\n\nexport const TabScrollerDefaultProps = {\n  align: \"start\",\n  children: null,\n};\n","import { MDCTabIndicator } from '@material/tab-indicator';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, {\n    forwardRef,\n    useEffect,\n    useImperativeHandle,\n    useRef\n} from 'react';\n\nconst TabIndicator = forwardRef((props, externalRef) => {\n    const { active, className, icon, id, transition, ...customProps } = props;\n\n    const ref = useRef();\n    const mdcTabIndicator = useRef();\n\n    const classes = clsx(\n        'lmnt',\n        'lmnt-tab-indicator',\n        'mdc-tab-indicator',\n        active && 'mdc-tab-indicator--active',\n        transition === 'fade' && 'mdc-tab-indicator--fade',\n        className\n    );\n\n    useEffect(() => {\n        mdcTabIndicator.current = MDCTabIndicator.attachTo(ref.current);\n\n        return () => {\n            mdcTabIndicator.current.destroy();\n        };\n    }, [mdcTabIndicator]);\n\n    useImperativeHandle(externalRef, () => ref.current, []);\n\n    return (\n        <span id={id} className={classes} ref={ref} {...customProps}>\n            {icon && (\n                <span\n                    className='mdc-tab-indicator__content mdc-tab-indicator__content--icon material-icons'\n                    aria-hidden='true'\n                >\n                    {icon}\n                </span>\n            )}\n            {!icon && (\n                <span className='mdc-tab-indicator__content mdc-tab-indicator__content--underline' />\n            )}\n        </span>\n    );\n});\n\nTabIndicator.displayName = 'TabIndicator';\nTabIndicator.propTypes = {\n    active: PropTypes.bool,\n    className: PropTypes.string,\n    icon: PropTypes.string,\n    id: PropTypes.string,\n    transition: PropTypes.oneOf(['fade', 'slide'])\n};\n\nTabIndicator.defaultProps = {\n    active: false,\n    className: null,\n    icon: null,\n    id: null,\n    transition: 'slide'\n};\n\nexport default TabIndicator;\n","import { createContext } from 'react';\n\nconst TabsContext = createContext({});\n\nexport default TabsContext;\n","import { MDCTab } from '@material/tab';\nimport clsx from 'clsx';\nimport React, {\n    useEffect,\n    useRef,\n    useContext,\n    forwardRef,\n    useImperativeHandle\n} from 'react';\nimport { addProps } from '@element/react-common';\nimport { Icon } from '@element/react-icon';\nimport { TabPropTypes, TabDefaultProps } from './generated/propTypes';\nimport TabIndicator from './TabIndicator';\nimport TabsContext from './TabsContext';\n\nconst TabIcon = (icon, label) => {\n    if (!icon) return undefined;\n    if (typeof icon === 'string') {\n        return (\n            <Icon\n                tabIndex={0}\n                role='button'\n                className='mdc-tab__icon'\n                ariaHidden\n                ariaLabel={label}\n                icon={icon}\n            />\n        );\n    }\n    return addProps(icon, {\n        className: 'mdc-tab__icon',\n        tabIndex: 0,\n        'aria-hidden': true,\n        'aria-label': label,\n        role: 'button'\n    });\n};\n\nconst Tab = forwardRef((props, externalRef) => {\n    const {\n        active,\n        badge,\n        children,\n        className,\n        clustered,\n        icon,\n        indicatorIcon,\n        indicatorSize,\n        indicatorTransition,\n        label,\n        stacked,\n        ...customProps\n    } = props;\n\n    const ref = useRef();\n    const mdcTab = useRef();\n    useImperativeHandle(externalRef, () => ref.current, []);\n\n    const tabsContext = useContext(TabsContext);\n\n    const actualStacked = tabsContext.stacked || stacked;\n\n    const actualClustered = tabsContext.clustered || clustered;\n\n    useEffect(() => {\n        mdcTab.current = MDCTab.attachTo(ref.current);\n\n        return () => {\n            mdcTab.current.destroy();\n        };\n    }, []);\n\n    const classes = clsx(\n        'lmnt',\n        'lmnt-tab',\n        'mdc-tab',\n        'mdc-button',\n        active && 'mdc-tab--active',\n        actualClustered && 'mdc-tab--min-width',\n        actualStacked && 'mdc-tab--stacked',\n        className\n    );\n\n    return (\n        <button\n            type='button'\n            aria-selected={active}\n            ref={ref}\n            className={classes}\n            role='tab'\n            {...customProps}\n        >\n            <span className='mdc-tab__content'>\n                {icon && TabIcon(icon, label)}\n                <span className='mdc-tab__text-label'>{children}</span>\n                {indicatorSize === 'content' && (\n                    <TabIndicator\n                        active={active}\n                        icon={indicatorIcon}\n                        transition={indicatorTransition}\n                    >\n                        {indicatorIcon}\n                    </TabIndicator>\n                )}\n\n                {badge &&\n                    !actualStacked &&\n                    addProps(badge, {\n                        className: 'lmnt-tab-bar--notification-badge'\n                    })}\n            </span>\n            {indicatorSize === 'full' && (\n                <TabIndicator\n                    active={active}\n                    icon={indicatorIcon}\n                    transition={indicatorTransition}\n                >\n                    {indicatorIcon}\n                </TabIndicator>\n            )}\n            <span className='lmnt-tab___ripple mdc-tab__ripple' />\n        </button>\n    );\n});\n\nTab.displayName = 'Tab';\nTab.propTypes = TabPropTypes;\nTab.defaultProps = TabDefaultProps;\n\nexport default Tab;\n","import { MDCTabScroller } from '@material/tab-scroller';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, {\n    forwardRef,\n    useEffect,\n    useImperativeHandle,\n    useRef\n} from 'react';\n\nconst TabBar = forwardRef((props, externalRef) => {\n    const { align, className, children, ...customProps } = props;\n\n    const ref = useRef();\n    const mdcTabBarScroller = useRef();\n\n    useEffect(() => {\n        mdcTabBarScroller.current = MDCTabScroller.attachTo(ref.current);\n        return () => {\n            mdcTabBarScroller.current.destroy();\n        };\n    }, [mdcTabBarScroller]);\n\n    const classes = clsx(\n        'lmnt',\n        'lmnt-tab-scroller',\n        'mdc-tab-scroller',\n        align === 'start' && 'mdc-tab-scroller--align-start',\n        align === 'center' && 'mdc-tab-scroller--align-center',\n        align === 'end' && 'mdc-tab-scroller--align-end',\n        className\n    );\n\n    useImperativeHandle(externalRef, () => ref.current, []);\n\n    return (\n        <div className={classes} ref={ref} {...customProps}>\n            <div className='mdc-tab-scroller__scroll-area'>\n                <div className='mdc-tab-scroller__scroll-content'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n});\n\nTabBar.displayName = 'TabBar';\nTabBar.propTypes = {\n    align: PropTypes.oneOf(['start', 'center', 'end']),\n    className: PropTypes.string,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nTabBar.defaultProps = {\n    align: 'start',\n    className: undefined,\n    children: undefined\n};\n\nexport default TabBar;\n","import { MDCTabBar } from '@material/tab-bar';\nimport clsx from 'clsx';\nimport React, {\n    useEffect,\n    useRef,\n    useCallback,\n    useMemo,\n    forwardRef,\n    useImperativeHandle\n} from 'react';\nimport { TabBarPropTypes, TabBarDefaultProps } from './generated/propTypes';\nimport TabScroller from './TabScroller';\nimport TabsContext from './TabsContext';\n\nconst TabBar = forwardRef((props, externalRef) => {\n    const {\n        activeTabIndex,\n        children,\n        className,\n        clusterAlign,\n        clustered,\n        elevated,\n        onTabActivated,\n        raised,\n        scrollable,\n        stacked,\n        variant,\n        ...customProps\n    } = props;\n\n    const ref = useRef();\n    const mdcTabBar = useRef();\n\n    useImperativeHandle(externalRef, () => ref.current, []);\n\n    const handleTabActivation = useCallback(\n        event => onTabActivated && onTabActivated(event.detail.index),\n        [onTabActivated]\n    );\n\n    useEffect(() => {\n        mdcTabBar.current = MDCTabBar.attachTo(ref.current);\n        mdcTabBar.current.unlisten('MDCTabBar:activated', handleTabActivation);\n        mdcTabBar.current.listen('MDCTabBar:activated', handleTabActivation);\n\n        return () => {\n            mdcTabBar.current.unlisten(\n                'MDCTabBar:activated',\n                handleTabActivation\n            );\n            mdcTabBar.current.destroy();\n        };\n    }, [children, mdcTabBar, handleTabActivation]);\n\n    useEffect(() => {\n        mdcTabBar.current.activateTab(activeTabIndex);\n    }, [mdcTabBar, activeTabIndex]);\n\n    const classes = clsx(\n        'lmnt',\n        'lmnt-tab-bar',\n        'mdc-tab-bar',\n        raised && !scrollable && 'mdc-tab-bar--raised',\n        elevated && 'mdc-tab-bar--elevated',\n        variant === 'primary' && 'mdc-tab-bar--primary',\n        variant === 'secondary' && 'mdc-tab-bar--secondary',\n        variant === 'surface' && 'mdc-tab-bar--surface',\n        className\n    );\n\n    const value = useMemo(\n        () => ({\n            stacked,\n            clustered\n        }),\n        [stacked, clustered]\n    );\n\n    return (\n        <TabsContext.Provider value={value}>\n            <div className={classes} role='tablist' ref={ref} {...customProps}>\n                <TabScroller align={clusterAlign}>{children}</TabScroller>\n            </div>\n        </TabsContext.Provider>\n    );\n});\n\nTabBar.displayName = 'TabBar';\nTabBar.propTypes = TabBarPropTypes;\nTabBar.defaultProps = TabBarDefaultProps;\nTabBar.displayName = 'TabBar';\n\nexport default TabBar;\n"],"names":["TabBarPropTypes","activeTabIndex","PropTypes","number","children","node","className","string","clusterAlign","oneOf","clustered","bool","elevated","onTabActivated","func","raised","deprecatedProp","scrollable","stacked","variant","TabBarDefaultProps","undefined","TabPropTypes","active","badge","oneOfType","icon","indicatorIcon","indicatorSize","indicatorTransition","label","TabDefaultProps","transition","align","TabIndicator","forwardRef","props","externalRef","id","customProps","ref","useRef","mdcTabIndicator","classes","clsx","useEffect","current","MDCTabIndicator","attachTo","destroy","useImperativeHandle","React","createElement","_extends","displayName","propTypes","defaultProps","TabsContext","createContext","TabIcon","Icon","tabIndex","role","ariaHidden","ariaLabel","addProps","Tab","mdcTab","tabsContext","useContext","actualStacked","actualClustered","MDCTab","type","TabBar","mdcTabBarScroller","MDCTabScroller","arrayOf","mdcTabBar","handleTabActivation","useCallback","event","detail","index","MDCTabBar","unlisten","listen","activateTab","value","useMemo","Provider","TabScroller"],"mappings":"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"}