{"version":3,"file":"index.js","sources":["../generated/propTypes.js","../Pagination.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n *\n * This file is automatically generated by the Element\n * documentation system. Any modifications to this file\n * will be overwritten!\n *\n */\n\nexport const PaginationPropTypes = {\n  /**\n   * Disables internal state tracking in favor of programmatic control.\n   *\n   * Defaults to **false**.\n   */\n  controlled: PropTypes.bool,\n  /**\n   * When using Pagination in `controlled` mode, this will set the currently selected data page.\n   *\n   * Defaults to **0**.\n   */\n  currentPage: PropTypes.number,\n  /**\n   * Enables a Select list of pages for direct navigation. If the number of pages is below the `directNavigationThreshold`, numbered buttons will displayed instead.\n   *\n   * Defaults to **false**.\n   */\n  directNavigation: PropTypes.bool,\n  /**\n   * When using `directNavigation`, this is number of pages above which a Select list of pages will be presented instead of number buttons.\n   *\n   * Defaults to **4**.\n   */\n  directNavigationThreshold: PropTypes.number,\n  /**\n   * When using Pagination in `controlled` mode, this controls enabled or disabled the next page button.\n   *\n   * Defaults to **false**.\n   */\n  disableNextPage: PropTypes.bool,\n  /**\n   * When using Pagination in `controlled` mode, this controls enabled or disabled the previous page button.\n   *\n   * Defaults to **false**.\n   */\n  disablePreviousPage: PropTypes.bool,\n  /**\n   * Prevent the user from interacting with the component.\n   *\n   * Defaults to **false**.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Hide the first and last buttons.\n   *\n   * Defaults to **false**.\n   */\n  hideFirstLast: PropTypes.bool,\n  /**\n   * Hide the next and previous buttons.\n   *\n   * Defaults to **false**.\n   */\n  hideNextPrev: PropTypes.bool,\n  /**\n   * Hide the Rows Per Page component.\n   *\n   * Defaults to **false**.\n   */\n  hideRowsPerPage: PropTypes.bool,\n  /**\n   * Randomly generated id. May be overwritten.\n   *\n   * Defaults to **undefined**.\n   */\n  id: PropTypes.string,\n  /**\n   * Sets the current page on mount.\n   *\n   * Defaults to **0**.\n   */\n  initialPage: PropTypes.number,\n  /**\n   * Sets item per page. Defaults to first index in itemsPerPageOptions array if value is not available array.\n   *\n   * Defaults to **itemsPerPageOptions[0]**.\n   */\n  itemsPerPage: PropTypes.number,\n  /**\n   * Number of items per page.\n   *\n   * Defaults to **[10, 25, 50, 100, 200]**.\n   */\n  itemsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\n  /**\n   * A customizable function to enable text translation services. Possible string values are 'Page', 'of', and 'Rows per page'.\n   *\n   * Defaults to **null**.\n   */\n  localize: PropTypes.func,\n  /**\n   * Fired with the first page button is clicked.\n   *\n   * Defaults to **null**.\n   */\n  onFirstPage: PropTypes.func,\n  /**\n   * Returns item per page selected.\n   *\n   * Defaults to **null**.\n   */\n  onItemsPerPageChange: PropTypes.func,\n  /**\n   * Fired with the last page button is clicked. Returns the new page.\n   *\n   * Defaults to **null**.\n   */\n  onLastPage: PropTypes.func,\n  /**\n   * Fired with the next page button is clicked. Returns the new page.\n   *\n   * Defaults to **null**.\n   */\n  onNextPage: PropTypes.func,\n  /**\n   * Fired when any page change occurs. Returns the new page.\n   *\n   * Defaults to **null**.\n   */\n  onPageChange: PropTypes.func,\n  /**\n   * Fired with the previous page button is clicked.\n   *\n   * Defaults to **null**.\n   */\n  onPreviousPage: PropTypes.func,\n  /**\n   * Total count of the total number of items to paginate through.\n   *\n   * Defaults to **0**.\n   */\n  totalItems: PropTypes.number,\n  /**\n   * When using Pagination in `controlled` mode, this will override the total number of pages.\n   *\n   * Defaults to **0**.\n   */\n  totalPages: PropTypes.number,\n};\n\nconst itemsPerPageOptions = [10, 25, 50, 100, 200];\nexport const PaginationDefaultProps = {\n  controlled: false,\n  currentPage: 0,\n  directNavigation: false,\n  directNavigationThreshold: 4,\n  disableNextPage: false,\n  disablePreviousPage: false,\n  disabled: false,\n  hideFirstLast: false,\n  hideNextPrev: false,\n  hideRowsPerPage: false,\n  id: undefined,\n  initialPage: 0,\n  itemsPerPage: itemsPerPageOptions[0],\n  itemsPerPageOptions: itemsPerPageOptions,\n  localize: null,\n  totalItems: 0,\n  totalPages: 0,\n};\n","import clsx from 'clsx';\nimport React, {\n    useCallback,\n    useEffect,\n    useMemo,\n    useState,\n    useRef,\n    forwardRef,\n    useImperativeHandle\n} from 'react';\nimport { Icon } from '@element/react-icon';\nimport { IconButton } from '@element/react-icon-button';\nimport { Select } from '@element/react-select';\nimport { edsWarning, edsRandomId } from '@element/react-common';\nimport {\n    PaginationDefaultProps,\n    PaginationPropTypes\n} from './generated/propTypes';\n\nconst Pagination = forwardRef((props, externalRef) => {\n    const getItemsPerPageFallback = itemsPerPageOptions =>\n        itemsPerPageOptions && itemsPerPageOptions.length > 0\n            ? itemsPerPageOptions[0]\n            : 10;\n    const {\n        className,\n        controlled,\n        currentPage,\n        directNavigation,\n        directNavigationThreshold,\n        disableNextPage,\n        disablePreviousPage,\n        disabled,\n        hideFirstLast,\n        hideNextPrev,\n        hideRowsPerPage,\n        id,\n        initialPage,\n        itemsPerPage,\n        itemsPerPageOptions,\n        localize,\n        onFirstPage,\n        onItemsPerPageChange,\n        onLastPage,\n        onNextPage,\n        onPageChange,\n        onPreviousPage,\n        totalItems,\n        totalPages,\n        ...customProps\n    } = props;\n\n    const ref = useRef();\n\n    useImperativeHandle(externalRef, () => ref.current, []);\n\n    const [idActual] = useState(() => id || edsRandomId());\n    const [totalPagesActual, setTotalPagesActual] = useState(totalPages || 0);\n\n    const [disableNextPageActual, setDisableNextPageActual] = useState(\n        disableNextPage || totalItems === 0 || false\n    );\n    const [disablePrevPageActual, setDisablePrevPageActual] = useState(\n        disablePreviousPage || totalItems === 0 || false\n    );\n\n    const [currentPageActual, setCurrentPageActual] = useState(\n        currentPage || 1\n    );\n    const [displayItemOf, setDisplayItemOf] = useState('0-0 of 0');\n    const [selectedItemPerPage, setSelectedItemPerPage] = useState(\n        itemsPerPage || getItemsPerPageFallback(itemsPerPageOptions)\n    );\n    const localizeActual = useMemo(() => {\n        if (localize) return localize;\n        return str => str;\n    }, [localize]);\n\n    const getSelectWidth = () => {\n        const len = localizeActual('Page')?.length || 0;\n        const offset = len * 9;\n        if (totalPagesActual > 99) return `${80 + offset}px`;\n        if (totalPagesActual > 99) return `${70 + offset}px`;\n        return `${70 + offset}px`;\n    };\n\n    const getListOfPages = useCallback(() => {\n        const tmp = [];\n        for (let i = 0; i < totalPagesActual; i += 1) {\n            const pageNumber = {\n                text: `${localizeActual('Page')} ${i + 1}`,\n                value: i + 1\n            };\n            tmp.push(pageNumber);\n        }\n        return tmp;\n    }, [localizeActual, totalPagesActual]);\n\n    useEffect(() => {\n        if (!controlled) return;\n        setCurrentPageActual(currentPage);\n    }, [controlled, currentPage]);\n\n    useEffect(() => {\n        setDisablePrevPageActual(\n            disabled || disablePreviousPage || currentPageActual === 1\n        );\n    }, [currentPageActual, disablePreviousPage, disabled]);\n\n    useEffect(() => {\n        setTotalPagesActual(\n            totalPages || Math.ceil(totalItems / selectedItemPerPage)\n        );\n    }, [controlled, selectedItemPerPage, totalItems, totalPages]);\n\n    useEffect(() => {\n        if (controlled) return;\n        setCurrentPageActual(totalItems > 0 ? 1 : 0);\n    }, [controlled, totalItems]);\n\n    useEffect(() => {\n        setDisableNextPageActual(\n            disabled ||\n                disableNextPage ||\n                currentPageActual === totalPagesActual\n        );\n    }, [currentPageActual, disableNextPage, disabled, totalPagesActual]);\n\n    // sets the default selected page when using the `initialPage` prop on mount\n    useEffect(() => {\n        if (controlled) return;\n        const numPages = Math.ceil(totalItems / selectedItemPerPage);\n        if (initialPage) {\n            const currentPageWarning =\n                'Prop \"initialPage\" value is invalid and defaulted to page 1. Use a value between 1 and the last page number.';\n            if (initialPage > 0 && initialPage <= numPages) {\n                setCurrentPageActual(initialPage);\n            } else {\n                edsWarning(currentPageWarning);\n            }\n        }\n    }, [\n        controlled,\n        setCurrentPageActual,\n        initialPage,\n        selectedItemPerPage,\n        totalItems\n    ]);\n\n    useEffect(() => {\n        const beginningItem =\n            selectedItemPerPage * currentPageActual - (selectedItemPerPage - 1);\n\n        let endingItem = selectedItemPerPage * currentPageActual;\n\n        endingItem = endingItem > totalItems ? totalItems : endingItem;\n\n        setDisplayItemOf(\n            totalItems === 0\n                ? `0-0 ${localizeActual('of')} 0`\n                : `${beginningItem} - ${endingItem} ${localizeActual(\n                      'of'\n                  )} ${totalItems}`\n        );\n    }, [currentPageActual, localizeActual, selectedItemPerPage, totalItems]);\n\n    useEffect(() => {\n        if (!itemsPerPage) return;\n        const itemsPerPageWarning =\n            'Item per page value does not exist in item per page array. Defaulted to index 0 of \"itemsPerPageOptions\" array.';\n        if (!itemsPerPageOptions.some(item => item === itemsPerPage)) {\n            edsWarning(itemsPerPageWarning);\n            setSelectedItemPerPage(itemsPerPageOptions[0]);\n        } else {\n            setSelectedItemPerPage(itemsPerPage);\n        }\n    }, [itemsPerPage, itemsPerPageOptions]);\n\n    const handleItemsPerPageChange = useCallback(\n        newItemsPerPage => {\n            onItemsPerPageChange?.(Number(newItemsPerPage), totalPagesActual);\n            onPageChange?.(1);\n\n            if (controlled) return;\n            setSelectedItemPerPage(Number(newItemsPerPage));\n            setCurrentPageActual(1);\n        },\n        [controlled, onItemsPerPageChange, onPageChange, totalPagesActual]\n    );\n\n    const handlePageChange = useCallback(\n        nextPage => {\n            if (nextPage === 1) onFirstPage?.();\n            if (nextPage === totalPagesActual) onLastPage?.();\n            onPageChange?.(nextPage);\n\n            if (controlled) return;\n\n            setCurrentPageActual(nextPage);\n        },\n        [onFirstPage, totalPagesActual, onLastPage, onPageChange, controlled]\n    );\n\n    const handleListNavigation = useCallback(\n        newPage => handlePageChange(newPage.value),\n        [handlePageChange]\n    );\n\n    const handleFirstPage = useCallback(() => {\n        onFirstPage?.();\n        onPageChange?.(1);\n\n        if (controlled) return;\n\n        setCurrentPageActual(1);\n    }, [controlled, setCurrentPageActual, onFirstPage, onPageChange]);\n\n    const handlePreviousPage = useCallback(() => {\n        const newPage = currentPageActual === 1 ? 1 : currentPageActual - 1;\n        onPreviousPage?.(newPage);\n        onPageChange?.(newPage);\n\n        if (controlled) return;\n\n        setCurrentPageActual(newPage);\n    }, [\n        controlled,\n        currentPageActual,\n        setCurrentPageActual,\n        onPageChange,\n        onPreviousPage\n    ]);\n\n    const handleNextPage = useCallback(() => {\n        const newPage =\n            currentPageActual === totalPagesActual\n                ? totalPagesActual\n                : currentPageActual + 1;\n\n        onNextPage?.(newPage);\n        onPageChange?.(newPage);\n\n        if (controlled) return;\n\n        setCurrentPageActual(newPage);\n    }, [\n        currentPageActual,\n        totalPagesActual,\n        onNextPage,\n        controlled,\n        setCurrentPageActual,\n        onPageChange\n    ]);\n\n    const handleLastPage = useCallback(() => {\n        onLastPage?.();\n        onPageChange?.(totalPagesActual);\n\n        if (controlled) return;\n\n        setCurrentPageActual(totalPagesActual);\n    }, [\n        onLastPage,\n        controlled,\n        setCurrentPageActual,\n        totalPagesActual,\n        onPageChange\n    ]);\n\n    const showDirectNavigationButtons =\n        directNavigation &&\n        totalPagesActual <= directNavigationThreshold &&\n        totalPagesActual > 1;\n    const showDirectNavigationList =\n        directNavigation &&\n        totalPagesActual > directNavigationThreshold &&\n        totalPagesActual > 1;\n\n    const listOfPages =\n        showDirectNavigationButtons || showDirectNavigationList\n            ? getListOfPages()\n            : [];\n\n    return (\n        <div\n            className={clsx(\n                'lmnt',\n                'lmnt-pagination',\n                'mdc-data-table__pagination',\n                className\n            )}\n            id={idActual}\n            {...customProps}\n        >\n            <div className='mdc-data-table__pagination-trailing'>\n                {!hideRowsPerPage && (\n                    <div className='mdc-data-table__pagination-rows-per-page'>\n                        <div className='mdc-data-table__pagination-rows-per-page-label'>\n                            {`${localizeActual('Rows per page')}:`}\n                        </div>\n                        <div className='lmnt-data-table__pagination-select'>\n                            <Select\n                                value={selectedItemPerPage}\n                                onChange={handleItemsPerPageChange}\n                                variant='outlined'\n                                options={itemsPerPageOptions}\n                                className='mdc-select--no-label mdc-data-table__pagination-rows-per-page-select'\n                                disabled={disabled}\n                                dense\n                            />\n                        </div>\n                    </div>\n                )}\n                <div className='mdc-data-table__pagination-navigation'>\n                    <div className='mdc-data-table__pagination-total'>\n                        {displayItemOf}\n                    </div>\n\n                    {showDirectNavigationButtons &&\n                        listOfPages.map(page => {\n                            const { value } = page;\n                            return (\n                                <div key={value}>\n                                    <button\n                                        type='button'\n                                        className={clsx(\n                                            'lmnt-pagination--number',\n                                            value === currentPageActual &&\n                                                'lmnt-pagination-number--selected'\n                                        )}\n                                        onClick={() => handlePageChange(value)}\n                                    >\n                                        {value}\n                                    </button>\n                                </div>\n                            );\n                        })}\n\n                    {showDirectNavigationList && (\n                        <Select\n                            value={currentPageActual}\n                            variant='outlined'\n                            options={listOfPages}\n                            dense\n                            style={{ width: getSelectWidth() }}\n                            onChange={handleListNavigation}\n                        />\n                    )}\n                    {!hideFirstLast && (\n                        <IconButton\n                            className='mdc-data-table__pagination-button'\n                            data-first-page='true'\n                            disabled={disablePrevPageActual}\n                            onClick={handleFirstPage}\n                        >\n                            <Icon icon='first_page' />\n                        </IconButton>\n                    )}\n                    {!hideNextPrev && (\n                        <IconButton\n                            className='mdc-data-table__pagination-button'\n                            data-prev-page='true'\n                            disabled={disablePrevPageActual}\n                            onClick={handlePreviousPage}\n                        >\n                            <Icon icon='chevron_left' />\n                        </IconButton>\n                    )}\n                    {!hideNextPrev && (\n                        <IconButton\n                            className='mdc-data-table__pagination-button'\n                            data-next-page='true'\n                            disabled={disableNextPageActual}\n                            onClick={handleNextPage}\n                        >\n                            <Icon icon='chevron_right' />\n                        </IconButton>\n                    )}\n                    {!hideFirstLast && (\n                        <IconButton\n                            className='mdc-data-table__pagination-button'\n                            data-last-page='true'\n                            disabled={disableNextPageActual}\n                            onClick={handleLastPage}\n                        >\n                            <Icon icon='last_page' />\n                        </IconButton>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n});\n\nPagination.displayName = 'Pagination';\nPagination.propTypes = PaginationPropTypes;\nPagination.defaultProps = PaginationDefaultProps;\n\nexport default Pagination;\n"],"names":["PaginationPropTypes","controlled","PropTypes","bool","currentPage","number","directNavigation","directNavigationThreshold","disableNextPage","disablePreviousPage","disabled","hideFirstLast","hideNextPrev","hideRowsPerPage","id","string","initialPage","itemsPerPage","itemsPerPageOptions","arrayOf","localize","func","onFirstPage","onItemsPerPageChange","onLastPage","onNextPage","onPageChange","onPreviousPage","totalItems","totalPages","PaginationDefaultProps","undefined","Pagination","forwardRef","props","externalRef","getItemsPerPageFallback","length","className","customProps","ref","useRef","useImperativeHandle","current","idActual","useState","edsRandomId","totalPagesActual","setTotalPagesActual","disableNextPageActual","setDisableNextPageActual","disablePrevPageActual","setDisablePrevPageActual","currentPageActual","setCurrentPageActual","displayItemOf","setDisplayItemOf","selectedItemPerPage","setSelectedItemPerPage","localizeActual","useMemo","str","getSelectWidth","_localizeActual","len","offset","getListOfPages","useCallback","tmp","i","pageNumber","text","value","push","useEffect","Math","ceil","numPages","currentPageWarning","edsWarning","beginningItem","endingItem","itemsPerPageWarning","some","item","handleItemsPerPageChange","newItemsPerPage","Number","handlePageChange","nextPage","handleListNavigation","newPage","handleFirstPage","handlePreviousPage","handleNextPage","handleLastPage","showDirectNavigationButtons","showDirectNavigationList","listOfPages","React","createElement","_extends","clsx","Select","onChange","variant","options","dense","map","page","key","type","onClick","style","width","IconButton","Icon","icon","displayName","propTypes","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,MAAMA,mBAAmB,GAAG;AACjC;AACF;AACA;AACA;AACA;EACEC,UAAU,EAAEC,6BAAS,CAACC,IAAI;AAC1B;AACF;AACA;AACA;AACA;EACEC,WAAW,EAAEF,6BAAS,CAACG,MAAM;AAC7B;AACF;AACA;AACA;AACA;EACEC,gBAAgB,EAAEJ,6BAAS,CAACC,IAAI;AAChC;AACF;AACA;AACA;AACA;EACEI,yBAAyB,EAAEL,6BAAS,CAACG,MAAM;AAC3C;AACF;AACA;AACA;AACA;EACEG,eAAe,EAAEN,6BAAS,CAACC,IAAI;AAC/B;AACF;AACA;AACA;AACA;EACEM,mBAAmB,EAAEP,6BAAS,CAACC,IAAI;AACnC;AACF;AACA;AACA;AACA;EACEO,QAAQ,EAAER,6BAAS,CAACC,IAAI;AACxB;AACF;AACA;AACA;AACA;EACEQ,aAAa,EAAET,6BAAS,CAACC,IAAI;AAC7B;AACF;AACA;AACA;AACA;EACES,YAAY,EAAEV,6BAAS,CAACC,IAAI;AAC5B;AACF;AACA;AACA;AACA;EACEU,eAAe,EAAEX,6BAAS,CAACC,IAAI;AAC/B;AACF;AACA;AACA;AACA;EACEW,EAAE,EAAEZ,6BAAS,CAACa,MAAM;AACpB;AACF;AACA;AACA;AACA;EACEC,WAAW,EAAEd,6BAAS,CAACG,MAAM;AAC7B;AACF;AACA;AACA;AACA;EACEY,YAAY,EAAEf,6BAAS,CAACG,MAAM;AAC9B;AACF;AACA;AACA;AACA;EACEa,mBAAmB,EAAEhB,6BAAS,CAACiB,OAAO,CAACjB,6BAAS,CAACG,MAAM,CAAC;AACxD;AACF;AACA;AACA;AACA;EACEe,QAAQ,EAAElB,6BAAS,CAACmB,IAAI;AACxB;AACF;AACA;AACA;AACA;EACEC,WAAW,EAAEpB,6BAAS,CAACmB,IAAI;AAC3B;AACF;AACA;AACA;AACA;EACEE,oBAAoB,EAAErB,6BAAS,CAACmB,IAAI;AACpC;AACF;AACA;AACA;AACA;EACEG,UAAU,EAAEtB,6BAAS,CAAC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"}