#!/usr/bin/env bash

printf 'Usage: release <command> <flags>\n\n'

printf 'where <command> is one of:\n'
printf '  bootstrap, build, cerebro, changelog, checkout-source,'
printf '  create-branch, create-prs, create-version, docs, init, '
printf '  h, help, init, lerna, preid, publish, scripts-path,\n'
printf '  shared, sync, tag-name, tag, tests, themes,\n'
printf '  v, version-type\n\n'

printf 'The most common usage is via package.json scripts:\n'
printf '  npm run release-patch\n'
printf '  npm run release-minor\n'
printf '  npm run release-major\n'
printf '  npm run release-prepatch\n'
printf '  npm run release-preminor\n'
printf '  npm run release-premajor\n'
printf '  npm run release-prerelease\n\n'

printf 'Additional arguments may be used with the -- flag:\n'
printf '  npm run release-patch -- --preid beta\n'

printf 'Commands:\n'
printf '  --bootstrap:        run the bootstrap command (slow)\n'
printf '  --build:            run the build command\n'
printf '  --cerebro:          update element/cerebro dependency\n'
printf '  --changelog:        update the changelog (--lerna always runs changelog)\n'
printf '  --checkout-source:  checkout and pull latest from source branch (dev by default)\n'
printf '  --create-branch:    create a new branch\n'
printf '  --create-prs:       create gh prs\n'
printf '  --create-version:   create a new version\n'
printf '  --docs:             run cerebro docs\n'
printf '  --init:             run the init command (slow)\n'
printf '  --lerna:            use lerna instead of npm commands\n'
printf '  --preid:            specify the pre-id (alpha, beta, etc)\n'
printf '  --publish:          run lerna or npm publish\n'
printf '  --scripts-path:     override default path to this script\n'
printf '  --shared:           update element/shared dependency\n'
printf '  --sync:             run package sync\n'
printf '  --tag-name:         override default (latest) when running tag script\n'
printf '  --tag:              run tag script\n'
printf '  --tests:            run unit tests\n'
printf '  --themes:           update element/themes dependency\n'
printf '  -h|--help:          print this help document\n'
printf '  -v|-version-type:   semvar type (patch, minor, major, etc)\n\n'
