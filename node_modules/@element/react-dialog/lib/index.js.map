{"version":3,"file":"index.js","sources":["../generated/propTypes.js","../Dialog.js","../DialogAction.js","../DialogButton.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { deprecatedProp, deprecatedOneOf } from \"@element/react-common\";\n\n/**\n *\n * This file is automatically generated by the Element\n * documentation system. Any modifications to this file\n * will be overwritten!\n *\n */\n\nexport const DialogPropTypes = {\n  /**\n   * Button for the approving action of the dialog. When pressed, the dialog will close.\n   *\n   * Defaults to **null**.\n   */\n  acceptButton: PropTypes.node,\n  /**\n   * slot/element for adding action buttons\n   *\n   * Defaults to **null**.\n   */\n  actions: PropTypes.node,\n  /**\n   * Button for the cancel/close action of the dialog. When pressed, the dialog will close.\n   *\n   * Defaults to **null**.\n   */\n  cancelButton: PropTypes.node,\n  /**\n   * The css class name to be passed through to the component markup.\n   *\n   * Defaults to **undefined**.\n   */\n  className: PropTypes.string,\n  /**\n   * Primary content of the dialog. Optional, children may be used instead.\n   *\n   * Defaults to **null**.\n   */\n  content: PropTypes.node,\n  /**\n   * Custom id for the content container. If one is not specified a random id will be generated.\n   *\n   * Defaults to **empty string**.\n   */\n  contentId: PropTypes.string,\n  /**\n   * Title information displayed at the top of the dialog.\n   *\n   * Defaults to **null**.\n   */\n  header: PropTypes.node,\n  /**\n   * Custom id for the header container. If one is not specified a random id will be generated.\n   *\n   * Defaults to **empty string**.\n   */\n  headerId: PropTypes.string,\n  /**\n   * Fired only when the closing action was triggered via dialog interaction.\n   *\n   * Defaults to **null**.\n   */\n  onAction: PropTypes.func,\n  /**\n   * Fired when the Dialog finishes its closing animation. Where `action` is the action which closed the dialog.\n   *\n   * Defaults to **null**.\n   */\n  onClosed: PropTypes.func,\n  /**\n   * Fired when the dialog begins its closing animation. action represents the action which closed the dialog.\n   *\n   * Defaults to **null**.\n   */\n  onClosing: PropTypes.func,\n  /**\n   * Fired when the dialog finishes its opening animation.\n   *\n   * Defaults to **null**.\n   */\n  onOpened: PropTypes.func,\n  /**\n   * Fired when the dialog begins its opening animation.\n   *\n   * Defaults to **null**.\n   */\n  onOpening: PropTypes.func,\n  /**\n   * If true, the dialog will be visible on screen.\n   *\n   * Defaults to **false**.\n   */\n  open: PropTypes.bool,\n  /**\n   * Prevents the user from closing the dialog by hitting escape or clicking the scrim.\n   *\n   * Defaults to **false**.\n   */\n  preventClose: PropTypes.bool,\n  /**\n   * DOM selector to provide a target to return focus. Accepts any valid _query_ (see mdn docs for Element.querySelector). If omitted focus will return to the last focused element upon closing.\n   *\n   * Defaults to **null**.\n   */\n  returnFocusSelector: PropTypes.string,\n  /**\n   * If true, the cancel button will be rendered beneath the accept button instead of side-by-side. Stacking of buttons happens automatically in cases where the button text is too long for all buttons to fit on a single line. Setting this prop to true is only required if you want to override this behavior.\n   *\n   * Defaults to **false**.\n   */\n  stackedButtons: PropTypes.bool,\n};\n\nexport const DialogDefaultProps = {\n  acceptButton: null,\n  actions: null,\n  cancelButton: null,\n  className: undefined,\n  content: null,\n  contentId: \"\",\n  header: null,\n  headerId: \"\",\n  open: false,\n  preventClose: false,\n  returnFocusSelector: null,\n  stackedButtons: false,\n};\n\n/**\n *\n * This file is automatically generated by the Element\n * documentation system. Any modifications to this file\n * will be overwritten!\n *\n */\n\nexport const DialogActionPropTypes = {\n  /**\n   * Dialog action\n   *\n   * Defaults to **empty string**.\n   */\n  action: PropTypes.string,\n  /**\n   * children\n   *\n   * Defaults to **null**.\n   */\n  children: PropTypes.node,\n  /**\n   * Focus element on dialog upon open\n   *\n   * Defaults to **null**.\n   */\n  focused: PropTypes.bool,\n  /**\n   * Base component that will be rendered\n   *\n   * Defaults to **'div'**.\n   */\n  tag: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.elementType,\n    PropTypes.instanceOf(React.Component),\n  ]).isRequired,\n};\n\nexport const DialogActionDefaultProps = {\n  action: \"\",\n  children: null,\n  focused: null,\n  tag: \"div\",\n};\n\n/**\n *\n * This file is automatically generated by the Element\n * documentation system. Any modifications to this file\n * will be overwritten!\n *\n */\n\nexport const DialogButtonPropTypes = {\n  /**\n   * @deprecated _Use `themeColor='secondary'` instead._\n   *\n   * Preview feature, this may change. Apply alternative button color scheme (defined by the individual theme).\n   *\n   * Defaults to **undefined**.\n   */\n  altColor: deprecatedProp(\n    PropTypes.bool,\n    \"DialogButton\",\n    'Use `themeColor=\"secondary\"` instead.'\n  ),\n  /**\n   * One of 'xsmall', 'small', 'medium', 'large' and 'xlarge' will change the size of the button. Defaults according to your theme.\n   *\n   * Defaults to **'themeDefault'**.\n   */\n  buttonSize: PropTypes.oneOf([\n    \"xsmall\",\n    \"small\",\n    \"medium\",\n    \"large\",\n    \"xlarge\",\n    \"themeDefault\",\n  ]),\n  /**\n   * Content to be rendered inside the button. Can be used instead `label` of to provide more flexibility. Accepts any valid markup. _Warning, if Label is set, it will be used instead of child content._\n   *\n   * Defaults to **null**.\n   */\n  children: PropTypes.node,\n  /**\n   * The css class name to be passed through to the component markup.\n   *\n   * Defaults to **undefined**.\n   */\n  className: PropTypes.string,\n  /**\n   * @deprecated _forwardRef has been implemented for Button._\n   *\n   * Reference to the DOM button. This enables a greater level of integration.\n   *\n   * Defaults to **undefined**.\n   */\n  customRef: deprecatedProp(\n    PropTypes.oneOfType([\n      PropTypes.func,\n      // eslint-disable-next-line react/forbid-prop-types\n      PropTypes.shape({ current: PropTypes.any }),\n    ]),\n    \"DialogButton\",\n    \"forwardRef has been implemented for Button.\"\n  ),\n  /**\n   * @deprecated _Use `variant='danger'` instead._\n   *\n   * Apply danger style to the button.\n   *\n   * Defaults to **undefined**.\n   */\n  danger: deprecatedProp(\n    PropTypes.bool,\n    \"DialogButton\",\n    'Use `variant=\"danger\"` instead.'\n  ),\n  /**\n   * Prevent the user from interacting with the component.\n   *\n   * Defaults to **false**.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Sets elevation of the button. Default will be the theme default.\n   *\n   * Defaults to **'default'**.\n   */\n  elevation: PropTypes.oneOf([\"default\", \"elevated\", \"flat\"]),\n  /**\n   * @deprecated _Use `variant='filled'` instead._\n   *\n   * Apply a filled-in style. Previously called `primary`.\n   *\n   * Defaults to **undefined**.\n   */\n  filled: deprecatedProp(\n    PropTypes.bool,\n    \"DialogButton\",\n    'Use `variant=\"filled\"` instead.'\n  ),\n  /**\n   * Applies a full-width style where the textfield will fill it's container.\n   *\n   * Defaults to **false**.\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The button will render as an anchor tag. If the tag prop is set, that prop will take precedence.\n   *\n   * Defaults to **null**.\n   */\n  href: PropTypes.string,\n  /**\n   * The displayed text. Expects a valid string. If label and children are both set, label will take priority.\n   *\n   * Defaults to **null**.\n   */\n  label: PropTypes.string,\n  /**\n   * Adds the given Icon to the left of the button text. May not be used with `trailingIcon` - if `leadingIcon` and `trailingIcon` are both set, `leadingIcon` will take priority. Expects the name of a valid Material.io icon, however an icon component may be passed in instead for more control,\n   *\n   * Defaults to **undefined**.\n   */\n  leadingIcon: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.node,\n  ]),\n  /**\n   * The primary interaction event for button.\n   *\n   * Defaults to **null**.\n   */\n  onClick: PropTypes.func,\n  /**\n   * @deprecated _Use `variant='outlined'`._\n   *\n   * Apply outlined style to the button. Previously called `secondary`.\n   *\n   * Defaults to **undefined**.\n   */\n  outlined: deprecatedProp(\n    PropTypes.bool,\n    \"DialogButton\",\n    'Use `variant=\"outlined\"`.'\n  ),\n  /**\n   * @deprecated _Use `variant='filled'` instead._\n   *\n   * Apply primary style to the Button.\n   *\n   * Defaults to **undefined**.\n   */\n  primary: deprecatedProp(\n    PropTypes.bool,\n    \"DialogButton\",\n    'Use `variant=\"filled\"` instead.'\n  ),\n  /**\n   * @deprecated _Use `'variant=outlined'` instead._\n   *\n   * Apply secondary style to the Button.\n   *\n   * Defaults to **undefined**.\n   */\n  secondary: deprecatedProp(\n    PropTypes.bool,\n    \"DialogButton\",\n    'Use `\"variant=outlined\"` instead.'\n  ),\n  /**\n   * By default a button or anchor tag will be rendered, this allows another tag/component to be used instead. A block type element/component is suggested.\n   *\n   * Defaults to **null**.\n   */\n  tag: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.elementType,\n    PropTypes.instanceOf(React.Component),\n  ]),\n  /**\n   * @deprecated _Use `variant='embedded'` instead._\n   *\n   * Apply tertiary style to the Button.\n   *\n   * Defaults to **undefined**.\n   */\n  tertiary: deprecatedProp(\n    PropTypes.bool,\n    \"DialogButton\",\n    'Use `variant=\"embedded\"` instead.'\n  ),\n  /**\n   * @deprecated _Use `variant='text'` instead._\n   *\n   * Apply unfilled, un-outlined style to the Button. Previously called `tertiary`.\n   *\n   * Defaults to **undefined**.\n   */\n  text: deprecatedProp(\n    PropTypes.bool,\n    \"DialogButton\",\n    'Use `variant=\"text\"` instead.'\n  ),\n  /**\n   * Sets the theme color for the button. Most commonly used when the control is placed on a darker surface.\n   *\n   * Defaults to **'primary'**.\n   */\n  themeColor: deprecatedOneOf(\n    PropTypes.oneOf([\n      \"primary\",\n      \"secondary\",\n      \"on-unknown-black\",\n      \"on-unknown-white\",\n      \"on-primary\",\n      \"on-secondary\",\n      \"on-success\",\n      \"on-danger\",\n    ]),\n    [\"onUnknownBlack\", \"onUnknownWhite\"],\n    \"DialogButton\",\n    \"Please use one of 'primary','secondary','on-unknown-black','on-unknown-white','on-primary','on-secondary','on-success','on-danger'.\"\n  ),\n  /**\n   * Adds the given Icon to the right of the button text. May not be used with `leadingIcon` - if `leadingIcon` and `trailingIcon` are both set, `leadingIcon` will take priority. Expects the name of a valid Material.io icon, however an icon component may be passed in instead for more control.\n   *\n   * Defaults to **undefined**.\n   */\n  trailingIcon: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.node,\n  ]),\n  /**\n   * This applies the html button type (button, submit, reset) or the anchor media type when used with the href property.\n   *\n   * Defaults to **'button'**.\n   */\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\n  /**\n   * @deprecated _Use `elevation='flat' instead._\n   *\n   * Remove elevation.\n   *\n   * Defaults to **undefined**.\n   */\n  unelevated: deprecatedProp(\n    PropTypes.bool,\n    \"DialogButton\",\n    'Use `elevation=\"flat\" instead.'\n  ),\n  /**\n   * Applies the selected style to the button. `rounded-small` and `rounded-micro` are only available on select themes.\n   *\n   * Defaults to **'filled'**.\n   */\n  variant: PropTypes.oneOf([\n    \"filled\",\n    \"outlined\",\n    \"danger\",\n    \"text\",\n    \"rounded-small\",\n    \"rounded-micro\",\n  ]),\n};\n\nexport const DialogButtonDefaultProps = {\n  altColor: undefined,\n  buttonSize: \"themeDefault\",\n  children: null,\n  className: undefined,\n  customRef: undefined,\n  danger: undefined,\n  disabled: false,\n  elevation: \"default\",\n  filled: undefined,\n  fullWidth: false,\n  href: null,\n  label: null,\n  leadingIcon: undefined,\n  outlined: undefined,\n  primary: undefined,\n  secondary: undefined,\n  tag: null,\n  tertiary: undefined,\n  text: undefined,\n  themeColor: \"primary\",\n  trailingIcon: undefined,\n  type: \"button\",\n  unelevated: undefined,\n  variant: \"filled\",\n};\n","/* eslint-disable consistent-return */\nimport React, {\n    useEffect,\n    useState,\n    useMemo,\n    useCallback,\n    forwardRef,\n    useImperativeHandle,\n    useRef\n} from 'react';\nimport { MDCDialog } from '@material/dialog';\nimport clsx from 'clsx';\nimport { edsRandomId, returnFocusAfterClosing } from '@element/react-common';\nimport capitalize from 'lodash/capitalize';\nimport omitBy from 'lodash/omitBy';\nimport { useEvent } from 'react-use';\nimport { DialogPropTypes, DialogDefaultProps } from './generated/propTypes';\n\nconst Dialog = forwardRef((props, externalRef) => {\n    const {\n        acceptButton,\n        actions,\n        cancelButton,\n        children,\n        className,\n        content,\n        contentId,\n        header,\n        headerId,\n        onAction,\n        onClosed,\n        onClosing,\n        onOpened,\n        onOpening,\n        open,\n        preventClose,\n        returnFocusSelector,\n        scrollable,\n        stackedButtons,\n        ...customProps\n    } = props;\n\n    const filteredCustomProps = useMemo(\n        () => omitBy(customProps, (value, key) => key.startsWith('onAction')),\n        [customProps]\n    );\n\n    const [dialogRef, setDialogRef] = useState();\n    const [mdcDialog, setMdcDialog] = useState();\n    const [computedHeaderId] = useState(() => headerId || edsRandomId());\n    const [computedContentId] = useState(() => contentId || edsRandomId());\n\n    const ref = useRef();\n    useImperativeHandle(externalRef, () => ref.current, []);\n\n    const hasActions = cancelButton || acceptButton || actions;\n\n    useEffect(() => {\n        if (!dialogRef) {\n            return;\n        }\n\n        const dialog = MDCDialog.attachTo(dialogRef);\n        setMdcDialog(dialog);\n\n        return () => {\n            dialog.destroy();\n        };\n    }, [dialogRef]);\n\n    useEffect(() => {\n        if (!mdcDialog) {\n            return;\n        }\n\n        let action = 'close';\n\n        if (preventClose) {\n            action = '';\n        }\n\n        mdcDialog.scrimClickAction = action;\n        mdcDialog.escapeKeyAction = action;\n    }, [mdcDialog, preventClose]);\n\n    const onClosedCallback = useCallback(\n        event => {\n            if (returnFocusSelector) {\n                returnFocusAfterClosing(returnFocusSelector);\n            }\n\n            if (onClosed) {\n                onClosed(event);\n            }\n\n            const eventDetail = event.detail;\n            const method =\n                customProps[`onAction${capitalize(eventDetail.action)}`];\n\n            if (method) {\n                method();\n            }\n\n            if (eventDetail.action !== 'close' && onAction) {\n                onAction(eventDetail);\n            }\n        },\n        [customProps, onAction, onClosed, returnFocusSelector]\n    );\n\n    useEvent('MDCDialog:closed', onClosedCallback, dialogRef);\n    useEvent('MDCDialog:closing', onClosing, dialogRef);\n    useEvent('MDCDialog:opening', onOpening, dialogRef);\n    useEvent('MDCDialog:opened', onOpened, dialogRef);\n\n    useEffect(() => {\n        if (open) {\n            mdcDialog?.open();\n        } else {\n            mdcDialog?.close();\n        }\n    }, [mdcDialog, open]);\n\n    const onKeyDown = useCallback(\n        event => {\n            if (event.key !== 'Enter' || hasActions) {\n                return;\n            }\n\n            // trigger a click event when user hits enter. For some reason material doesn't trigger an action on enter.\n            // This is used for dialogs in which there are no action buttons, clicking on the items should close the dialog\n            // TODO: look into removing this logic in the future if material fixes this\n            if (dialogRef.contains(document.activeElement)) {\n                document.activeElement.click();\n            }\n        },\n        [dialogRef, hasActions]\n    );\n\n    const dialogClasses = useMemo(\n        () =>\n            clsx(\n                'lmnt',\n                'lmnt-dialog',\n                'mdc-dialog',\n                stackedButtons && 'mdc-dialog--stacked',\n                className\n            ),\n        [className, stackedButtons]\n    );\n\n    return (\n        <div\n            className={dialogClasses}\n            ref={setDialogRef}\n            {...filteredCustomProps}\n        >\n            <div className='mdc-dialog__container container'>\n                <div\n                    className='mdc-dialog__surface'\n                    role='alertdialog'\n                    aria-modal='true'\n                    aria-labelledby={computedHeaderId}\n                    aria-describedby={computedContentId}\n                >\n                    {header && (\n                        <div\n                            className='mdc-dialog__title'\n                            id={computedHeaderId}\n                        >\n                            {header}\n                        </div>\n                    )}\n                    <div\n                        className='mdc-dialog__content'\n                        id={computedContentId}\n                        onKeyDown={onKeyDown}\n                        role='presentation'\n                    >\n                        {content || children}\n                    </div>\n                    {hasActions && (\n                        <div className='mdc-dialog__actions'>\n                            {actions}\n                            {cancelButton}\n                            {acceptButton}\n                        </div>\n                    )}\n                </div>\n            </div>\n            <div className='mdc-dialog__scrim' />\n        </div>\n    );\n});\n\nDialog.displayName = 'Dialog';\nDialog.propTypes = DialogPropTypes;\nDialog.defaultProps = DialogDefaultProps;\n\nexport default React.memo(Dialog);\n","import React, { forwardRef } from 'react';\nimport {\n    DialogActionPropTypes,\n    DialogActionDefaultProps\n} from './generated/propTypes';\n\n// eslint-disable-next-line no-undef\nconst DialogAction = forwardRef((props, externalRef) => {\n    const { action, focused, tag: Tag, children, ...customProps } = props;\n\n    return (\n        <Tag\n            ref={externalRef}\n            data-mdc-dialog-action={action}\n            data-mdc-dialog-initial-focus={focused}\n            {...customProps}\n        >\n            {children}\n        </Tag>\n    );\n});\n\nDialogAction.displayName = 'DialogAction';\nDialogAction.propTypes = DialogActionPropTypes;\nDialogAction.defaultProps = DialogActionDefaultProps;\n\nexport default React.memo(DialogAction);\n","import React, { forwardRef } from 'react';\nimport { Button } from '@element/react-button';\nimport clsx from 'clsx';\nimport DialogAction from './DialogAction';\n\nimport {\n    DialogButtonPropTypes,\n    DialogButtonDefaultProps\n} from './generated/propTypes';\n\nconst DialogButton = forwardRef((props, externalRef) => {\n    const { children, tag, className, ...customProps } = props;\n\n    return (\n        <DialogAction\n            ref={externalRef}\n            tag={tag || Button}\n            className={clsx('mdc-dialog__button', className)}\n            {...customProps}\n        >\n            {children}\n        </DialogAction>\n    );\n});\n\nDialogButton.displayName = 'DialogButton';\nDialogButton.propTypes = DialogButtonPropTypes;\nDialogButton.defaultProps = DialogButtonDefaultProps;\n\nexport default React.memo(DialogButton);\n"],"names":["DialogPropTypes","acceptButton","PropTypes","node","actions","cancelButton","className","string","content","contentId","header","headerId","onAction","func","onClosed","onClosing","onOpened","onOpening","open","bool","preventClose","returnFocusSelector","stackedButtons","DialogDefaultProps","undefined","DialogActionPropTypes","action","children","focused","tag","oneOfType","elementType","instanceOf","React","Component","isRequired","DialogActionDefaultProps","DialogButtonPropTypes","altColor","deprecatedProp","buttonSize","oneOf","customRef","shape","current","any","danger","disabled","elevation","filled","fullWidth","href","label","leadingIcon","onClick","outlined","primary","secondary","tertiary","text","themeColor","deprecatedOneOf","trailingIcon","type","unelevated","variant","DialogButtonDefaultProps","Dialog","forwardRef","props","externalRef","scrollable","customProps","filteredCustomProps","useMemo","omitBy","value","key","startsWith","dialogRef","setDialogRef","useState","mdcDialog","setMdcDialog","computedHeaderId","edsRandomId","computedContentId","ref","useRef","useImperativeHandle","hasActions","useEffect","dialog","MDCDialog","attachTo","destroy","scrimClickAction","escapeKeyAction","onClosedCallback","useCallback","event","returnFocusAfterClosing","eventDetail","detail","method","capitalize","useEvent","close","onKeyDown","contains","document","activeElement","click","dialogClasses","clsx","createElement","_extends","role","id","displayName","propTypes","defaultProps","memo","DialogAction","Tag","DialogButton","Button"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,MAAMA,eAAe,GAAG;AAC7B;AACF;AACA;AACA;AACA;EACEC,YAAY,EAAEC,6BAAS,CAACC,IAAI;AAC5B;AACF;AACA;AACA;AACA;EACEC,OAAO,EAAEF,6BAAS,CAACC,IAAI;AACvB;AACF;AACA;AACA;AACA;EACEE,YAAY,EAAEH,6BAAS,CAACC,IAAI;AAC5B;AACF;AACA;AACA;AACA;EACEG,SAAS,EAAEJ,6BAAS,CAACK,MAAM;AAC3B;AACF;AACA;AACA;AACA;EACEC,OAAO,EAAEN,6BAAS,CAACC,IAAI;AACvB;AACF;AACA;AACA;AACA;EACEM,SAAS,EAAEP,6BAAS,CAACK,MAAM;AAC3B;AACF;AACA;AACA;AACA;EACEG,MAAM,EAAER,6BAAS,CAACC,IAAI;AACtB;AACF;AACA;AACA;AACA;EACEQ,QAAQ,EAAET,6BAAS,CAACK,MAAM;AAC1B;AACF;AACA;AACA;AACA;EACEK,QAAQ,EAAEV,6BAAS,CAACW,IAAI;AACxB;AACF;AACA;AACA;AACA;EACEC,QAAQ,EAAEZ,6BAAS,CAACW,IAAI;AACxB;AACF;AACA;AACA;AACA;EACEE,SAAS,EAAEb,6BAAS,CAACW,IAAI;AACzB;AACF;AACA;AACA;AACA;EACEG,QAAQ,EAAEd,6BAAS,CAACW,IAAI;AACxB;AACF;AACA;AACA;AACA;EACEI,SAAS,EAAEf,6BAAS,CAACW,IAAI;AACzB;AACF;AACA;AACA;AACA;EACEK,IAAI,EAAEhB,6BAAS,CAACiB,IAAI;AACpB;AACF;AACA;AACA;AACA;EACEC,YAAY,EAAElB,6BAAS,CAACiB,IAAI;AAC5B;AACF;AACA;AACA;AACA;EACEE,mBAAmB,EAAEnB,6BAAS,CAACK,MAAM;AACrC;AACF;AACA;AACA;AACA;EACEe,cAAc,EAAEpB,6BAAS,CAACiB,IAAAA;AAC5B,CAAC,CAAA;AAEM,MAAMI,kBAAkB,GAAG;AAChCtB,EAAAA,YAAY,EAAE,IAAI;AAClBG,EAAAA,OAAO,EAA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A;AACA;AACA;AACA;AACA;EACE0C,QAAQ,EAAEhB,0BAAc,CACtBrC,6BAAS,CAACiB,IAAI,EACd,cAAc,EACd,2BAA2B,CAC5B;AACD;AACF;AACA;AACA;AACA;AACA;AACA;EACEqC,OAAO,EAAEjB,0BAAc,CACrBrC,6BAAS,CAACiB,IAAI,EACd,cAAc,EACd,iCAAiC,CAClC;AACD;AACF;AACA;AACA;AACA;AACA;AACA;EACEsC,SAAS,EAAElB,0BAAc,CACvBrC,6BAAS,CAACiB,IAAI,EACd,cAAc,EACd,mCAAmC,CACpC;AACD;AACF;AACA;AACA;AACA;EACEU,GAAG,EAAE3B,6BAAS,CAAC4B,SAAS,CAAC,CACvB5B,6BAAS,CAACK,MAAM,EAChBL,6BAAS,CAAC6B,WAAW,EACrB7B,6BAAS,CAAC8B,UAAU,CAACC,yBAAK,CAACC,SAAS,CAAC,CACtC,CAAC;AACF;AACF;AACA;AACA;AACA;AACA;AACA;EACEwB,QAAQ,EAAEnB,0BAAc,CACtBrC,6BAAS,CAACiB,IAAI,EACd,cAAc,EACd,mCAAmC,CACpC;AACD;AACF;AACA;AACA;AACA;AACA;AACA;EACEwC,IAAI,EAAEpB,0BAAc,CAClBrC,6BAAS,CAACiB,IAAI,EACd,cAAc,EACd,+BAA+B,CAChC;AACD;AACF;AACA;AACA;AACA;AACEyC,EAAAA,UAAU,EAAEC,2BAAe,CACzB3D,6BAAS,CAACuC,KAAK,CAAC,CACd,SAAS,EACT,WAAW,EACX,kBAAkB,EAClB,kBAAkB,EAClB,YAAY,EACZ,cAAc,EACd,YAAY,EACZ,WAAW,CACZ,CAAC,EACF,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,EACpC,cAAc,EACd,qIAAqI,CACtI;AACD;AACF;AACA;AACA;AACA;AACEqB,EAAAA,YAAY,EAAE5D,6BAAS,CAAC4B,SAAS,CAAC,CAChC5B,6BAAS,CAACK,MAAM,EAChBL,6BAAS,CAACW,IAAI,EACdX,6BAAS,CAACC,IAAI,CACf,CAAC;AACF;AACF;AACA;AACA;AACA;AACE4D,EAAAA,IAAI,EAAE7D,6BAAS,CAACuC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"}