import React from 'react';


export interface PaddingProps {
    /**
    * Content to be rendered inside the padding component. Accepts any valid markup.
    *
    * Defaults to **null**.
    */
    children: React.ReactNode;
    /**
    * The css class name to be passed through to the component markup.
    *
    * Defaults to **undefined**.
    */
    className?: string;
    /**
    * Adds a custom padding style to the child content. Must be a valid CSS padding declaration. i.e. 38px 30px
    *
    * Defaults to **null**.
    */
    customPadding?: string;
    /**
    * By default a div will be rendered, this allow another tag to be used instead. A block type component is suggested.
    *
    * Defaults to **'div'**.
    */
    tag?: string | React.ElementType;
    /**
    * Applies the specified padding amount. `dense` is 8px, `standard` is 16px, and `airy` is 24px. If `customPadding` is used, this will be ignored.
    *
    * Defaults to **'standard'**.
    */
    variant?: string;
}

/**
* Padding is used for adding consistent padding to layouts.
 * @prop {React.ReactNode} children - Content to be rendered inside the padding component. Accepts any valid markup. Defaults to _null_.
 * @prop {string} className - The css class name to be passed through to the component markup. Defaults to _undefined_.
 * @prop {string} customPadding - Adds a custom padding style to the child content. Must be a valid CSS padding declaration. i.e. 38px 30px Defaults to _null_.
 * @prop {string|React.ElementType} tag - By default a div will be rendered, this allow another tag to be used instead. A block type component is suggested. Defaults to _'div'_.
 * @prop {string} variant - Applies the specified padding amount. `dense` is 8px, `standard` is 16px, and `airy` is 24px. If `customPadding` is used, this will be ignored. Defaults to _'standard'_.
*/
export const Padding: React.FunctionComponent<PaddingProps | React.HTMLProps<HTMLElement> | React.DOMAttributes<HTMLElement>>;
