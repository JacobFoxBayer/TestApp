{"version":3,"file":"index.es.js","sources":["../generated/propTypes.js","../LinearProgress.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { deprecatedProp } from \"@element/react-common\";\n\n/**\n *\n * This file is automatically generated by the Element\n * documentation system. Any modifications to this file\n * will be overwritten!\n *\n */\n\nexport const LinearProgressPropTypes = {\n  /**\n   * Accessibility label.\n   *\n   * Defaults to **'Progress Indicator'**.\n   */\n  ariaLabel: PropTypes.string,\n  /**\n   * The buffer bar is a secondary bar to indicate the amount of buffered data (useful for video playback indicators). Buffer bar shows maximum width of linearProgress bar. Buffer is only used for determinate progress bar.\n   *\n   * Defaults to **1**.\n   */\n  buffer: PropTypes.number,\n  /**\n   * The css class name to be passed through to the component markup.\n   *\n   * Defaults to **undefined**.\n   */\n  className: PropTypes.string,\n  /**\n   * @deprecated _Use `variant='indeterminate'` instead._\n   *\n   * Toggles the component between the determinate (when a known percentage has been completed) and indeterminate state (a continuously animated indicator used when there is no known percentage of completion).\n   *\n   * Defaults to **undefined**.\n   */\n  indeterminate: deprecatedProp(\n    PropTypes.bool,\n    \"LinearProgress\",\n    'Use `variant=\"indeterminate\"` instead.'\n  ),\n  /**\n   * Puts the component in the open or closed state.\n   *\n   * Defaults to **true**.\n   */\n  open: PropTypes.bool,\n  /**\n   * The current progress of a determinate progress indicator. Must be between 0 and 1. Progress is only used for determinate progress bar.\n   *\n   * Defaults to **0**.\n   */\n  progress: PropTypes.number,\n  /**\n   * Reverses the direction of the linear progress indicator.\n   *\n   * Defaults to **false**.\n   */\n  reversed: PropTypes.bool,\n  /**\n   * Color of the indicator stroke with 'primary' or 'secondary' theme color.\n   *\n   * Defaults to **'primary'**.\n   */\n  themeColor: PropTypes.oneOf([\n    \"primary\",\n    \"secondary\",\n    \"primary-variant\",\n    \"secondary-variant\",\n  ]),\n  /**\n   * An indeterminate LinearProgress indicator will continue animating until closed. A determinate LinearProgress indicator will display the current progress.\n   *\n   * Defaults to **'indeterminate'**.\n   */\n  variant: PropTypes.oneOf([\"determinate\", \"indeterminate\"]),\n};\n\nexport const LinearProgressDefaultProps = {\n  ariaLabel: \"Progress Indicator\",\n  buffer: 1,\n  className: undefined,\n  indeterminate: undefined,\n  open: true,\n  progress: 0,\n  reversed: false,\n  themeColor: \"primary\",\n  variant: \"indeterminate\",\n};\n","import { MDCLinearProgress } from '@material/linear-progress';\nimport React, {\n    useEffect,\n    useRef,\n    forwardRef,\n    useImperativeHandle\n} from 'react';\nimport clsx from 'clsx';\nimport {\n    LinearProgressPropTypes,\n    LinearProgressDefaultProps\n} from './generated/propTypes';\n\nconst LinearProgress = forwardRef((props, externalRef) => {\n    const {\n        ariaLabel,\n        buffer,\n        className,\n        indeterminate,\n        open,\n        progress,\n        reversed,\n        themeColor,\n        variant,\n        ...customProps\n    } = props;\n\n    const rootRef = useRef();\n    const mdcLinearProgress = useRef();\n\n    useImperativeHandle(externalRef, () => rootRef.current, []);\n\n    useEffect(() => {\n        mdcLinearProgress.current = new MDCLinearProgress(rootRef.current);\n\n        return () => {\n            mdcLinearProgress.current.destroy();\n        };\n    }, [mdcLinearProgress]);\n\n    useEffect(() => {\n        mdcLinearProgress.current.buffer = buffer;\n    }, [mdcLinearProgress, buffer]);\n\n    // Added extra dependencies to avoid issue where animation stopped when open or themeColor changed\n    useEffect(() => {\n        mdcLinearProgress.current.determinate = variant === 'determinate';\n        mdcLinearProgress.current.progress = progress;\n    }, [variant, progress, themeColor, open]);\n\n    return (\n        <div\n            role='progressbar'\n            aria-label={ariaLabel}\n            aria-valuemin='0'\n            aria-valuemax='1'\n            aria-valuenow={progress}\n            ref={rootRef}\n            dir={reversed ? 'rtl' : undefined}\n            className={clsx(\n                className,\n                'lmnt',\n                'mdc-linear-progress',\n                !open && 'mdc-linear-progress--closed',\n                indeterminate ||\n                    (variant === 'indeterminate' &&\n                        'mdc-linear-progress--indeterminate'),\n                themeColor === 'primary' && 'lmnt-linear-progress--primary',\n                themeColor === 'primary-variant' &&\n                    'lmnt-linear-progress--primary-variant',\n                themeColor === 'secondary' && 'lmnt-linear-progress--secondary',\n                themeColor === 'secondary-variant' &&\n                    'lmnt-linear-progress--secondary-variant'\n            )}\n            {...customProps}\n        >\n            <div className='mdc-linear-progress__buffer'>\n                <div className='mdc-linear-progress__buffer-bar' />\n                <div className='mdc-linear-progress__buffer-dots' />\n            </div>\n            <div className='mdc-linear-progress__bar mdc-linear-progress__primary-bar'>\n                <span className='mdc-linear-progress__bar-inner' />\n            </div>\n            <div className='mdc-linear-progress__bar mdc-linear-progress__secondary-bar'>\n                <span className='mdc-linear-progress__bar-inner' />\n            </div>\n        </div>\n    );\n});\n\nLinearProgress.displayName = 'LinearProgress';\nLinearProgress.propTypes = LinearProgressPropTypes;\nLinearProgress.defaultProps = LinearProgressDefaultProps;\n\nexport default LinearProgress;\n"],"names":["LinearProgressPropTypes","ariaLabel","PropTypes","string","buffer","number","className","indeterminate","deprecatedProp","bool","open","progress","reversed","themeColor","oneOf","variant","LinearProgressDefaultProps","undefined","LinearProgress","forwardRef","props","externalRef","customProps","rootRef","useRef","mdcLinearProgress","useImperativeHandle","current","useEffect","MDCLinearProgress","destroy","determinate","React","createElement","_extends","role","ref","dir","clsx","displayName","propTypes","defaultProps"],"mappings":"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"}