import React from 'react';


export interface LinearProgressProps {
    /**
    * Accessibility label.
    *
    * Defaults to **'Progress Indicator'**.
    */
    ariaLabel?: string;
    /**
    * The buffer bar is a secondary bar to indicate the amount of buffered data (useful for video playback indicators). Buffer bar shows maximum width of linearProgress bar. Buffer is only used for determinate progress bar.
    *
    * Defaults to **1**.
    */
    buffer?: number;
    /**
    * The css class name to be passed through to the component markup.
    *
    * Defaults to **undefined**.
    */
    className?: string;
    /**
    * @deprecated _Use `variant='indeterminate'` instead._
    *
    * Toggles the component between the determinate (when a known percentage has been completed) and indeterminate state (a continuously animated indicator used when there is no known percentage of completion).
    *
    * Defaults to **undefined**.
    */
    indeterminate?: boolean;
    /**
    * Puts the component in the open or closed state.
    *
    * Defaults to **true**.
    */
    open?: boolean;
    /**
    * The current progress of a determinate progress indicator. Must be between 0 and 1. Progress is only used for determinate progress bar.
    *
    * Defaults to **0**.
    */
    progress?: number;
    /**
    * Reverses the direction of the linear progress indicator.
    *
    * Defaults to **false**.
    */
    reversed?: boolean;
    /**
    * Color of the indicator stroke with 'primary' or 'secondary' theme color.
    *
    * Defaults to **'primary'**.
    */
    themeColor?: string;
    /**
    * An indeterminate LinearProgress indicator will continue animating until closed. A determinate LinearProgress indicator will display the current progress.
    *
    * Defaults to **'indeterminate'**.
    */
    variant?: string;
}

/**
* Linear progress displays a specified or unspecified wait time as an animated line.
 * @prop {string} ariaLabel - Accessibility label. Defaults to _'Progress Indicator'_.
 * @prop {number} buffer - The buffer bar is a secondary bar to indicate the amount of buffered data (useful for video playback indicators). Buffer bar shows maximum width of linearProgress bar. Buffer is only used for determinate progress bar. Defaults to _1_.
 * @prop {string} className - The css class name to be passed through to the component markup. Defaults to _undefined_.
 * @prop {boolean} indeterminate - Deprecated: Use `variant='indeterminate'` instead. Toggles the component between the determinate (when a known percentage has been completed) and indeterminate state (a continuously animated indicator used when there is no known percentage of completion). Defaults to _undefined_.
 * @prop {boolean} open - Puts the component in the open or closed state. Defaults to _true_.
 * @prop {number} progress - The current progress of a determinate progress indicator. Must be between 0 and 1. Progress is only used for determinate progress bar. Defaults to _0_.
 * @prop {boolean} reversed - Reverses the direction of the linear progress indicator. Defaults to _false_.
 * @prop {string} themeColor - Color of the indicator stroke with 'primary' or 'secondary' theme color. Defaults to _'primary'_.
 * @prop {string} variant - An indeterminate LinearProgress indicator will continue animating until closed. A determinate LinearProgress indicator will display the current progress. Defaults to _'indeterminate'_.
*/
export const LinearProgress: React.FunctionComponent<LinearProgressProps | React.HTMLProps<HTMLElement> | React.DOMAttributes<HTMLElement>>;
