'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var ReactDOM = require('react-dom');
var reactCommon = require('@element/react-common');
var PropTypes = require('prop-types');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefault(React);
var ReactDOM__default = /*#__PURE__*/_interopDefault(ReactDOM);
var PropTypes__default = /*#__PURE__*/_interopDefault(PropTypes);

/**
 *
 * This file is automatically generated by the Element
 * documentation system. Any modifications to this file
 * will be overwritten!
 *
 */

const PortalPropTypes = {
  /**
   * Content to be rendered inside the portal.
   *
   * Defaults to **null**.
   */
  children: PropTypes__default["default"].node,
  /**
   * Disables the portal to rendering children in the natural flow of the DOM.
   *
   * Defaults to **false**.
   */
  disabled: PropTypes__default["default"].bool,
  /**
   * The DOM element the children will render in. If a string is sent it should be a valid DOM query selector. If one is not sent, Portal will default to `document.body`.
   *
   * Defaults to **'document.body'**.
   */
  portalContainer: PropTypes__default["default"].oneOfType([PropTypes__default["default"].string, PropTypes__default["default"].node])
};
const PortalDefaultProps = {
  children: null,
  disabled: false,
  portalContainer: "document.body"
};

const Portal = /*#__PURE__*/React.forwardRef((props, externalRef) => {
  const [containerState, setContainer] = React.useState(document.body);
  const {
    children,
    container,
    disabled
  } = props;
  const ref = React.useRef();
  React.useImperativeHandle(externalRef, () => ref.current, []);
  React.useEffect(() => {
    if (typeof container === 'string') {
      if (container === 'document.body') {
        setContainer(document.body);
      } else {
        const elem = reactCommon.edsQuerySelector(container);
        setContainer(elem || document.body);
      }
    } else {
      setContainer(container || document.body);
    }
  }, [container]);
  return (
    /*#__PURE__*/
    // eslint-disable-next-line react/jsx-no-useless-fragment
    React__default["default"].createElement(React__default["default"].Fragment, null, disabled ? children : /*#__PURE__*/ReactDOM__default["default"].createPortal(children, containerState))
  );
});
Portal.displayName = 'Portal';
Portal.propTypes = PortalPropTypes;
Portal.defaultProps = PortalDefaultProps;
var Portal$1 = /*#__PURE__*/React__default["default"].memo(Portal);

exports.Portal = Portal$1;
//# sourceMappingURL=index.js.map
