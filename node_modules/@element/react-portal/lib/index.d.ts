import React from 'react';


export interface PortalProps {
    /**
    * Content to be rendered inside the portal.
    *
    * Defaults to **null**.
    */
    children?: React.ReactNode;
    /**
    * Disables the portal to rendering children in the natural flow of the DOM.
    *
    * Defaults to **false**.
    */
    disabled?: boolean;
    /**
    * The DOM element the children will render in. If a string is sent it should be a valid DOM query selector. If one is not sent, Portal will default to `document.body`.
    *
    * Defaults to **'document.body'**.
    */
    portalContainer?: string | React.ReactNode;
}

/**
* Portal provides an easy way to render a child component outside of its parent component.
 * @prop {React.ReactNode} children - Content to be rendered inside the portal. Defaults to _null_.
 * @prop {boolean} disabled - Disables the portal to rendering children in the natural flow of the DOM. Defaults to _false_.
 * @prop {string|React.ReactNode} portalContainer - The DOM element the children will render in. If a string is sent it should be a valid DOM query selector. If one is not sent, Portal will default to `document.body`. Defaults to _'document.body'_.
*/
export const Portal: React.FunctionComponent<PortalProps | React.HTMLProps<HTMLElement> | React.DOMAttributes<HTMLElement>>;
