const {SSMClient, GetParametersCommand} = require('@aws-sdk/client-ssm')
const _ = require('lodash')

const withLeadingSlash = (name) => (name.startsWith('/') ? name : `/${name}`)

const getSSMParameters = async (names, region) => {
    const awsConfig = {}
    if (region) {
        awsConfig.region = region
    }
    const ssm = new SSMClient(awsConfig)
    const batches = await Promise.all(
        _.chain(names)
            .map((name) => withLeadingSlash(name))
            .chunk(10)
            .map((chunkOfNames) =>
                ssm.send(new GetParametersCommand({Names: chunkOfNames, WithDecryption: true}))
            )
            .value()
    )

    const invalid = _.chain(batches)
        .map((b) => b.InvalidParameters)
        .flatten()
        .compact()
        .value()

    if (invalid && invalid.length > 0) {
        throw new Error(`The following AWS param store paths are invalid: ${invalid.join(', ')}`)
    }

    return _.chain(batches)
        .map((b) => b.Parameters)
        .flatten()
        .sortBy((result) => result.Name)
        .zip(_.sortBy(names, (name) => withLeadingSlash(name)))
        .map(([{Value}, name]) => [name, Value])
        .fromPairs()
        .value()
}

module.exports = {getSSMParameters}
