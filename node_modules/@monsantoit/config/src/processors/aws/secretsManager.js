const {SecretsManagerClient, GetSecretValueCommand} = require('@aws-sdk/client-secrets-manager')
const _ = require('lodash')

const parseSecretUri = (uri) => {
    const uriComponents = uri.split(':')
    const [secretId, secretString, jsonKey, versionStage, versionId] = uriComponents
    return {
        secretId,
        secretString,
        jsonKey,
        versionStage,
        versionId
    }
}

const getSecretValues = async (uris, region) => {
    const awsConfig = {}
    if (region) {
        awsConfig.region = region
    }
    const secretsManager = new SecretsManagerClient(awsConfig)
    const batches = await Promise.all(
        _.chain(uris)
            .map(async (uri) => {
                const secretIdentifiers = parseSecretUri(uri)
                const params = {
                    SecretId: secretIdentifiers.secretId
                }
                if (secretIdentifiers.versionStage) {
                    params.VersionStage = secretIdentifiers.versionStage
                } else if (secretIdentifiers.versionId) {
                    params.VersionId = secretIdentifiers.versionId
                }
                const secret = await secretsManager.send(new GetSecretValueCommand(params))
                let secretValue
                if (secretIdentifiers.jsonKey) {
                    secretValue = JSON.parse(secret.SecretString)[secretIdentifiers.jsonKey]
                } else {
                    secretValue = secret.SecretString
                }
                return [uri, secretValue]
            })
            .value()
    )

    return _.fromPairs(batches)
}

module.exports = {getSecretValues}
