const cached = require('cached')
const getClient = require('./createNavigationClient')
const getSuiteForHost = require('./getSuiteForHost')

const suiteCache = cached('suite', {
    backend: {type: 'memory'},
    defaults: {
        expire: 0,
        freshFor: 43200,
        timeout: 11000,
    },
})

const getSuiteById = async (suiteId, host, bearerToken, verbose) => {
    const client = getClient(host, bearerToken)
    const query = `{suite: getSuite(suiteId: "${suiteId}") {\n    id\n    title\n    faviconUrl\n    navbarStylesUrl\n}}`

    const results = await client.send({
        query,
    })
    if (verbose) {
        console.log(`suite, host: ${suiteId}, ${host}`)
        console.log(`text: ${JSON.stringify(results.text)}`)
        console.log(`body: ${JSON.stringify(results.body)}`)
    }
    const resultsParse = JSON.parse(results.text)
    return resultsParse.data.suite
}

const getSuiteByHost = async (
    bearerToken,
    host = '',
    additionalHostMap = {},
    defaultSuite = '',
    verbose = false
) => {
    if (host.includes('localhost')) {
        return defaultSuite
    }
    if (!bearerToken) {
        console.warn('You need to use local ocelot')
    }
    const suiteId = getSuiteForHost(host, additionalHostMap, defaultSuite)
    if (verbose) {
        console.info(`suiteId: ${suiteId}`)
    }
    const suite = await suiteCache.getOrElse(suiteId, () =>
        getSuiteById(suiteId, host, bearerToken, verbose)
    )
    return suite
}

module.exports = getSuiteByHost
