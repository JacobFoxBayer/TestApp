import chai from 'chai'
import chaiAsPromised from 'chai-as-promised'
import sinon from 'sinon'
import sinonChai from 'sinon-chai'
import {JSDOM} from 'jsdom'

// example of using the should DSL without having to import it anywhere
// see chai docs
global.should = chai.should()
chai.use(chaiAsPromised)
chai.use(sinonChai)
global.sinon = sinon
global.expect = chai.expect

// eslint-disable-next-line import/no-dynamic-require,global-require
global.requireMiddleware = (path) => require(`../middleware/${path}`)
// eslint-disable-next-line import/no-dynamic-require,global-require
global.requireScript = (path) => require(`../menu-ui/scripts/${path}`)

process.on('unhandledRejection', () => {
    // console.info('Unhandled Rejection at: Promise', p, 'reason:', reason);
})

// mocha re-executes every time so we need to create this lazily
if (!global.document) {
    const doc = new JSDOM('<!doctype html><html><body></body></html>', {
        resources: 'usable',
        pretendToBeVisual: true
    })

    const win = doc.window

    global.document = win.document
    global.window = win
    global.navigator = win.navigator
    global.window.phoenix = {serviceBindings: {}}
}
