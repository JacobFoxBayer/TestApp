const analytics = require('../../src/analytics')

describe('analytics', () => {
    beforeEach(() => {
        window.ga = sinon.stub()
        window.dataLayer = [] // gtag reads this location
    })

    afterEach(() => {
        window.ga.reset()
    })

    it('pageView sends a pageview event', () => {
        analytics.pageView('/test')
        window.ga.calledWith('send', {
            hitType: 'pageView',
            transport: 'beacon',
            page: '/test'
        }).should.be.true
    })

    it('menuNavigation sends a menu navigation event', () => {
        analytics.menuNavigation('link text')
        window.ga.calledWith('send', {
            hitType: 'event',
            transport: 'beacon',
            eventCategory: 'Navigation Menu',
            eventAction: 'Click',
            eventLabel: 'link text',
            eventValue: undefined
        }).should.be.true
    })

    it('releaseNotification sends a release notification event', () => {
        analytics.releaseNotification('Dismiss')
        window.ga
            .calledWith('send', {
                hitType: 'event',
                transport: 'beacon',
                eventCategory: 'Release Notification',
                eventAction: 'Click',
                eventLabel: 'Dismiss',
                eventValue: undefined
            })
            .should.equal(true)
    })
    it('dropdownNavigation sends a dropdown navigation event', () => {
        analytics.dropdownNavigation('link text')
        window.ga.calledWith('send', {
            hitType: 'event',
            transport: 'beacon',
            eventCategory: 'Navigation Bar',
            eventAction: 'Click',
            eventLabel: 'link text',
            eventValue: undefined
        }).should.be.true
    })

    it('setAppName sends a set-dimension event for the current app name', () => {
        analytics.setAppName('PAPI')
        window.ga.calledWith('set', 'dimension1', 'PAPI').should.be.true
    })

    it('setAppName does nothing if no app name is provided.', () => {
        analytics.setAppName(null)
        window.ga.called.should.be.false
    })

    it('searchInput sends a search event when search text is provided', () => {
        analytics.searchInput('search query')
        window.ga.calledWith('send', {
            hitType: 'event',
            transport: 'beacon',
            eventCategory: 'Navigation Bar',
            eventAction: 'Search',
            eventLabel: 'search query',
            eventValue: undefined
        }).should.be.true
    })

    it('dropdownAction sends a dropdown action event', () => {
        analytics.dropDownAction('Messages: mark as read')
        window.ga.calledWith('send', {
            hitType: 'event',
            transport: 'beacon',
            eventCategory: 'Navigation Bar',
            eventAction: 'Dropdown Action',
            eventLabel: 'Messages: mark as read',
            eventValue: undefined
        }).should.be.true
    })

    it('sets an upcased userId for the session if called with a value', () => {
        analytics.setUser('jjOneS')
        window.ga.calledWith('set', 'userId', 'JJONES')
    })

    it('does not set an upcased userId no value is present', () => {
        analytics.setUser()
        window.ga.called.should.be.false
    })
})
