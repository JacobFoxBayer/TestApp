name: dev

on:
  workflow_dispatch:

env:
  GLOBAL_NPM_DEPENDENCIES: '@monsantoit/velocity-teams' # Global NPM Dependencies (space separated)
  IAM_VAULT_PATH: secret/velocity/np/common/aws/velocity-admin
  ARTIFACTORY_VAULT_PATH: secret/velocity/mech-user/artifactory/velocity_dev_team_tu
  GH_TOKEN: ${{ github.token }} # needed for GitHub CLI
  VELOCITY_NPM_PUBLISH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

jobs:
  run-deployment:
    concurrency:
      group: ${{ github.event.repository.name }}-dev
      cancel-in-progress: false
    runs-on: [self-hosted, linux, external-k8s]
    outputs:
      lastJobStatus: ${{ steps.lastJobStatus.outputs.status }}
    steps:

      - name: Get Last Job Status
        id: lastJobStatus
        run: |
          type -p curl >/dev/null || sudo apt install curl -y
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y
          echo "status=$(gh run list --repo bayer-int/${{ github.event.repository.name }} --workflow np.yaml | grep -oh "completed.*" | head -1 | awk '{print $2}')" >> $GITHUB_OUTPUT

      - name: Configure Git
        uses: actions/checkout@v3 # v2.4.0
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Import Secrets
        uses: hashicorp/vault-action@v2.3.0
        with:
          tlsSkipVerify: true
          url: https://vault.agro.services
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            ${{ env.IAM_VAULT_PATH }} accesskeyid | AWS_ACCESS_KEY_ID ;
            ${{ env.IAM_VAULT_PATH }} secretaccesskey | AWS_SECRET_ACCESS_KEY ;
            ${{ env.ARTIFACTORY_VAULT_PATH }} _auth | ARTIFACTORY_AUTH ;

      # TODO convert to artifactory
      - name: Configure npm
        run: |
          npm config set //npm.platforms.engineering/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}
          npm config set registry https://registry.npmjs.org
          npm config set @monsantoit:registry https://npm.platforms.engineering
          npm config set @element:registry https://npm.platforms.engineering

      - name: Install Global NPM Dependencies
        if: ${{ env.GLOBAL_NPM_DEPENDENCIES != '' }}
        run: npm i -g ${{ env.GLOBAL_NPM_DEPENDENCIES }}

      - name: NPM Install
        run: npm ci --legacy-peer-deps || npm install --legacy-peer-deps || exit 1

      - name: Test
        run: npm run test

      - name: Publish Candidate
        run: scripts/publish-candidate.sh

      - name: Notify
        uses: skitionek/notify-microsoft-teams@master
        if: ${{ failure() || steps.lastJobStatus.outputs.status != 'success' }}
        with:
          webhook_url: https://bayergroup.webhook.office.com/webhookb2/83166df7-d4d8-4600-87d7-ac39cb74c6b5@fcb2b37b-5da0-466b-9b83-0014b67a7c78/IncomingWebhook/8118940a3f0a491db7e962f902bb0982/595281ca-6cab-4e7a-9bf8-063652b85fdb
          needs: ${{ toJson(needs) }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}
          overwrite: "{title: `Dev Deploy: ${{ github.event.repository.name }}`}"

  refresh-dashboard:
    needs: run-deployment
    uses: bayer-int/phx-internal-ci-scripts/.github/workflows/refresh-dashboard.yml@main
    if: ${{ always() }}
    secrets: inherit
