"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.rule = void 0;
const graphql_1 = require("graphql");
const utils_js_1 = require("../utils.js");
exports.rule = {
    meta: {
        type: 'suggestion',
        hasSuggestions: true,
        docs: {
            url: 'https://the-guild.dev/graphql/eslint/rules/no-case-insensitive-enum-values-duplicates',
            category: 'Schema',
            recommended: true,
            description: 'Disallow case-insensitive enum values duplicates.',
            examples: [
                {
                    title: 'Incorrect',
                    code: /* GraphQL */ `
            enum MyEnum {
              Value
              VALUE
              ValuE
            }
          `,
                },
                {
                    title: 'Correct',
                    code: /* GraphQL */ `
            enum MyEnum {
              Value1
              Value2
              Value3
            }
          `,
                },
            ],
        },
        schema: [],
    },
    create(context) {
        const selector = [graphql_1.Kind.ENUM_TYPE_DEFINITION, graphql_1.Kind.ENUM_TYPE_EXTENSION].join(',');
        return {
            [selector](node) {
                var _a;
                const duplicates = (_a = node.values) === null || _a === void 0 ? void 0 : _a.filter((item, index, array) => array.findIndex(v => v.name.value.toLowerCase() === item.name.value.toLowerCase()) !==
                    index);
                for (const duplicate of duplicates || []) {
                    const enumName = duplicate.name.value;
                    context.report({
                        node: duplicate.name,
                        message: `Unexpected case-insensitive enum values duplicates for ${(0, utils_js_1.getNodeName)(duplicate)}`,
                        suggest: [
                            {
                                desc: `Remove \`${enumName}\` enum value`,
                                fix: fixer => fixer.remove(duplicate),
                            },
                        ],
                    });
                }
            },
        };
    },
};
